strict digraph G {
  org_apache_any23_http_DefaultHTTPClientConfiguration_getDefaultTimeout__ [ label="org.apache.any23.http.DefaultHTTPClientConfiguration.getDefaultTimeout()" ];
  org_apache_any23_extractor_xpath_TemplateXPathExtractorRuleImplTest_tearDown__ [ label="org.apache.any23.extractor.xpath.TemplateXPathExtractorRuleImplTest.tearDown()" ];
  extractDocumentLanguage_ExtractionParameters_ [ label="extractDocumentLanguage(ExtractionParameters)" ];
  org_apache_any23_extractor_SingleDocumentExtraction_isHTMLDocument__ [ label="org.apache.any23.extractor.SingleDocumentExtraction.isHTMLDocument()" ];
  org_apache_any23_validator_XMLValidationReportSerializerTest_testSerializeEmptyReport__ [ label="org.apache.any23.validator.XMLValidationReportSerializerTest.testSerializeEmptyReport()" ];
  org_apache_any23_extractor_csv_CSVExtractorTest_testExtractionTabSeparated__ [ label="org.apache.any23.extractor.csv.CSVExtractorTest.testExtractionTabSeparated()" ];
  org_apache_any23_extractor_rdf_RDFParserFactory_ExtendedTurtleParser_parse_java_io_InputStream__java_lang_String_ [ label="org.apache.any23.extractor.rdf.RDFParserFactory.ExtendedTurtleParser.parse(java.io.InputStream, java.lang.String)" ];
  org_apache_any23_configuration_DefaultConfigurationTest_testGetPropertySysOverride__ [ label="org.apache.any23.configuration.DefaultConfigurationTest.testGetPropertySysOverride()" ];
  org_apache_any23_extractor_html_TitleExtractorTest_testExtractPageTitle__ [ label="org.apache.any23.extractor.html.TitleExtractorTest.testExtractPageTitle()" ];
  org_apache_any23_extractor_MockTripleHandler_setContentLength_long_ [ label="org.apache.any23.extractor.MockTripleHandler.setContentLength(long)" ];
  org_apache_any23_extractor_MockTripleHandler_assertNextExpectation_java_lang_String_ [ label="org.apache.any23.extractor.MockTripleHandler.assertNextExpectation(java.lang.String)" ];
  org_apache_any23_extractor_html_HTMLMetaExtractorTest_testExtractPageMeta__ [ label="org.apache.any23.extractor.html.HTMLMetaExtractorTest.testExtractPageMeta()" ];
  org_apache_any23_writer_CompositeTripleHandler_getChilds__ [ label="org.apache.any23.writer.CompositeTripleHandler.getChilds()" ];
  openContext_ExtractionContext_ [ label="openContext(ExtractionContext)" ];
  org_apache_any23_writer_BenchmarkTripleHandler_StatObject_interimStart__ [ label="org.apache.any23.writer.BenchmarkTripleHandler.StatObject.interimStart()" ];
  addGeo_HTMLDocument__Resource_ [ label="addGeo(HTMLDocument, Resource)" ];
  org_apache_any23_rdf_PrefixesTest_testCannotAddPrefixTwice__ [ label="org.apache.any23.rdf.PrefixesTest.testCannotAddPrefixTwice()" ];
  addComponents_Node__Resource_ [ label="addComponents(Node, Resource)" ];
  org_apache_any23_validator_XMLValidationReportSerializerTest_testSerialize__ [ label="org.apache.any23.validator.XMLValidationReportSerializerTest.testSerialize()" ];
  addOrganizer_HTMLDocument__Resource_ [ label="addOrganizer(HTMLDocument, Resource)" ];
  addRRule_HTMLDocument__Resource_ [ label="addRRule(HTMLDocument, Resource)" ];
  org_apache_any23_source_HTTPDocumentSource_ensureOpen__ [ label="org.apache.any23.source.HTTPDocumentSource.ensureOpen()" ];
  org_apache_any23_util_FileUtils_readResourceContent_java_lang_String_ [ label="org.apache.any23.util.FileUtils.readResourceContent(java.lang.String)" ];
  org_apache_any23_util_FileUtils_readResourceContent_java_lang_Class__java_lang_String_ [ label="org.apache.any23.util.FileUtils.readResourceContent(java.lang.Class, java.lang.String)" ];
  org_apache_any23_extractor_html_MicroformatExtractor_getHTMLDocument__ [ label="org.apache.any23.extractor.html.MicroformatExtractor.getHTMLDocument()" ];
  org_apache_any23_extractor_rdfa_RDFaExtractor_setStopAtFirstError_boolean_ [ label="org.apache.any23.extractor.rdfa.RDFaExtractor.setStopAtFirstError(boolean)" ];
  org_apache_any23_extractor_html_HListingExtractor_addLister__ [ label="org.apache.any23.extractor.html.HListingExtractor.addLister()" ];
  org_apache_any23_extractor_microdata_MicrodataParserTest_testGetContentAsDate__ [ label="org.apache.any23.extractor.microdata.MicrodataParserTest.testGetContentAsDate()" ];
  org_apache_any23_extractor_microdata_MicrodataParserTest_extractItems_java_lang_String_ [ label="org.apache.any23.extractor.microdata.MicrodataParserTest.extractItems(java.lang.String)" ];
  org_apache_any23_extractor_html_HResumeExtractorTest_testLinkedInComplete__ [ label="org.apache.any23.extractor.html.HResumeExtractorTest.testLinkedInComplete()" ];
  org_apache_any23_vocab_Vocabulary_getProperty_java_lang_String_ [ label="org.apache.any23.vocab.Vocabulary.getProperty(java.lang.String)" ];
  org_apache_any23_extractor_html_HReviewAggregateExtractor_getBaseClassName__ [ label="org.apache.any23.extractor.html.HReviewAggregateExtractor.getBaseClassName()" ];
  getExactlyOneComponent_Resource_ [ label="getExactlyOneComponent(Resource)" ];
  org_apache_any23_extractor_yaml_ElementsProcessorTest_processSimple__ [ label="org.apache.any23.extractor.yaml.ElementsProcessorTest.processSimple()" ];
  org_apache_any23_vocab_XFN_isExtendedXFNLocalName_java_lang_String_ [ label="org.apache.any23.vocab.XFN.isExtendedXFNLocalName(java.lang.String)" ];
  org_apache_any23_http_AcceptHeaderBuilder_getAcceptHeader__ [ label="org.apache.any23.http.AcceptHeaderBuilder.getAcceptHeader()" ];
  org_apache_any23_http_AcceptHeaderBuilder_removeSpecificTypesCoveredByWildcard__ [ label="org.apache.any23.http.AcceptHeaderBuilder.removeSpecificTypesCoveredByWildcard()" ];
  org_apache_any23_http_AcceptHeaderBuilder_removeTypesCoveredByWildcard__ [ label="org.apache.any23.http.AcceptHeaderBuilder.removeTypesCoveredByWildcard()" ];
  org_apache_any23_extractor_html_microformats2_HRecipeExtractorTest_testModelNotEmpty__ [ label="org.apache.any23.extractor.html.microformats2.HRecipeExtractorTest.testModelNotEmpty()" ];
  cellTypeToType_CellType_ [ label="cellTypeToType(CellType)" ];
  org_apache_any23_extractor_html_HTMLDocument_findAllByClassName_java_lang_String_ [ label="org.apache.any23.extractor.html.HTMLDocument.findAllByClassName(java.lang.String)" ];
  org_apache_any23_extractor_html_HTMLDocument_getDocument__ [ label="org.apache.any23.extractor.html.HTMLDocument.getDocument()" ];
  org_apache_any23_filter_IgnoreAccidentalRDFa_close__ [ label="org.apache.any23.filter.IgnoreAccidentalRDFa.close()" ];
  org_apache_any23_extractor_html_microformats2_HItemExtractor_getBaseClassName__ [ label="org.apache.any23.extractor.html.microformats2.HItemExtractor.getBaseClassName()" ];
  org_apache_any23_writer_WriterFactory_getRdfWriter_java_io_OutputStream_ [ label="org.apache.any23.writer.WriterFactory.getRdfWriter(java.io.OutputStream)" ];
  org_apache_any23_Any23_setHTTPUserAgent_java_lang_String_ [ label="org.apache.any23.Any23.setHTTPUserAgent(java.lang.String)" ];
  org_apache_any23_vocab_VCard_createProperty_java_lang_String_ [ label="org.apache.any23.vocab.VCard.createProperty(java.lang.String)" ];
  org_apache_any23_extractor_html_HTMLMetaExtractor_Meta_setPragmaDirective_boolean_ [ label="org.apache.any23.extractor.html.HTMLMetaExtractor.Meta.setPragmaDirective(boolean)" ];
  org_apache_any23_servlet_ServletTest_testContentNegotiationForNTriples__ [ label="org.apache.any23.servlet.ServletTest.testContentNegotiationForNTriples()" ];
  org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_ [ label="org.apache.any23.servlet.ServletTest.doGetRequest(java.lang.String)" ];
  org_apache_any23_extractor_html_HListingExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.HListingExtractorFactory.getDescriptionInstance()" ];
  findExactlyOneObject_Resource__IRI_ [ label="findExactlyOneObject(Resource, IRI)" ];
  org_apache_any23_extractor_html_AbstractExtractorTestCase_getFailedExtractionMessage__ [ label="org.apache.any23.extractor.html.AbstractExtractorTestCase.getFailedExtractionMessage()" ];
  org_apache_any23_configuration_DefaultConfiguration_defineProperty_java_lang_String_ [ label="org.apache.any23.configuration.DefaultConfiguration.defineProperty(java.lang.String)" ];
  org_apache_any23_extractor_html_HTMLDocument_extractRelTag_java_lang_String_ [ label="org.apache.any23.extractor.html.HTMLDocument.extractRelTag(java.lang.String)" ];
  org_apache_any23_extractor_calendar_XCalExtractorTest_testRFC6321example1__ [ label="org.apache.any23.extractor.calendar.XCalExtractorTest.testRFC6321example1()" ];
  org_apache_any23_extractor_html_HTMLDocument_getPathToLocalRoot__ [ label="org.apache.any23.extractor.html.HTMLDocument.getPathToLocalRoot()" ];
  org_apache_any23_extractor_rdfa_SemarglSink_createResource_java_lang_String_ [ label="org.apache.any23.extractor.rdfa.SemarglSink.createResource(java.lang.String)" ];
  org_apache_any23_rdf_PrefixesTest_testCannotExpandUndefined__ [ label="org.apache.any23.rdf.PrefixesTest.testCannotExpandUndefined()" ];
  org_apache_any23_extractor_rdf_NQuadsExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.rdf.NQuadsExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_vocab_HCard_getInstance__ [ label="org.apache.any23.vocab.HCard.getInstance()" ];
  org_apache_any23_writer_CountingTripleHandler_reset__ [ label="org.apache.any23.writer.CountingTripleHandler.reset()" ];
  org_apache_any23_extractor_html_DocumentReport_getReport__ [ label="org.apache.any23.extractor.html.DocumentReport.getReport()" ];
  org_apache_any23_extractor_html_JsoupUtils_parse_java_io_InputStream__java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.html.JsoupUtils.parse(java.io.InputStream, java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_ExtractionResult_close__ [ label="org.apache.any23.extractor.ExtractionResult.close()" ];
  writeParams_BNode__ICalParameters__ExtractionResult_ [ label="writeParams(BNode, ICalParameters, ExtractionResult)" ];
  org_apache_any23_extractor_ExtractorGroup_getNumOfExtractors__ [ label="org.apache.any23.extractor.ExtractorGroup.getNumOfExtractors()" ];
  org_apache_any23_encoding_TikaEncodingDetectorTest_testUTF8HTML__ [ label="org.apache.any23.encoding.TikaEncodingDetectorTest.testUTF8HTML()" ];
  org_apache_any23_encoding_TikaEncodingDetectorTest_assertEncoding_java_lang_String__java_lang_String_ [ label="org.apache.any23.encoding.TikaEncodingDetectorTest.assertEncoding(java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_html_microformats2_HCardExtractor_getDescription__ [ label="org.apache.any23.extractor.html.microformats2.HCardExtractor.getDescription()" ];
  addPrice_HTMLDocument__BNode_ [ label="addPrice(HTMLDocument, BNode)" ];
  org_apache_any23_servlet_ServletTest_testTriXResponseFormat__ [ label="org.apache.any23.servlet.ServletTest.testTriXResponseFormat()" ];
  org_apache_any23_servlet_ServletTest_doPostRequest_java_lang_String__java_lang_String__java_lang_String_ [ label="org.apache.any23.servlet.ServletTest.doPostRequest(java.lang.String, java.lang.String, java.lang.String)" ];
  org_apache_any23_servlet_ServletTest_assertContainsTag_java_lang_String__boolean__int__java_lang_String_ [ label="org.apache.any23.servlet.ServletTest.assertContainsTag(java.lang.String, boolean, int, java.lang.String)" ];
  iso_8859_1_or_15_TextStatistics_ [ label="iso_8859_1_or_15(TextStatistics)" ];
  org_apache_any23_encoding_EncodingUtils_forName_java_lang_String_ [ label="org.apache.any23.encoding.EncodingUtils.forName(java.lang.String)" ];
  org_apache_any23_writer_JSONWriterTest_testJSONLDWriting__ [ label="org.apache.any23.writer.JSONWriterTest.testJSONLDWriting()" ];
  org_apache_any23_extractor_rdfa_RDFa11Parser_resolveCURIEOrIRI_java_lang_String__boolean_ [ label="org.apache.any23.extractor.rdfa.RDFa11Parser.resolveCURIEOrIRI(java.lang.String, boolean)" ];
  org_apache_any23_extractor_rdfa_RDFa11Parser_isCURIE_java_lang_String_ [ label="org.apache.any23.extractor.rdfa.RDFa11Parser.isCURIE(java.lang.String)" ];
  org_apache_any23_extractor_rdfa_RDFa11Parser_resolveNamespacedIRI_java_lang_String__org_apache_any23_extractor_rdfa_RDFa11Parser_ResolutionPolicy_ [ label="org.apache.any23.extractor.rdfa.RDFa11Parser.resolveNamespacedIRI(java.lang.String, org.apache.any23.extractor.rdfa.RDFa11Parser.ResolutionPolicy)" ];
  org_apache_any23_extractor_rdfa_RDFa11Parser_isAbsoluteIRI_java_lang_String_ [ label="org.apache.any23.extractor.rdfa.RDFa11Parser.isAbsoluteIRI(java.lang.String)" ];
  org_apache_any23_extractor_rdfa_RDFa11Parser_resolveIRI_java_lang_String_ [ label="org.apache.any23.extractor.rdfa.RDFa11Parser.resolveIRI(java.lang.String)" ];
  org_apache_any23_extractor_html_HCardExtractor_resetExtractor__ [ label="org.apache.any23.extractor.html.HCardExtractor.resetExtractor()" ];
  org_apache_any23_servlet_ServletTest_doRequest_java_lang_String__java_lang_String_ [ label="org.apache.any23.servlet.ServletTest.doRequest(java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_microdata_MicrodataParserException_toString__ [ label="org.apache.any23.extractor.microdata.MicrodataParserException.toString()" ];
  org_apache_any23_extractor_microdata_MicrodataParserException_toJSON__ [ label="org.apache.any23.extractor.microdata.MicrodataParserException.toJSON()" ];
  org_apache_any23_extractor_calendar_BaseCalendarExtractorTest_TestRDFHandler_startRDF__ [ label="org.apache.any23.extractor.calendar.BaseCalendarExtractorTest.TestRDFHandler.startRDF()" ];
  org_apache_any23_configuration_DefaultConfigurationTest_testModifiableConfigurationSuccess__ [ label="org.apache.any23.configuration.DefaultConfigurationTest.testModifiableConfigurationSuccess()" ];
  org_apache_any23_extractor_html_EncodingTest_parseHTML_java_lang_String_ [ label="org.apache.any23.extractor.html.EncodingTest.parseHTML(java.lang.String)" ];
  org_apache_any23_mime_MIMEType_getMajorType__ [ label="org.apache.any23.mime.MIMEType.getMajorType()" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testMultipleActions__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testMultipleActions()" ];
  extractEntityAsEmbeddedProperty_HTMLDocument__BNode__ExtractionResult_ [ label="extractEntityAsEmbeddedProperty(HTMLDocument, BNode, ExtractionResult)" ];
  org_apache_any23_configuration_DefaultConfigurationTest_tearDown__ [ label="org.apache.any23.configuration.DefaultConfigurationTest.tearDown()" ];
  org_apache_any23_http_HTTPClient_openInputStream_java_lang_String_ [ label="org.apache.any23.http.HTTPClient.openInputStream(java.lang.String)" ];
  org_apache_any23_vocab_Excel_getInstance__ [ label="org.apache.any23.vocab.Excel.getInstance()" ];
  org_apache_any23_Any23Test_testModifiableConfiguration_issue183__ [ label="org.apache.any23.Any23Test.testModifiableConfiguration_issue183()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectTextRDFByMeta__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectTextRDFByMeta()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByMimeTypeHint_java_lang_String__java_lang_String_ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.detectMIMETypeByMimeTypeHint(java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_html_HCardName_FieldValue_getValues__ [ label="org.apache.any23.extractor.html.HCardName.FieldValue.getValues()" ];
  org_apache_any23_extractor_html_microformats2_HAdrExtractor_getDescription__ [ label="org.apache.any23.extractor.html.microformats2.HAdrExtractor.getDescription()" ];
  org_apache_any23_rdf_PopularPrefixes_getResourceAsStream__ [ label="org.apache.any23.rdf.PopularPrefixes.getResourceAsStream()" ];
  reportRuleError_Rule__Exception__String_ [ label="reportRuleError(Rule, Exception, String)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testAncestors__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testAncestors()" ];
  org_apache_any23_rdf_RDFUtilsTest_testFixAbsoluteIRI__ [ label="org.apache.any23.rdf.RDFUtilsTest.testFixAbsoluteIRI()" ];
  serializeVocabulary_IRI__IRI____IRI____Map__RDFWriter_ [ label="serializeVocabulary(IRI, IRI[], IRI[], Map, RDFWriter)" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_getDefaultLiteralLanguage__ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.getDefaultLiteralLanguage()" ];
  org_apache_any23_extractor_rdf_TriXExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.rdf.TriXExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_mime_MIMEType_toString__ [ label="org.apache.any23.mime.MIMEType.toString()" ];
  org_apache_any23_mime_MIMEType_getFullType__ [ label="org.apache.any23.mime.MIMEType.getFullType()" ];
  org_apache_any23_mime_TikaMIMETypeDetector_checkTurtleFormat_java_io_InputStream_ [ label="org.apache.any23.mime.TikaMIMETypeDetector.checkTurtleFormat(java.io.InputStream)" ];
  org_apache_any23_mime_TikaMIMETypeDetector_extractDataSample_java_io_InputStream__char_ [ label="org.apache.any23.mime.TikaMIMETypeDetector.extractDataSample(java.io.InputStream, char)" ];
  getKey_ExtractorFactory_ [ label="getKey(ExtractorFactory)" ];
  org_apache_any23_vocab_OGPArticle_getInstance__ [ label="org.apache.any23.vocab.OGPArticle.getInstance()" ];
  org_apache_any23_servlet_conneg_MediaRangeSpec_buildMediaType__ [ label="org.apache.any23.servlet.conneg.MediaRangeSpec.buildMediaType()" ];
  org_apache_any23_servlet_conneg_MediaRangeSpec_escape_java_lang_String_ [ label="org.apache.any23.servlet.conneg.MediaRangeSpec.escape(java.lang.String)" ];
  org_apache_any23_writer_LoggingTripleHandler_setContentLength_long_ [ label="org.apache.any23.writer.LoggingTripleHandler.setContentLength(long)" ];
  org_apache_any23_http_AcceptHeaderBuilderTest_testSingleHeaderSubtypeWildcard__ [ label="org.apache.any23.http.AcceptHeaderBuilderTest.testSingleHeaderSubtypeWildcard()" ];
  org_apache_any23_http_AcceptHeaderBuilderTest_buildHeader_java_util_Collection_java_lang_String__ [ label="org.apache.any23.http.AcceptHeaderBuilderTest.buildHeader(java.util.Collection<java.lang.String>)" ];
  org_apache_any23_rdf_RDFUtils_fixAbsoluteIRI_java_lang_String_ [ label="org.apache.any23.rdf.RDFUtils.fixAbsoluteIRI(java.lang.String)" ];
  org_apache_any23_rdf_RDFUtils_fixIRIWithException_java_lang_String_ [ label="org.apache.any23.rdf.RDFUtils.fixIRIWithException(java.lang.String)" ];
  runExtractor_ExtractionParameters__String__Extractor_ [ label="runExtractor(ExtractionParameters, String, Extractor)" ];
  org_apache_any23_extractor_SingleDocumentExtraction_ensureHasLocalCopy__ [ label="org.apache.any23.extractor.SingleDocumentExtraction.ensureHasLocalCopy()" ];
  org_apache_any23_vocab_LKIFCoreRelativePlaces_getInstance__ [ label="org.apache.any23.vocab.LKIFCoreRelativePlaces.getInstance()" ];
  org_apache_any23_extractor_microdata_ItemPropValue_getSdf__ [ label="org.apache.any23.extractor.microdata.ItemPropValue.getSdf()" ];
  getWriter_OutputStream_ [ label="getWriter(OutputStream)" ];
  org_apache_any23_AbstractAny23TestBase_getDocumentSourceFromResource_java_lang_String__java_lang_String_ [ label="org.apache.any23.AbstractAny23TestBase.getDocumentSourceFromResource(java.lang.String, java.lang.String)" ];
  org_apache_any23_AbstractAny23TestBase_copyResourceToTempFile_java_lang_String_ [ label="org.apache.any23.AbstractAny23TestBase.copyResourceToTempFile(java.lang.String)" ];
  org_apache_any23_extractor_rdf_JsonCleaningInputStream_unread_java_io_PushbackInputStream__int_ [ label="org.apache.any23.extractor.rdf.JsonCleaningInputStream.unread(java.io.PushbackInputStream, int)" ];
  startDocument_IRI_ [ label="startDocument(IRI)" ];
  org_apache_any23_writer_JSONWriter_start_boolean_ [ label="org.apache.any23.writer.JSONWriter.start(boolean)" ];
  addIdentifiers_HTMLDocument__BNode_ [ label="addIdentifiers(HTMLDocument, BNode)" ];
  org_apache_any23_rdf_PrefixesTest_setUp__ [ label="org.apache.any23.rdf.PrefixesTest.setUp()" ];
  org_apache_any23_http_HTTPClientConfiguration_getDefaultTimeout__ [ label="org.apache.any23.http.HTTPClientConfiguration.getDefaultTimeout()" ];
  isAncestorOf_Node__Node_ [ label="isAncestorOf(Node, Node)" ];
  org_apache_any23_extractor_rdfa_RDFa11ParserTest_testUpdateIRIMapping__ [ label="org.apache.any23.extractor.rdfa.RDFa11ParserTest.testUpdateIRIMapping()" ];
  org_apache_any23_extractor_rdfa_RDFa11ParserTest_getRootDocument__ [ label="org.apache.any23.extractor.rdfa.RDFa11ParserTest.getRootDocument()" ];
  getValidationMode_HttpServletRequest_ [ label="getValidationMode(HttpServletRequest)" ];
  org_apache_any23_extractor_ExampleInputOutput_isBlindExtractor__ [ label="org.apache.any23.extractor.ExampleInputOutput.isBlindExtractor()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.getExtractorFactory()" ];
  org_apache_any23_cli_ToolRunner_printVersionInfo__ [ label="org.apache.any23.cli.ToolRunner.printVersionInfo()" ];
  org_apache_any23_cli_ToolRunner_getOsFamily__ [ label="org.apache.any23.cli.ToolRunner.getOsFamily()" ];
  org_apache_any23_extractor_SingleDocumentExtractionReport_getValidationReport__ [ label="org.apache.any23.extractor.SingleDocumentExtractionReport.getValidationReport()" ];
  org_apache_any23_rdf_RDFUtils_isAbsoluteIRI_java_lang_String_ [ label="org.apache.any23.rdf.RDFUtils.isAbsoluteIRI(java.lang.String)" ];
  org_apache_any23_util_DiscoveryUtils_getClassesInPackage_java_lang_String__java_lang_Class_ [ label="org.apache.any23.util.DiscoveryUtils.getClassesInPackage(java.lang.String, java.lang.Class)" ];
  org_apache_any23_util_DiscoveryUtils_getClassesInPackage_java_lang_String_ [ label="org.apache.any23.util.DiscoveryUtils.getClassesInPackage(java.lang.String)" ];
  org_apache_any23_util_DiscoveryUtils_contains_java_lang_Object____java_lang_Object_ [ label="org.apache.any23.util.DiscoveryUtils.contains(java.lang.Object[], java.lang.Object)" ];
  org_apache_any23_writer_NQuadsWriterFactory_getIdentifier__ [ label="org.apache.any23.writer.NQuadsWriterFactory.getIdentifier()" ];
  documentToInputStream_Document_ [ label="documentToInputStream(Document)" ];
  org_apache_any23_vocab_XFN_getInstance__ [ label="org.apache.any23.vocab.XFN.getInstance()" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testListingWithouthContent__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testListingWithouthContent()" ];
  org_apache_any23_extractor_SingleDocumentExtraction_filterExtractorsByMIMEType__ [ label="org.apache.any23.extractor.SingleDocumentExtraction.filterExtractorsByMIMEType()" ];
  org_apache_any23_plugin_Any23PluginManagerTest_after__ [ label="org.apache.any23.plugin.Any23PluginManagerTest.after()" ];
  addLogo_HTMLDocument__BNode_ [ label="addLogo(HTMLDocument, BNode)" ];
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_VariantSpec_isDefault__ [ label="org.apache.any23.servlet.conneg.ContentTypeNegotiator.VariantSpec.isDefault()" ];
  org_apache_any23_extractor_ExtractorRegistry_getExtractorGroup_java_util_List_java_lang_String__ [ label="org.apache.any23.extractor.ExtractorRegistry.getExtractorGroup(java.util.List<java.lang.String>)" ];
  org_apache_any23_util_FileUtils_readFileContent_java_io_File_ [ label="org.apache.any23.util.FileUtils.readFileContent(java.io.File)" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_TestRDFHandler_startRDF__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.TestRDFHandler.startRDF()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testEMailNotUriReal__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testEMailNotUriReal()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.assertDefaultVCard()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_assertJohn__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.assertJohn()" ];
  org_apache_any23_extractor_rdf_BaseRDFExtractor_isVerifyDataType__ [ label="org.apache.any23.extractor.rdf.BaseRDFExtractor.isVerifyDataType()" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testActionsOutside__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testActionsOutside()" ];
  createWorkbook_IRI__InputStream_ [ label="createWorkbook(IRI, InputStream)" ];
  org_apache_any23_extractor_html_EmbeddedJSONLDExtractorTest_testEmbeddedJSONLDInBody__ [ label="org.apache.any23.extractor.html.EmbeddedJSONLDExtractorTest.testEmbeddedJSONLDInBody()" ];
  org_apache_any23_writer_CompositeTripleHandler_setContentLength_long_ [ label="org.apache.any23.writer.CompositeTripleHandler.setContentLength(long)" ];
  org_apache_any23_extractor_html_EmbeddedJSONLDExtractor_JSONLDScript_equals_java_lang_Object_ [ label="org.apache.any23.extractor.html.EmbeddedJSONLDExtractor.JSONLDScript.equals(java.lang.Object)" ];
  org_apache_any23_configuration_SettingsTest_BadKeyCreator_badKey__ [ label="org.apache.any23.configuration.SettingsTest.BadKeyCreator.badKey()" ];
  org_apache_any23_writer_JSONWriter_setAnnotated_boolean_ [ label="org.apache.any23.writer.JSONWriter.setAnnotated(boolean)" ];
  org_apache_any23_extractor_SingleDocumentExtractionTest_testNestedMicroformatsManaged__ [ label="org.apache.any23.extractor.SingleDocumentExtractionTest.testNestedMicroformatsManaged()" ];
  org_apache_any23_extractor_SingleDocumentExtractionTest_getInstance_java_lang_String_ [ label="org.apache.any23.extractor.SingleDocumentExtractionTest.getInstance(java.lang.String)" ];
  org_apache_any23_extractor_SingleDocumentExtractionTest_logStorageContent__ [ label="org.apache.any23.extractor.SingleDocumentExtractionTest.logStorageContent()" ];
  org_apache_any23_validator_ValidationReport_RuleError_getOrigin__ [ label="org.apache.any23.validator.ValidationReport.RuleError.getOrigin()" ];
  org_apache_any23_vocab_CSV_createProperty_java_lang_String_ [ label="org.apache.any23.vocab.CSV.createProperty(java.lang.String)" ];
  tail_Node__int_ [ label="tail(Node, int)" ];
  org_apache_any23_encoding_TikaEncodingDetectorTest_testUtf8Simple__ [ label="org.apache.any23.encoding.TikaEncodingDetectorTest.testUtf8Simple()" ];
  org_apache_any23_encoding_TikaEncodingDetectorTest_bytes_java_lang_String__java_nio_charset_Charset_ [ label="org.apache.any23.encoding.TikaEncodingDetectorTest.bytes(java.lang.String, java.nio.charset.Charset)" ];
  org_apache_any23_configuration_Settings_find_java_lang_String_ [ label="org.apache.any23.configuration.Settings.find(java.lang.String)" ];
  org_apache_any23_extractor_calendar_XCalExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.calendar.XCalExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_writer_BaseWriterFactory_getRdfFormat__ [ label="org.apache.any23.writer.BaseWriterFactory.getRdfFormat()" ];
  org_apache_any23_plugin_crawler_SharedData_getPattern__ [ label="org.apache.any23.plugin.crawler.SharedData.getPattern()" ];
  org_apache_any23_servlet_conneg_MediaRangeSpec_getSubtype__ [ label="org.apache.any23.servlet.conneg.MediaRangeSpec.getSubtype()" ];
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_VariantSpec_makeDefault__ [ label="org.apache.any23.servlet.conneg.ContentTypeNegotiator.VariantSpec.makeDefault()" ];
  printLiteral_Literal_ [ label="printLiteral(Literal)" ];
  conditionallyAddLiteralProperty_Node__Resource__IRI__Literal_ [ label="conditionallyAddLiteralProperty(Node, Resource, IRI, Literal)" ];
  org_apache_any23_extractor_html_MicroformatExtractor_containsScriptBlock_java_lang_String_ [ label="org.apache.any23.extractor.html.MicroformatExtractor.containsScriptBlock(java.lang.String)" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testListerEmail__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testListerEmail()" ];
  org_apache_any23_extractor_rdfa_RDFa11ParserTest_testGetDocumentBase__ [ label="org.apache.any23.extractor.rdfa.RDFa11ParserTest.testGetDocumentBase()" ];
  org_apache_any23_extractor_html_EntityBasedMicroformatExtractor_extract__ [ label="org.apache.any23.extractor.html.EntityBasedMicroformatExtractor.extract()" ];
  org_apache_any23_extractor_html_EntityBasedMicroformatExtractor_getBaseClassName__ [ label="org.apache.any23.extractor.html.EntityBasedMicroformatExtractor.getBaseClassName()" ];
  org_apache_any23_extractor_html_EntityBasedMicroformatExtractor_resetExtractor__ [ label="org.apache.any23.extractor.html.EntityBasedMicroformatExtractor.resetExtractor()" ];
  org_apache_any23_writer_TripleHandler_close__ [ label="org.apache.any23.writer.TripleHandler.close()" ];
  org_apache_any23_extractor_html_HRecipeExtractor_getBaseClassName__ [ label="org.apache.any23.extractor.html.HRecipeExtractor.getBaseClassName()" ];
  org_apache_any23_writer_TripleFormat_Capabilities_has_org_apache_any23_writer_TripleFormat_Capabilities_ [ label="org.apache.any23.writer.TripleFormat.Capabilities.has(org.apache.any23.writer.TripleFormat.Capabilities)" ];
  org_apache_any23_writer_NQuadsWriterFactory_getTripleFormat__ [ label="org.apache.any23.writer.NQuadsWriterFactory.getTripleFormat()" ];
  org_apache_any23_extractor_SingleDocumentExtraction_getMatchingExtractors__ [ label="org.apache.any23.extractor.SingleDocumentExtraction.getMatchingExtractors()" ];
  org_apache_any23_extractor_csv_CSVReaderBuilder_build_java_io_InputStream_ [ label="org.apache.any23.extractor.csv.CSVReaderBuilder.build(java.io.InputStream)" ];
  org_apache_any23_extractor_csv_CSVReaderBuilder_getBestStrategy_java_io_InputStream_ [ label="org.apache.any23.extractor.csv.CSVReaderBuilder.getBestStrategy(java.io.InputStream)" ];
  org_apache_any23_extractor_csv_CSVReaderBuilder_getCSVStrategyFromConfiguration__ [ label="org.apache.any23.extractor.csv.CSVReaderBuilder.getCSVStrategyFromConfiguration()" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testListerFn__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testListerFn()" ];
  writeProperty_BNode__ICalPropertyScribe__ICalProperty__WriteContext__ExtractionResult_ [ label="writeProperty(BNode, ICalPropertyScribe, ICalProperty, WriteContext, ExtractionResult)" ];
  org_apache_any23_extractor_calendar_BaseCalendarExtractor_parseTimeZoneId_java_lang_String_ [ label="org.apache.any23.extractor.calendar.BaseCalendarExtractor.parseTimeZoneId(java.lang.String)" ];
  org_apache_any23_extractor_microdata_MicrodataExtractor_toAbsoluteIRI_java_lang_String_ [ label="org.apache.any23.extractor.microdata.MicrodataExtractor.toAbsoluteIRI(java.lang.String)" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_test13__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.test13()" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_assertDefault_java_lang_String_ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.assertDefault(java.lang.String)" ];
  org_apache_any23_cli_ToolRunner_getToolsInClasspath__ [ label="org.apache.any23.cli.ToolRunner.getToolsInClasspath()" ];
  org_apache_any23_configuration_DefaultConfigurationTest_testGetPropertyOrFailOk__ [ label="org.apache.any23.configuration.DefaultConfigurationTest.testGetPropertyOrFailOk()" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_testRepetitiveEvent__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.testRepetitiveEvent()" ];
  org_apache_any23_extractor_calendar_ICalExtractorTest_testBadTimezone__ [ label="org.apache.any23.extractor.calendar.ICalExtractorTest.testBadTimezone()" ];
  findActions_HTMLDocument_ [ label="findActions(HTMLDocument)" ];
  org_apache_any23_util_StreamUtils_asLines_java_io_InputStream_ [ label="org.apache.any23.util.StreamUtils.asLines(java.io.InputStream)" ];
  org_apache_any23_util_StreamUtils_closeGracefully_java_io_Closeable_ [ label="org.apache.any23.util.StreamUtils.closeGracefully(java.io.Closeable)" ];
  doPost_HttpServletRequest__HttpServletResponse_ [ label="doPost(HttpServletRequest, HttpServletResponse)" ];
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_VariantSpec_getAliases__ [ label="org.apache.any23.servlet.conneg.ContentTypeNegotiator.VariantSpec.getAliases()" ];
  org_apache_any23_extractor_rdfa_RDFa11Parser_getVocabulary__ [ label="org.apache.any23.extractor.rdfa.RDFa11Parser.getVocabulary()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_setUp__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.setUp()" ];
  org_apache_any23_plugin_crawler_SiteCrawler_getMaxPages__ [ label="org.apache.any23.plugin.crawler.SiteCrawler.getMaxPages()" ];
  org_apache_any23_util_FileUtils_visitFilesRecursively_java_io_File__java_io_FilenameFilter__java_util_List_java_io_File__ [ label="org.apache.any23.util.FileUtils.visitFilesRecursively(java.io.File, java.io.FilenameFilter, java.util.List<java.io.File>)" ];
  org_apache_any23_extractor_rdf_NTriplesExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.rdf.NTriplesExtractorFactory.createExtractor()" ];
  shouldVisit_Page__WebURL_ [ label="shouldVisit(Page, WebURL)" ];
  run_ExtractionParameters_ [ label="run(ExtractionParameters)" ];
  org_apache_any23_rdf_PrefixesTest_testIsVolatile__ [ label="org.apache.any23.rdf.PrefixesTest.testIsVolatile()" ];
  org_apache_any23_extractor_rdf_FunctionalSyntaxExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.rdf.FunctionalSyntaxExtractorTest.getExtractorFactory()" ];
  org_apache_any23_util_StringUtils_escapeDoubleQuotes_java_lang_String_ [ label="org.apache.any23.util.StringUtils.escapeDoubleQuotes(java.lang.String)" ];
  org_apache_any23_plugin_htmlscraper_HTMLScraperExtractor_getTextExtractors__ [ label="org.apache.any23.plugin.htmlscraper.HTMLScraperExtractor.getTextExtractors()" ];
  org_apache_any23_writer_TripleFormat_getExtensions__ [ label="org.apache.any23.writer.TripleFormat.getExtensions()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRDFXMLByMeta__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectRDFXMLByMeta()" ];
  setField_String__TextField_ [ label="setField(String, TextField)" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_testTransparentEvent__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.testTransparentEvent()" ];
  org_apache_any23_Any23Test_testNTriplesDetectionAndExtraction__ [ label="org.apache.any23.Any23Test.testNTriplesDetectionAndExtraction()" ];
  org_apache_any23_Any23Test_assertDetectionAndExtraction_java_lang_String_ [ label="org.apache.any23.Any23Test.assertDetectionAndExtraction(java.lang.String)" ];
  verifyPredicateOccurrence_TripleHandler__IRI__int_ [ label="verifyPredicateOccurrence(TripleHandler, IRI, int)" ];
  org_apache_any23_extractor_html_HeadLinkExtractor_getDescription__ [ label="org.apache.any23.extractor.html.HeadLinkExtractor.getDescription()" ];
  org_apache_any23_validator_DefaultDOMDocument_getNode_java_lang_String_ [ label="org.apache.any23.validator.DefaultDOMDocument.getNode(java.lang.String)" ];
  doGet_HttpServletRequest__HttpServletResponse_ [ label="doGet(HttpServletRequest, HttpServletResponse)" ];
  org_apache_any23_extractor_html_microformats2_HAdrExtractor_getBaseClassName__ [ label="org.apache.any23.extractor.html.microformats2.HAdrExtractor.getBaseClassName()" ];
  org_apache_any23_plugin_htmlscraper_HTMLScraperExtractorFactory_createExtractor__ [ label="org.apache.any23.plugin.htmlscraper.HTMLScraperExtractorFactory.createExtractor()" ];
  org_apache_any23_extractor_xpath_TemplateXPathExtractorRuleImplTest_testAcceptIRI__ [ label="org.apache.any23.extractor.xpath.TemplateXPathExtractorRuleImplTest.testAcceptIRI()" ];
  org_apache_any23_extractor_xpath_TemplateSubject_getValueInternal_java_lang_String_ [ label="org.apache.any23.extractor.xpath.TemplateSubject.getValueInternal(java.lang.String)" ];
  org_apache_any23_extractor_microdata_MicrodataParserException_getErrorLocationBeginRow__ [ label="org.apache.any23.extractor.microdata.MicrodataParserException.getErrorLocationBeginRow()" ];
  org_apache_any23_extractor_xpath_Term_getInternalValue__ [ label="org.apache.any23.extractor.xpath.Term.getInternalValue()" ];
  serializeVocabulary_Vocabulary__RDFWriter_ [ label="serializeVocabulary(Vocabulary, RDFWriter)" ];
  org_apache_any23_extractor_MockTripleHandler_close__ [ label="org.apache.any23.extractor.MockTripleHandler.close()" ];
  org_apache_any23_util_FileUtils_dumpContent_java_io_File__java_lang_Throwable_ [ label="org.apache.any23.util.FileUtils.dumpContent(java.io.File, java.lang.Throwable)" ];
  org_apache_any23_util_FileUtils_dumpContent_java_io_File__java_lang_String_ [ label="org.apache.any23.util.FileUtils.dumpContent(java.io.File, java.lang.String)" ];
  org_apache_any23_extractor_microdata_ItemPropValue_isLink__ [ label="org.apache.any23.extractor.microdata.ItemPropValue.isLink()" ];
  pushMappings_Node__List_ [ label="pushMappings(Node, List)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testRDFXMLByContentAndName__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testRDFXMLByContentAndName()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByContentAndName_java_lang_String__java_util_Collection_java_lang_String__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.detectMIMETypeByContentAndName(java.lang.String, java.util.Collection<java.lang.String>)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestRdfXml__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.manifestRdfXml()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testMailto2__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testMailto2()" ];
  addSyndications_HTMLDocument__BNode_ [ label="addSyndications(HTMLDocument, BNode)" ];
  org_apache_any23_extractor_html_AbstractExtractorTestCase_tearDown__ [ label="org.apache.any23.extractor.html.AbstractExtractorTestCase.tearDown()" ];
  org_apache_any23_rdf_RDFUtilsTest_testGetNQuadsParser__ [ label="org.apache.any23.rdf.RDFUtilsTest.testGetNQuadsParser()" ];
  org_apache_any23_extractor_example_ExampleExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.example.ExampleExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_ExtractionReport_getExtractorIssues_java_lang_String_ [ label="org.apache.any23.ExtractionReport.getExtractorIssues(java.lang.String)" ];
  org_apache_any23_util_MathUtils_md5_java_lang_String_ [ label="org.apache.any23.util.MathUtils.md5(java.lang.String)" ];
  processWorkbook_IRI__Workbook__ExtractionResult_ [ label="processWorkbook(IRI, Workbook, ExtractionResult)" ];
  org_apache_any23_vocab_Vocabulary_getComments__ [ label="org.apache.any23.vocab.Vocabulary.getComments()" ];
  org_apache_any23_vocab_Vocabulary_fillResourceToCommentMap__ [ label="org.apache.any23.vocab.Vocabulary.fillResourceToCommentMap()" ];
  org_apache_any23_http_AcceptHeaderBuilderTest_testSingleHeaderTypeWildcard__ [ label="org.apache.any23.http.AcceptHeaderBuilderTest.testSingleHeaderTypeWildcard()" ];
  org_apache_any23_plugin_officescraper_XSSFWorkbookTest_verifyResource_java_lang_String_ [ label="org.apache.any23.plugin.officescraper.XSSFWorkbookTest.verifyResource(java.lang.String)" ];
  makeIRI_IRI_ [ label="makeIRI(IRI)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRDFXMLByContent__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectRDFXMLByContent()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMEtypeByContent_java_lang_String__java_util_Collection_java_lang_String__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.detectMIMEtypeByContent(java.lang.String, java.util.Collection<java.lang.String>)" ];
  org_apache_any23_extractor_ExtractionParameters_checkPropertyExists_java_lang_String_ [ label="org.apache.any23.extractor.ExtractionParameters.checkPropertyExists(java.lang.String)" ];
  org_apache_any23_util_DiscoveryUtilsTest_testGetClassesInJAR__ [ label="org.apache.any23.util.DiscoveryUtilsTest.testGetClassesInJAR()" ];
  org_apache_any23_writer_WriterFactory_getMimeType__ [ label="org.apache.any23.writer.WriterFactory.getMimeType()" ];
  supports_ExtractorFactory__MIMEType_ [ label="supports(ExtractorFactory, MIMEType)" ];
  org_apache_any23_extractor_calendar_BaseCalendarExtractor_camelCase_java_lang_String__boolean_ [ label="org.apache.any23.extractor.calendar.BaseCalendarExtractor.camelCase(java.lang.String, boolean)" ];
  org_apache_any23_extractor_html_microformats2_HCardExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.microformats2.HCardExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_extractor_rdf_RDFHandlerAdapter_handleComment_java_lang_String_ [ label="org.apache.any23.extractor.rdf.RDFHandlerAdapter.handleComment(java.lang.String)" ];
  org_apache_any23_validator_DefaultDOMDocument_getOriginalDocument__ [ label="org.apache.any23.validator.DefaultDOMDocument.getOriginalDocument()" ];
  printExampleOutput_String__ExtractorRegistry_ [ label="printExampleOutput(String, ExtractorRegistry)" ];
  org_apache_any23_Any23Test_testIssue415InvalidNTriples__ [ label="org.apache.any23.Any23Test.testIssue415InvalidNTriples()" ];
  org_apache_any23_cli_ToolRunner_execute_java_lang_String____ [ label="org.apache.any23.cli.ToolRunner.execute(java.lang.String...)" ];
  org_apache_any23_cli_ToolRunner_execute_boolean__java_lang_String____ [ label="org.apache.any23.cli.ToolRunner.execute(boolean, java.lang.String...)" ];
  getItemScopeNodes_Node_ [ label="getItemScopeNodes(Node)" ];
  org_apache_any23_plugin_Any23PluginManager_getApplicableTools_java_io_File____ [ label="org.apache.any23.plugin.Any23PluginManager.getApplicableTools(java.io.File...)" ];
  org_apache_any23_plugin_Any23PluginManager_loadPlugins_java_io_File____ [ label="org.apache.any23.plugin.Any23PluginManager.loadPlugins(java.io.File...)" ];
  org_apache_any23_plugin_Any23PluginManager_getTools__ [ label="org.apache.any23.plugin.Any23PluginManager.getTools()" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_testIssue268And317__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.testIssue268And317()" ];
  org_apache_any23_cli_SimpleRoverTest_ref310Test__ [ label="org.apache.any23.cli.SimpleRoverTest.ref310Test()" ];
  org_apache_any23_extractor_rdfa_RDFa11Parser_reset__ [ label="org.apache.any23.extractor.rdfa.RDFa11Parser.reset()" ];
  popMappings_Node_ [ label="popMappings(Node)" ];
  org_apache_any23_writer_RDFXMLWriterFactory_getIdentifier__ [ label="org.apache.any23.writer.RDFXMLWriterFactory.getIdentifier()" ];
  addUpdated_HTMLDocument__BNode_ [ label="addUpdated(HTMLDocument, BNode)" ];
  org_apache_any23_extractor_microdata_ItemPropValue_getContent__ [ label="org.apache.any23.extractor.microdata.ItemPropValue.getContent()" ];
  org_apache_any23_Any23Test_assertDetection_java_lang_String__java_lang_String____ [ label="org.apache.any23.Any23Test.assertDetection(java.lang.String, java.lang.String...)" ];
  org_apache_any23_util_DiscoveryUtils_findClassesInDir_java_io_File__java_lang_String_ [ label="org.apache.any23.util.DiscoveryUtils.findClassesInDir(java.io.File, java.lang.String)" ];
  findExactlyOneBlankSubject_IRI__Value_ [ label="findExactlyOneBlankSubject(IRI, Value)" ];
  org_apache_any23_servlet_Servlet_hasOnlySingleSlashAfterScheme_java_lang_String_ [ label="org.apache.any23.servlet.Servlet.hasOnlySingleSlashAfterScheme(java.lang.String)" ];
  org_apache_any23_Any23Test_testDemoCodeSnippet2__ [ label="org.apache.any23.Any23Test.testDemoCodeSnippet2()" ];
  org_apache_any23_mime_MIMEType_parse_java_lang_String_ [ label="org.apache.any23.mime.MIMEType.parse(java.lang.String)" ];
  org_apache_any23_servlet_WebResponder_getFormatWriter_java_lang_String_ [ label="org.apache.any23.servlet.WebResponder.getFormatWriter(java.lang.String)" ];
  isRDFaContext_ExtractionContext_ [ label="isRDFaContext(ExtractionContext)" ];
  getRDFa10Parser_boolean__boolean__ExtractionContext__ExtractionResult_ [ label="getRDFa10Parser(boolean, boolean, ExtractionContext, ExtractionResult)" ];
  org_apache_any23_extractor_html_HResumeExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.HResumeExtractorFactory.createExtractor()" ];
  org_apache_any23_cli_YAMLRoverTest_assertFileContainsString_java_io_File__java_lang_String_ [ label="org.apache.any23.cli.YAMLRoverTest.assertFileContainsString(java.io.File, java.lang.String)" ];
  org_apache_any23_extractor_html_HTMLMetaExtractor_getDescription__ [ label="org.apache.any23.extractor.html.HTMLMetaExtractor.getDescription()" ];
  org_apache_any23_cli_flows_PeopleExtractor_createPerson_java_lang_String_ [ label="org.apache.any23.cli.flows.PeopleExtractor.createPerson(java.lang.String)" ];
  org_apache_any23_extractor_rdfa_RDFaExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.rdfa.RDFaExtractorFactory.createExtractor()" ];
  org_apache_any23_cli_BaseTool_close_java_io_PrintStream_ [ label="org.apache.any23.cli.BaseTool.close(java.io.PrintStream)" ];
  org_apache_any23_extractor_microdata_MicrodataParserReport_getErrors__ [ label="org.apache.any23.extractor.microdata.MicrodataParserReport.getErrors()" ];
  isTitleContext_ExtractionContext_ [ label="isTitleContext(ExtractionContext)" ];
  org_apache_any23_extractor_TagSoupExtractionResult_PropertyPath_getProperty__ [ label="org.apache.any23.extractor.TagSoupExtractionResult.PropertyPath.getProperty()" ];
  filterByMIMEType_MIMEType_ [ label="filterByMIMEType(MIMEType)" ];
  org_apache_any23_extractor_html_EmbeddedJSONLDExtractorTest_testJSONLDBadCharacter__ [ label="org.apache.any23.extractor.html.EmbeddedJSONLDExtractorTest.testJSONLDBadCharacter()" ];
  performExtraction_DocumentSource_ [ label="performExtraction(DocumentSource)" ];
  org_apache_any23_rdf_RDFUtils_getFormatByExtension_java_lang_String_ [ label="org.apache.any23.rdf.RDFUtils.getFormatByExtension(java.lang.String)" ];
  org_apache_any23_Any23Test_testXMLMimeTypeManagement__ [ label="org.apache.any23.Any23Test.testXMLMimeTypeManagement()" ];
  org_apache_any23_http_AcceptHeaderBuilder_fromStrings_java_util_Collection_java_lang_String__ [ label="org.apache.any23.http.AcceptHeaderBuilder.fromStrings(java.util.Collection<java.lang.String>)" ];
  org_apache_any23_source_DocumentSource_getContentType__ [ label="org.apache.any23.source.DocumentSource.getContentType()" ];
  org_apache_any23_writer_WriterRegistryTest_testGetWriterInstanceByIdentifier__ [ label="org.apache.any23.writer.WriterRegistryTest.testGetWriterInstanceByIdentifier()" ];
  sendError_int__String__Exception__ExtractionReport__boolean_ [ label="sendError(int, String, Exception, ExtractionReport, boolean)" ];
  org_apache_any23_servlet_WebResponder_printData_byte____java_io_PrintStream_ [ label="org.apache.any23.servlet.WebResponder.printData(byte[], java.io.PrintStream)" ];
  org_apache_any23_servlet_WebResponder_printHeader_java_io_PrintStream_ [ label="org.apache.any23.servlet.WebResponder.printHeader(java.io.PrintStream)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testObjectDataHttpUri__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testObjectDataHttpUri()" ];
  addRating_HTMLDocument__Resource_ [ label="addRating(HTMLDocument, Resource)" ];
  org_apache_any23_extractor_Extractor_ContentExtractor_setStopAtFirstError_boolean_ [ label="org.apache.any23.extractor.Extractor.ContentExtractor.setStopAtFirstError(boolean)" ];
  org_apache_any23_extractor_html_DomUtilsTest_testSerializeToXML__ [ label="org.apache.any23.extractor.html.DomUtilsTest.testSerializeToXML()" ];
  org_apache_any23_cli_Crawler_Anonymous_bcd54fa3_df4e_457e_ba6d_380d9225db1f_run__ [ label="org.apache.any23.cli.Crawler.Anonymous-bcd54fa3-df4e-457e-ba6d-380d9225db1f.run()" ];
  org_apache_any23_extractor_html_HReviewExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.HReviewExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_extractor_TagSoupExtractionResult_ResourceRoot_getExtractor__ [ label="org.apache.any23.extractor.TagSoupExtractionResult.ResourceRoot.getExtractor()" ];
  org_apache_any23_extractor_html_HTMLDocument_getBaseIRI__ [ label="org.apache.any23.extractor.html.HTMLDocument.getBaseIRI()" ];
  org_apache_any23_source_FileDocumentSource_openInputStream__ [ label="org.apache.any23.source.FileDocumentSource.openInputStream()" ];
  org_apache_any23_validator_RuleContext_putData_java_lang_String__T_ [ label="org.apache.any23.validator.RuleContext.putData(java.lang.String, T)" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testExample2__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.testExample2()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testNoMicroformats__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testNoMicroformats()" ];
  org_apache_any23_extractor_calendar_ICalExtractorTest_testRFC5545example4__ [ label="org.apache.any23.extractor.calendar.ICalExtractorTest.testRFC5545example4()" ];
  org_apache_any23_extractor_html_DomUtilsTest_check_java_lang_String__java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.html.DomUtilsTest.check(java.lang.String, java.lang.String, java.lang.String)" ];
  org_apache_any23_rdf_RDFUtilsTest_testGetNQuadsFormat__ [ label="org.apache.any23.rdf.RDFUtilsTest.testGetNQuadsFormat()" ];
  org_apache_any23_validator_DefaultDOMDocument_getDocumentIRI__ [ label="org.apache.any23.validator.DefaultDOMDocument.getDocumentIRI()" ];
  printReport_String__Throwable__ExtractionReport__PrintStream_ [ label="printReport(String, Throwable, ExtractionReport, PrintStream)" ];
  org_apache_any23_writer_URIListWriterFactory_getSupportedSettings__ [ label="org.apache.any23.writer.URIListWriterFactory.getSupportedSettings()" ];
  org_apache_any23_util_StringUtilsTest_testNamingConvention__ [ label="org.apache.any23.util.StringUtilsTest.testNamingConvention()" ];
  org_apache_any23_plugin_ExtractorPlugin_getExtractorFactory__ [ label="org.apache.any23.plugin.ExtractorPlugin.getExtractorFactory()" ];
  org_apache_any23_extractor_html_microformats2_HAdrExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.microformats2.HAdrExtractorFactory.getDescriptionInstance()" ];
  addContacts_HTMLDocument__Resource_ [ label="addContacts(HTMLDocument, Resource)" ];
  org_apache_any23_validator_RuleContext_removeData_java_lang_String_ [ label="org.apache.any23.validator.RuleContext.removeData(java.lang.String)" ];
  org_apache_any23_extractor_html_XFNExtractorTest_testUpcaseHREF__ [ label="org.apache.any23.extractor.html.XFNExtractorTest.testUpcaseHREF()" ];
  org_apache_any23_Any23Test_testProgrammaticExtraction__ [ label="org.apache.any23.Any23Test.testProgrammaticExtraction()" ];
  org_apache_any23_extractor_calendar_BaseCalendarExtractorTest_extractAndVerifyAgainstNQuads_java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.calendar.BaseCalendarExtractorTest.extractAndVerifyAgainstNQuads(java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_calendar_BaseCalendarExtractorTest_filePrefix__ [ label="org.apache.any23.extractor.calendar.BaseCalendarExtractorTest.filePrefix()" ];
  org_apache_any23_extractor_calendar_BaseCalendarExtractorTest_loadResultStatement_java_lang_String_ [ label="org.apache.any23.extractor.calendar.BaseCalendarExtractorTest.loadResultStatement(java.lang.String)" ];
  org_apache_any23_extractor_TagSoupExtractionResult_PropertyPath_getPath__ [ label="org.apache.any23.extractor.TagSoupExtractionResult.PropertyPath.getPath()" ];
  org_apache_any23_extractor_html_HTMLMetaExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.HTMLMetaExtractorFactory.createExtractor()" ];
  org_apache_any23_rdf_Prefixes_isVolatile_java_lang_String_ [ label="org.apache.any23.rdf.Prefixes.isVolatile(java.lang.String)" ];
  addPrice_Resource_ [ label="addPrice(Resource)" ];
  link_Node__String_ [ label="link(Node, String)" ];
  org_apache_any23_extractor_Extractor_getDescription__ [ label="org.apache.any23.extractor.Extractor.getDescription()" ];
  conditionallyAddStringProperty_Node__Resource__IRI__String_ [ label="conditionallyAddStringProperty(Node, Resource, IRI, String)" ];
  org_apache_any23_vocab_HListing_createClass_java_lang_String_ [ label="org.apache.any23.vocab.HListing.createClass(java.lang.String)" ];
  org_apache_any23_rdf_RDFUtils_getBNode_java_lang_String_ [ label="org.apache.any23.rdf.RDFUtils.getBNode(java.lang.String)" ];
  org_apache_any23_plugin_officescraper_ExcelExtractor_setStopAtFirstError_boolean_ [ label="org.apache.any23.plugin.officescraper.ExcelExtractor.setStopAtFirstError(boolean)" ];
  org_apache_any23_vocab_SINDICE_getInstance__ [ label="org.apache.any23.vocab.SINDICE.getInstance()" ];
  org_apache_any23_validator_EmptyValidationReport_getIssues__ [ label="org.apache.any23.validator.EmptyValidationReport.getIssues()" ];
  getWriter_RDFFormat__OutputStream_ [ label="getWriter(RDFFormat, OutputStream)" ];
  org_apache_any23_extractor_microdata_MicrodataParserTest_Anonymous_f98128bc_38f0_44e7_aa68_2300f8eda976_run__ [ label="org.apache.any23.extractor.microdata.MicrodataParserTest.Anonymous-f98128bc-38f0-44e7-aa68-2300f8eda976.run()" ];
  org_apache_any23_extractor_microdata_MicrodataParserTest_getDom_byte___ [ label="org.apache.any23.extractor.microdata.MicrodataParserTest.getDom(byte[])" ];
  org_apache_any23_rdf_RDFUtils_literal_java_lang_String_ [ label="org.apache.any23.rdf.RDFUtils.literal(java.lang.String)" ];
  org_apache_any23_configuration_DefaultConfiguration_getConfigurationDump__ [ label="org.apache.any23.configuration.DefaultConfiguration.getConfigurationDump()" ];
  org_apache_any23_configuration_DefaultConfiguration_getProperties__ [ label="org.apache.any23.configuration.DefaultConfiguration.getProperties()" ];
  org_apache_any23_configuration_DefaultConfiguration_getPropertyValue_java_lang_String_ [ label="org.apache.any23.configuration.DefaultConfiguration.getPropertyValue(java.lang.String)" ];
  org_apache_any23_extractor_html_HTMLMetaExtractor_getPrefixIfExists_java_lang_String_ [ label="org.apache.any23.extractor.html.HTMLMetaExtractor.getPrefixIfExists(java.lang.String)" ];
  handleStatement_Statement_ [ label="handleStatement(Statement)" ];
  org_apache_any23_util_StringUtilsTest_testCountOccurrences__ [ label="org.apache.any23.util.StringUtilsTest.testCountOccurrences()" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_test08__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.test08()" ];
  org_apache_any23_validator_DefaultValidatorTest_tearDown__ [ label="org.apache.any23.validator.DefaultValidatorTest.tearDown()" ];
  org_apache_any23_extractor_html_microformats2_HEntryExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.microformats2.HEntryExtractorTest.getExtractorFactory()" ];
  org_apache_any23_extractor_calendar_JCalExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.calendar.JCalExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_extractor_csv_CSVExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.csv.CSVExtractorFactory.createExtractor()" ];
  getIdentifier_WriterFactory_ [ label="getIdentifier(WriterFactory)" ];
  assertTripleCount_IRI__String__int_ [ label="assertTripleCount(IRI, String, int)" ];
  addDuration_HTMLDocument__BNode_ [ label="addDuration(HTMLDocument, BNode)" ];
  addSummary_Resource_ [ label="addSummary(Resource)" ];
  org_apache_any23_plugin_crawler_SharedData_getInstance__ [ label="org.apache.any23.plugin.crawler.SharedData.getInstance()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testRelativeUrlXmlBase2__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testRelativeUrlXmlBase2()" ];
  org_apache_any23_configuration_Setting_getValue__ [ label="org.apache.any23.configuration.Setting.getValue()" ];
  org_apache_any23_configuration_SettingsTest_testNullableSetting__ [ label="org.apache.any23.configuration.SettingsTest.testNullableSetting()" ];
  org_apache_any23_Any23Test_containsClass_java_util_List_____java_lang_Class_ [ label="org.apache.any23.Any23Test.containsClass(java.util.List<?>, java.lang.Class)" ];
  org_apache_any23_servlet_ServletTest_testGETIncludesQueryString__ [ label="org.apache.any23.servlet.ServletTest.testGETIncludesQueryString()" ];
  reportFixError_Fix__Exception__String_ [ label="reportFixError(Fix, Exception, String)" ];
  org_apache_any23_servlet_ServletTest_assertContainsTag_java_lang_String__java_lang_String_ [ label="org.apache.any23.servlet.ServletTest.assertContainsTag(java.lang.String, java.lang.String)" ];
  format_RDFWriterFactory_ [ label="format(RDFWriterFactory)" ];
  setContentLength_long_ [ label="setContentLength(long)" ];
  pushContext_Node__EvaluationContext_ [ label="pushContext(Node, EvaluationContext)" ];
  org_apache_any23_extractor_html_DomUtilsTest_testReadAttribute__ [ label="org.apache.any23.extractor.html.DomUtilsTest.testReadAttribute()" ];
  org_apache_any23_extractor_yaml_YAMLExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.yaml.YAMLExtractorFactory.getDescriptionInstance()" ];
  getWriter_RDFFormat__Writer_ [ label="getWriter(RDFFormat, Writer)" ];
  org_apache_any23_extractor_html_HReviewExtractorTest_test02RatedTags__ [ label="org.apache.any23.extractor.html.HReviewExtractorTest.test02RatedTags()" ];
  assertTriple_IRI__Value_ [ label="assertTriple(IRI, Value)" ];
  org_apache_any23_validator_DefaultValidatorTest_testMissingItemscopeAttributeValue__ [ label="org.apache.any23.validator.DefaultValidatorTest.testMissingItemscopeAttributeValue()" ];
  org_apache_any23_validator_DefaultValidatorTest_loadDocument_java_lang_String_ [ label="org.apache.any23.validator.DefaultValidatorTest.loadDocument(java.lang.String)" ];
  xmlCharset_TextStatistics__CharSequence_ [ label="xmlCharset(TextStatistics, CharSequence)" ];
  org_apache_any23_encoding_EncodingUtils_charset_java_lang_String_ [ label="org.apache.any23.encoding.EncodingUtils.charset(java.lang.String)" ];
  org_apache_any23_extractor_microdata_ItemScope_getItemId__ [ label="org.apache.any23.extractor.microdata.ItemScope.getItemId()" ];
  org_apache_any23_Any23Test_testIssue415ValidNTriples__ [ label="org.apache.any23.Any23Test.testIssue415ValidNTriples()" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.getExtractorFactory()" ];
  org_apache_any23_extractor_TagSoupExtractionResult_ResourceRoot_getPath__ [ label="org.apache.any23.extractor.TagSoupExtractionResult.ResourceRoot.getPath()" ];
  org_apache_any23_encoding_TikaEncodingDetectorTest_testTikaIssue771__ [ label="org.apache.any23.encoding.TikaEncodingDetectorTest.testTikaIssue771()" ];
  org_apache_any23_extractor_ExtractionException_printExceptionResult_java_io_PrintWriter_ [ label="org.apache.any23.extractor.ExtractionException.printExceptionResult(java.io.PrintWriter)" ];
  org_apache_any23_extractor_microdata_ItemScope_equals_java_lang_Object_ [ label="org.apache.any23.extractor.microdata.ItemScope.equals(java.lang.Object)" ];
  org_apache_any23_extractor_html_HTMLDocument_getSingularTextField_java_lang_String_ [ label="org.apache.any23.extractor.html.HTMLDocument.getSingularTextField(java.lang.String)" ];
  org_apache_any23_extractor_html_HTMLDocument_getPluralTextField_java_lang_String_ [ label="org.apache.any23.extractor.html.HTMLDocument.getPluralTextField(java.lang.String)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testPhotoLogo__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testPhotoLogo()" ];
  org_apache_any23_writer_WriterRegistryTest_testGetWriters__ [ label="org.apache.any23.writer.WriterRegistryTest.testGetWriters()" ];
  addStart_HTMLDocument__BNode_ [ label="addStart(HTMLDocument, BNode)" ];
  org_apache_any23_writer_WriterRegistryTest_testGetWritersByMimeType__ [ label="org.apache.any23.writer.WriterRegistryTest.testGetWritersByMimeType()" ];
  org_apache_any23_extractor_yaml_ElementsProcessor_getInstance__ [ label="org.apache.any23.extractor.yaml.ElementsProcessor.getInstance()" ];
  org_apache_any23_http_DefaultHTTPClient_getContentType__ [ label="org.apache.any23.http.DefaultHTTPClient.getContentType()" ];
  org_apache_any23_extractor_ExtractionParameters_hashCode__ [ label="org.apache.any23.extractor.ExtractionParameters.hashCode()" ];
  org_apache_any23_servlet_ServletTest_testPOSTonlyIRI__ [ label="org.apache.any23.servlet.ServletTest.testPOSTonlyIRI()" ];
  org_apache_any23_servlet_ServletTest_assertContains_java_lang_String__java_lang_String_ [ label="org.apache.any23.servlet.ServletTest.assertContains(java.lang.String, java.lang.String)" ];
  endRDF__ [ label="endRDF()" ];
  org_apache_any23_extractor_ExtractorGroup_allExtractorsSupportAllContentTypes__ [ label="org.apache.any23.extractor.ExtractorGroup.allExtractorsSupportAllContentTypes()" ];
  org_apache_any23_extractor_calendar_ICalExtractor_getDescription__ [ label="org.apache.any23.extractor.calendar.ICalExtractor.getDescription()" ];
  org_apache_any23_extractor_html_TagSoupParsingConfiguration_JsoupConfig_reduceToContent_java_lang_String__java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.html.TagSoupParsingConfiguration.JsoupConfig.reduceToContent(java.lang.String, java.lang.String, java.lang.String)" ];
  assertContains_Statement_ [ label="assertContains(Statement)" ];
  org_apache_any23_servlet_conneg_Any23Negotiator_getNegotiator__ [ label="org.apache.any23.servlet.conneg.Any23Negotiator.getNegotiator()" ];
  org_apache_any23_validator_ValidationReport_Error_getCause__ [ label="org.apache.any23.validator.ValidationReport.Error.getCause()" ];
  org_apache_any23_extractor_html_TagSoupParserTest_testExplicitEncodingBehavior__ [ label="org.apache.any23.extractor.html.TagSoupParserTest.testExplicitEncodingBehavior()" ];
  org_apache_any23_validator_rule_AboutNotURIRule_isURL_java_lang_String_ [ label="org.apache.any23.validator.rule.AboutNotURIRule.isURL(java.lang.String)" ];
  org_apache_any23_extractor_yaml_ElementsProcessor_ModelHolder_getModel__ [ label="org.apache.any23.extractor.yaml.ElementsProcessor.ModelHolder.getModel()" ];
  org_apache_any23_extractor_html_microformats2_HRecipeExtractor_getDescription__ [ label="org.apache.any23.extractor.html.microformats2.HRecipeExtractor.getDescription()" ];
  org_apache_any23_extractor_html_microformats2_HEventExtractorTest_testModelNotEmpty__ [ label="org.apache.any23.extractor.html.microformats2.HEventExtractorTest.testModelNotEmpty()" ];
  org_apache_any23_plugin_Any23PluginManager_configureExtractors_java_io_File____ [ label="org.apache.any23.plugin.Any23PluginManager.configureExtractors(java.io.File...)" ];
  org_apache_any23_plugin_Any23PluginManager_getExtractors__ [ label="org.apache.any23.plugin.Any23PluginManager.getExtractors()" ];
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_addVariant_java_lang_String_ [ label="org.apache.any23.servlet.conneg.ContentTypeNegotiator.addVariant(java.lang.String)" ];
  add_XPathExtractionRule_ [ label="add(XPathExtractionRule)" ];
  org_apache_any23_extractor_html_HReviewExtractorTest_testCaseSensitiveness__ [ label="org.apache.any23.extractor.html.HReviewExtractorTest.testCaseSensitiveness()" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_createLiteral_java_util_Date_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.createLiteral(java.util.Date)" ];
  makeIRI_String__IRI__boolean_ [ label="makeIRI(String, IRI, boolean)" ];
  org_apache_any23_rdf_RDFUtils_iri_java_lang_String_ [ label="org.apache.any23.rdf.RDFUtils.iri(java.lang.String)" ];
  org_apache_any23_validator_DefaultValidatorTest_testMetaNameMisuse__ [ label="org.apache.any23.validator.DefaultValidatorTest.testMetaNameMisuse()" ];
  org_apache_any23_rdf_Prefixes_hasNamespaceIRI_java_lang_String_ [ label="org.apache.any23.rdf.Prefixes.hasNamespaceIRI(java.lang.String)" ];
  org_apache_any23_writer_TripleFormat_getMimeType__ [ label="org.apache.any23.writer.TripleFormat.getMimeType()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testMailto1__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testMailto1()" ];
  org_apache_any23_vocab_Vocabulary_createIRI_java_lang_String_ [ label="org.apache.any23.vocab.Vocabulary.createIRI(java.lang.String)" ];
  addSkills_HTMLDocument__Resource_ [ label="addSkills(HTMLDocument, Resource)" ];
  getNamespaceIRI_IRI_ [ label="getNamespaceIRI(IRI)" ];
  addNestingRelationship_List__List__ExtractionContext_ [ label="addNestingRelationship(List, List, ExtractionContext)" ];
  org_apache_any23_configuration_Setting_clone_S__V_ [ label="org.apache.any23.configuration.Setting.clone(S, V)" ];
  org_apache_any23_configuration_Setting_checkValue_V_ [ label="org.apache.any23.configuration.Setting.checkValue(V)" ];
  org_apache_any23_configuration_Setting_clone__ [ label="org.apache.any23.configuration.Setting.clone()" ];
  org_apache_any23_servlet_ServletTest_testPOSTBodyInParamWorks__ [ label="org.apache.any23.servlet.ServletTest.testPOSTBodyInParamWorks()" ];
  org_apache_any23_extractor_IssueReport_Issue_getLevel__ [ label="org.apache.any23.extractor.IssueReport.Issue.getLevel()" ];
  org_apache_any23_writer_TripleWriterFactory_getRdfFormat__ [ label="org.apache.any23.writer.TripleWriterFactory.getRdfFormat()" ];
  org_apache_any23_writer_TripleWriterFactory_getTripleFormat__ [ label="org.apache.any23.writer.TripleWriterFactory.getTripleFormat()" ];
  org_apache_any23_extractor_html_HTMLDocument_find_java_lang_String_ [ label="org.apache.any23.extractor.html.HTMLDocument.find(java.lang.String)" ];
  org_apache_any23_validator_DefaultDOMDocument_addAttribute_java_lang_String__java_lang_String__java_lang_String_ [ label="org.apache.any23.validator.DefaultDOMDocument.addAttribute(java.lang.String, java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_ExtractorRegistry_unregister_java_lang_String_ [ label="org.apache.any23.extractor.ExtractorRegistry.unregister(java.lang.String)" ];
  addEducations_HTMLDocument__Resource_ [ label="addEducations(HTMLDocument, Resource)" ];
  org_apache_any23_validator_DefaultValidatorTest_testMissingOGNamespace__ [ label="org.apache.any23.validator.DefaultValidatorTest.testMissingOGNamespace()" ];
  org_apache_any23_vocab_WO_createClass_java_lang_String_ [ label="org.apache.any23.vocab.WO.createClass(java.lang.String)" ];
  org_apache_any23_extractor_rdfa_AbstractRDFaExtractorTestCase_testEmptyDatatypeDeclarationWithInnerXMLTags__ [ label="org.apache.any23.extractor.rdfa.AbstractRDFaExtractorTestCase.testEmptyDatatypeDeclarationWithInnerXMLTags()" ];
  org_apache_any23_configuration_Setting_toString__ [ label="org.apache.any23.configuration.Setting.toString()" ];
  org_apache_any23_cli_flows_PeopleExtractorFactory_getSupportedSettings__ [ label="org.apache.any23.cli.flows.PeopleExtractorFactory.getSupportedSettings()" ];
  contains_XPathExtractionRule_ [ label="contains(XPathExtractionRule)" ];
  org_apache_any23_servlet_ServletTest_testGETwithURLDecodingInParam__ [ label="org.apache.any23.servlet.ServletTest.testGETwithURLDecodingInParam()" ];
  org_apache_any23_extractor_ExtractorRegistryImpl_getFactory_java_lang_String_ [ label="org.apache.any23.extractor.ExtractorRegistryImpl.getFactory(java.lang.String)" ];
  org_apache_any23_extractor_xpath_TemplateXPathExtractionRuleImpl_getName__ [ label="org.apache.any23.extractor.xpath.TemplateXPathExtractionRuleImpl.getName()" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testUnusedItemprop__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.testUnusedItemprop()" ];
  org_apache_any23_extractor_microdata_ItemPropValue_isFloat__ [ label="org.apache.any23.extractor.microdata.ItemPropValue.isFloat()" ];
  org_apache_any23_plugin_crawler_SiteCrawler_start_java_net_URL__boolean_ [ label="org.apache.any23.plugin.crawler.SiteCrawler.start(java.net.URL, boolean)" ];
  org_apache_any23_plugin_crawler_SiteCrawler_start_java_net_URL__java_util_regex_Pattern__boolean_ [ label="org.apache.any23.plugin.crawler.SiteCrawler.start(java.net.URL, java.util.regex.Pattern, boolean)" ];
  org_apache_any23_extractor_microdata_MicrodataParser_shouldSeparateWithNewline_java_lang_CharSequence__java_lang_CharSequence_ [ label="org.apache.any23.extractor.microdata.MicrodataParser.shouldSeparateWithNewline(java.lang.CharSequence, java.lang.CharSequence)" ];
  org_apache_any23_extractor_xpath_Variable_getName__ [ label="org.apache.any23.extractor.xpath.Variable.getName()" ];
  org_apache_any23_cli_Rover_getWriter_java_lang_String__java_io_OutputStream_ [ label="org.apache.any23.cli.Rover.getWriter(java.lang.String, java.io.OutputStream)" ];
  org_apache_any23_extractor_rdfa_RDFa11ParserTest_testIsRelativePositive2__ [ label="org.apache.any23.extractor.rdfa.RDFa11ParserTest.testIsRelativePositive2()" ];
  createLiteral_String__IRI_ [ label="createLiteral(String, IRI)" ];
  org_apache_any23_source_StringDocumentSource_getContentLength__ [ label="org.apache.any23.source.StringDocumentSource.getContentLength()" ];
  org_apache_any23_extractor_calendar_XCalExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.calendar.XCalExtractorTest.getExtractorFactory()" ];
  org_apache_any23_extractor_html_microformats2_HAdrExtractorTest_testModelNotEmpty__ [ label="org.apache.any23.extractor.html.microformats2.HAdrExtractorTest.testModelNotEmpty()" ];
  org_apache_any23_rdf_Prefixes_expand_java_lang_String_ [ label="org.apache.any23.rdf.Prefixes.expand(java.lang.String)" ];
  org_apache_any23_rdf_Prefixes_parsePrefix_java_lang_String_ [ label="org.apache.any23.rdf.Prefixes.parsePrefix(java.lang.String)" ];
  org_apache_any23_rdf_Prefixes_hasPrefix_java_lang_String_ [ label="org.apache.any23.rdf.Prefixes.hasPrefix(java.lang.String)" ];
  org_apache_any23_rdf_Prefixes_getNamespaceIRIFor_java_lang_String_ [ label="org.apache.any23.rdf.Prefixes.getNamespaceIRIFor(java.lang.String)" ];
  org_apache_any23_rdf_Prefixes_parseLocalName_java_lang_String_ [ label="org.apache.any23.rdf.Prefixes.parseLocalName(java.lang.String)" ];
  org_apache_any23_mime_TikaMIMETypeDetector_isGenericMIMEType_java_lang_String_ [ label="org.apache.any23.mime.TikaMIMETypeDetector.isGenericMIMEType(java.lang.String)" ];
  org_apache_any23_mime_TikaMIMETypeDetector_isPlainMIMEType_java_lang_String_ [ label="org.apache.any23.mime.TikaMIMETypeDetector.isPlainMIMEType(java.lang.String)" ];
  org_apache_any23_extractor_html_MicroformatExtractor_extract__ [ label="org.apache.any23.extractor.html.MicroformatExtractor.extract()" ];
  org_apache_any23_extractor_ExtractionContext_getUniqueID__ [ label="org.apache.any23.extractor.ExtractionContext.getUniqueID()" ];
  org_apache_any23_cli_Any23PluginManagerToolsTest_after__ [ label="org.apache.any23.cli.Any23PluginManagerToolsTest.after()" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_testNoMicroformats__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.testNoMicroformats()" ];
  printReport_ExtractorRegistry_ [ label="printReport(ExtractorRegistry)" ];
  org_apache_any23_cli_YAMLRoverTest_simpleTest__ [ label="org.apache.any23.cli.YAMLRoverTest.simpleTest()" ];
  addTags_HTMLDocument__BNode_ [ label="addTags(HTMLDocument, BNode)" ];
  org_apache_any23_SesameTest_testCreateIRIWithNullArgumentThrowsNPE__ [ label="org.apache.any23.SesameTest.testCreateIRIWithNullArgumentThrowsNPE()" ];
  org_apache_any23_Any23Test_testAbstractMethodErrorIssue186_2__ [ label="org.apache.any23.Any23Test.testAbstractMethodErrorIssue186_2()" ];
  org_apache_any23_validator_XMLValidationReportSerializer_serializeGetterValue_java_lang_Object__java_lang_reflect_Method__java_io_PrintStream_ [ label="org.apache.any23.validator.XMLValidationReportSerializer.serializeGetterValue(java.lang.Object, java.lang.reflect.Method, java.io.PrintStream)" ];
  org_apache_any23_validator_XMLValidationReportSerializer_getPropertyFromMethodName_java_lang_String_ [ label="org.apache.any23.validator.XMLValidationReportSerializer.getPropertyFromMethodName(java.lang.String)" ];
  org_apache_any23_validator_XMLValidationReportSerializer_isManaged_java_lang_Object_ [ label="org.apache.any23.validator.XMLValidationReportSerializer.isManaged(java.lang.Object)" ];
  org_apache_any23_validator_XMLValidationReportSerializer_filterGetters_java_lang_Class___extends_java_lang_Object__ [ label="org.apache.any23.validator.XMLValidationReportSerializer.filterGetters(java.lang.Class<? extends java.lang.Object>)" ];
  org_apache_any23_validator_XMLValidationReportSerializer_printObject_java_lang_Object__java_io_PrintStream_ [ label="org.apache.any23.validator.XMLValidationReportSerializer.printObject(java.lang.Object, java.io.PrintStream)" ];
  endDocument_IRI_ [ label="endDocument(IRI)" ];
  org_apache_any23_filter_ExtractionContextBlocker_closeDocument__ [ label="org.apache.any23.filter.ExtractionContextBlocker.closeDocument()" ];
  org_apache_any23_writer_JSONWriter_validateDocumentStarted__ [ label="org.apache.any23.writer.JSONWriter.validateDocumentStarted()" ];
  org_apache_any23_extractor_SingleDocumentExtraction_getParserEncoding__ [ label="org.apache.any23.extractor.SingleDocumentExtraction.getParserEncoding()" ];
  org_apache_any23_extractor_SingleDocumentExtraction_detectEncoding__ [ label="org.apache.any23.extractor.SingleDocumentExtraction.detectEncoding()" ];
  addJobTitle_HTMLDocument__BNode_ [ label="addJobTitle(HTMLDocument, BNode)" ];
  org_apache_any23_extractor_rdf_NTriplesExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.rdf.NTriplesExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectApplicationYAMLByMeta__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectApplicationYAMLByMeta()" ];
  org_apache_any23_source_HTTPDocumentSource_normalize_java_lang_String_ [ label="org.apache.any23.source.HTTPDocumentSource.normalize(java.lang.String)" ];
  org_apache_any23_source_DocumentSource_openInputStream__ [ label="org.apache.any23.source.DocumentSource.openInputStream()" ];
  org_apache_any23_vocab_LKIFCoreLegalRole_getInstance__ [ label="org.apache.any23.vocab.LKIFCoreLegalRole.getInstance()" ];
  org_apache_any23_cli_RoverTest_testRunMultiURLs__ [ label="org.apache.any23.cli.RoverTest.testRunMultiURLs()" ];
  org_apache_any23_cli_RoverTest_runWithMultiSourcesAndVerify_java_lang_String____int_ [ label="org.apache.any23.cli.RoverTest.runWithMultiSourcesAndVerify(java.lang.String[], int)" ];
  writeCell_IRI__Cell__ExtractionResult_ [ label="writeCell(IRI, Cell, ExtractionResult)" ];
  org_apache_any23_extractor_TagSoupExtractionResult_getResourceRoots__ [ label="org.apache.any23.extractor.TagSoupExtractionResult.getResourceRoots()" ];
  getParser_RDFFormat_ [ label="getParser(RDFFormat)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testNotes__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testNotes()" ];
  org_apache_any23_extractor_rdf_RDFXMLExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.rdf.RDFXMLExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_configuration_Setting_as_S_ [ label="org.apache.any23.configuration.Setting.as(S)" ];
  org_apache_any23_extractor_html_HResumeExtractor_getBaseClassName__ [ label="org.apache.any23.extractor.html.HResumeExtractor.getBaseClassName()" ];
  isXMLNSDeclared_Document_ [ label="isXMLNSDeclared(Document)" ];
  org_apache_any23_source_StringDocumentSource_openInputStream__ [ label="org.apache.any23.source.StringDocumentSource.openInputStream()" ];
  receiveTriple_Resource__IRI__Value__IRI__ExtractionContext_ [ label="receiveTriple(Resource, IRI, Value, IRI, ExtractionContext)" ];
  org_apache_any23_extractor_html_ICBMExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.ICBMExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_writer_JSONWriterTest_testJSONWriting__ [ label="org.apache.any23.writer.JSONWriterTest.testJSONWriting()" ];
  org_apache_any23_writer_TripleFormat_of_java_lang_String__java_util_Collection_java_lang_String___java_nio_charset_Charset__java_util_Collection_java_lang_String___java_lang_String__org_apache_any23_writer_TripleFormat_Capabilities_ [ label="org.apache.any23.writer.TripleFormat.of(java.lang.String, java.util.Collection<java.lang.String>, java.nio.charset.Charset, java.util.Collection<java.lang.String>, java.lang.String, org.apache.any23.writer.TripleFormat.Capabilities)" ];
  org_apache_any23_extractor_html_HCardName_getFullName__ [ label="org.apache.any23.extractor.html.HCardName.getFullName()" ];
  org_apache_any23_extractor_html_HCardName_hasField_java_lang_String_ [ label="org.apache.any23.extractor.html.HCardName.hasField(java.lang.String)" ];
  org_apache_any23_extractor_html_HCardName_getField_java_lang_String_ [ label="org.apache.any23.extractor.html.HCardName.getField(java.lang.String)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testN3Detection__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testN3Detection()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_assertN3Detection_java_lang_String_ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.assertN3Detection(java.lang.String)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_assertN3DetectionFail_java_lang_String_ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.assertN3DetectionFail(java.lang.String)" ];
  org_apache_any23_extractor_html_DomUtilsTest_testFindAllByClassName__ [ label="org.apache.any23.extractor.html.DomUtilsTest.testFindAllByClassName()" ];
  addSummary_HTMLDocument__BNode_ [ label="addSummary(HTMLDocument, BNode)" ];
  org_apache_any23_extractor_html_HRecipeExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.HRecipeExtractorFactory.getDescriptionInstance()" ];
  addHonorificSuffix_HTMLDocument__BNode_ [ label="addHonorificSuffix(HTMLDocument, BNode)" ];
  org_apache_any23_extractor_rdfa_AbstractRDFaExtractorTestCase_testRDFa11CURIEs__ [ label="org.apache.any23.extractor.rdfa.AbstractRDFaExtractorTestCase.testRDFa11CURIEs()" ];
  org_apache_any23_validator_ValidationReport_getRuleActivations__ [ label="org.apache.any23.validator.ValidationReport.getRuleActivations()" ];
  extractLink_Node__BNode__IRI_ [ label="extractLink(Node, BNode, IRI)" ];
  org_apache_any23_extractor_html_XFNExtractor_containsRelMe_java_lang_String___ [ label="org.apache.any23.extractor.html.XFNExtractor.containsRelMe(java.lang.String[])" ];
  org_apache_any23_extractor_html_XFNExtractor_containsXFNRelExceptMe_java_lang_String___ [ label="org.apache.any23.extractor.html.XFNExtractor.containsXFNRelExceptMe(java.lang.String[])" ];
  isContainedInItemScope_Node_ [ label="isContainedInItemScope(Node)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRDFN3ByContent__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectRDFN3ByContent()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestN3__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.manifestN3()" ];
  assertNotContains_Resource__IRI__String_ [ label="assertNotContains(Resource, IRI, String)" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_test04__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.test04()" ];
  normalize_String__IRI_ [ label="normalize(String, IRI)" ];
  org_apache_any23_extractor_html_ICBMExtractor_expand_java_lang_String_ [ label="org.apache.any23.extractor.html.ICBMExtractor.expand(java.lang.String)" ];
  org_apache_any23_extractor_html_ICBMExtractor_getDescription__ [ label="org.apache.any23.extractor.html.ICBMExtractor.getDescription()" ];
  addFn_Resource_ [ label="addFn(Resource)" ];
  org_apache_any23_source_FileDocumentSource_getContentLength__ [ label="org.apache.any23.source.FileDocumentSource.getContentLength()" ];
  org_apache_any23_writer_JSONWriterFactory_getIdentifier__ [ label="org.apache.any23.writer.JSONWriterFactory.getIdentifier()" ];
  org_apache_any23_mime_purifier_WhiteSpacesPurifier_isBlank_char_ [ label="org.apache.any23.mime.purifier.WhiteSpacesPurifier.isBlank(char)" ];
  org_apache_any23_configuration_DefaultConfiguration_getFlagProperty_java_lang_String_ [ label="org.apache.any23.configuration.DefaultConfiguration.getFlagProperty(java.lang.String)" ];
  org_apache_any23_configuration_DefaultConfiguration_getPropertyOrFail_java_lang_String_ [ label="org.apache.any23.configuration.DefaultConfiguration.getPropertyOrFail(java.lang.String)" ];
  org_apache_any23_cli_ToolTestBase_runToolCheckExit0_java_lang_String____ [ label="org.apache.any23.cli.ToolTestBase.runToolCheckExit0(java.lang.String...)" ];
  org_apache_any23_cli_ToolTestBase_runTool_java_lang_String____ [ label="org.apache.any23.cli.ToolTestBase.runTool(java.lang.String...)" ];
  addAverage_HTMLDocument__Resource_ [ label="addAverage(HTMLDocument, Resource)" ];
  org_apache_any23_extractor_ExtractionResultImpl_wasTouched__ [ label="org.apache.any23.extractor.ExtractionResultImpl.wasTouched()" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_testHCalendarClassWithJournal__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.testHCalendarClassWithJournal()" ];
  org_apache_any23_extractor_html_microformats2_HAdrExtractor_resetExtractor__ [ label="org.apache.any23.extractor.html.microformats2.HAdrExtractor.resetExtractor()" ];
  org_apache_any23_extractor_example_ExampleExtractor_getDescription__ [ label="org.apache.any23.extractor.example.ExampleExtractor.getDescription()" ];
  org_apache_any23_encoding_EncodingDetector_guessEncoding_java_io_InputStream_ [ label="org.apache.any23.encoding.EncodingDetector.guessEncoding(java.io.InputStream)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestRdfa__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.manifestRdfa()" ];
  org_apache_any23_extractor_rdfa_RDFa11Parser_extractPrefixSections_java_lang_String_ [ label="org.apache.any23.extractor.rdfa.RDFa11Parser.extractPrefixSections(java.lang.String)" ];
  org_apache_any23_extractor_rdf_JSONLDExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.rdf.JSONLDExtractorFactory.createExtractor()" ];
  org_apache_any23_plugin_PluginIT_testDetectCLIPlugins__ [ label="org.apache.any23.plugin.PluginIT.testDetectCLIPlugins()" ];
  org_apache_any23_plugin_htmlscraper_HTMLScraperExtractorTest_testGetExtractors__ [ label="org.apache.any23.plugin.htmlscraper.HTMLScraperExtractorTest.testGetExtractors()" ];
  org_apache_any23_Any23Test_testN3Detection1__ [ label="org.apache.any23.Any23Test.testN3Detection1()" ];
  getContentTypeHeader_HttpServletRequest_ [ label="getContentTypeHeader(HttpServletRequest)" ];
  expectOpenContext_String__IRI__String_ [ label="expectOpenContext(String, IRI, String)" ];
  org_apache_any23_extractor_TagSoupExtractionResult_PropertyPath_getSubject__ [ label="org.apache.any23.extractor.TagSoupExtractionResult.PropertyPath.getSubject()" ];
  org_apache_any23_configuration_Setting_checkIdentifier_java_lang_String_ [ label="org.apache.any23.configuration.Setting.checkIdentifier(java.lang.String)" ];
  org_apache_any23_vocab_HListing_getInstance__ [ label="org.apache.any23.vocab.HListing.getInstance()" ];
  org_apache_any23_extractor_ExtractorFactory_getSupportedMIMETypes__ [ label="org.apache.any23.extractor.ExtractorFactory.getSupportedMIMETypes()" ];
  extract_IRI__String_ [ label="extract(IRI, String)" ];
  extract_DocumentSource__TripleHandler__String_ [ label="extract(DocumentSource, TripleHandler, String)" ];
  org_apache_any23_extractor_rdfa_RDFa11Parser_getMapping_java_lang_String_ [ label="org.apache.any23.extractor.rdfa.RDFa11Parser.getMapping(java.lang.String)" ];
  getAsTypedLiteral_Node_ [ label="getAsTypedLiteral(Node)" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_createBNode_java_lang_String_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.createBNode(java.lang.String)" ];
  org_apache_any23_extractor_html_HCardName_fixWhiteSpace_java_lang_String_ [ label="org.apache.any23.extractor.html.HCardName.fixWhiteSpace(java.lang.String)" ];
  convert_org_jsoup_nodes_Document_ [ label="convert(org.jsoup.nodes.Document)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testMultipleclassNamesOnVCard__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testMultipleclassNamesOnVCard()" ];
  isReport_HttpServletRequest_ [ label="isReport(HttpServletRequest)" ];
  org_apache_any23_extractor_html_MicroformatExtractor_getDocumentIRI__ [ label="org.apache.any23.extractor.html.MicroformatExtractor.getDocumentIRI()" ];
  extractHCardTextContent_Node_ [ label="extractHCardTextContent(Node)" ];
  org_apache_any23_writer_JSONWriter_printValue_java_lang_String_ [ label="org.apache.any23.writer.JSONWriter.printValue(java.lang.String)" ];
  org_apache_any23_validator_ValidationReport_Issue_getMessage__ [ label="org.apache.any23.validator.ValidationReport.Issue.getMessage()" ];
  org_apache_any23_writer_URIListWriter_writeNamespace_java_lang_String__java_lang_String_ [ label="org.apache.any23.writer.URIListWriter.writeNamespace(java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_html_TurtleHTMLExtractorTest_testExtraction__ [ label="org.apache.any23.extractor.html.TurtleHTMLExtractorTest.testExtraction()" ];
  org_apache_any23_vocab_XFN_isXFNLocalName_java_lang_String_ [ label="org.apache.any23.vocab.XFN.isXFNLocalName(java.lang.String)" ];
  org_apache_any23_rdf_RDFUtils_bnode_java_lang_String_ [ label="org.apache.any23.rdf.RDFUtils.bnode(java.lang.String)" ];
  org_apache_any23_extractor_microdata_MicrodataParserTest_getExpectedErrorsCount_java_util_Properties_ [ label="org.apache.any23.extractor.microdata.MicrodataParserTest.getExpectedErrorsCount(java.util.Properties)" ];
  org_apache_any23_extractor_microdata_MicrodataParserTest_countKeysWithPrefix_java_util_Properties__java_lang_String_ [ label="org.apache.any23.extractor.microdata.MicrodataParserTest.countKeysWithPrefix(java.util.Properties, java.lang.String)" ];
  content_Node__String_ [ label="content(Node, String)" ];
  org_apache_any23_servlet_conneg_MediaRangeSpec_unescape_java_lang_String_ [ label="org.apache.any23.servlet.conneg.MediaRangeSpec.unescape(java.lang.String)" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_createLiteral_long_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.createLiteral(long)" ];
  org_apache_any23_util_ReaderInputStream_reset__ [ label="org.apache.any23.util.ReaderInputStream.reset()" ];
  of_RDFFormat_ [ label="of(RDFFormat)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testAreaFull__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testAreaFull()" ];
  org_apache_any23_writer_NTriplesWriterFactory_getSupportedSettings__ [ label="org.apache.any23.writer.NTriplesWriterFactory.getSupportedSettings()" ];
  org_apache_any23_extractor_calendar_BaseCalendarExtractorTest_TestRDFHandler_handleNamespace_java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.calendar.BaseCalendarExtractorTest.TestRDFHandler.handleNamespace(java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_TestRDFHandler_endRDF__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.TestRDFHandler.endRDF()" ];
  assertContainsModel_Statement___ [ label="assertContainsModel(Statement[])" ];
  org_apache_any23_extractor_rdfa_SemarglSink_info_java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.rdfa.SemarglSink.info(java.lang.String, java.lang.String)" ];
  extract_ExtractionParameters__DocumentSource__TripleHandler_ [ label="extract(ExtractionParameters, DocumentSource, TripleHandler)" ];
  addListerOrg_HTMLDocument__Resource_ [ label="addListerOrg(HTMLDocument, Resource)" ];
  org_apache_any23_rdf_PrefixesTest_testCheckForDeclaredPrefix__ [ label="org.apache.any23.rdf.PrefixesTest.testCheckForDeclaredPrefix()" ];
  getIndexInParent_Node_ [ label="getIndexInParent(Node)" ];
  addGenderIdentity_HTMLDocument__BNode_ [ label="addGenderIdentity(HTMLDocument, BNode)" ];
  extractProfile_Document_ [ label="extractProfile(Document)" ];
  addGeoAsUrlResource_Resource__HTMLDocument_ [ label="addGeoAsUrlResource(Resource, HTMLDocument)" ];
  org_apache_any23_extractor_html_microformats2_HResumeExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.microformats2.HResumeExtractorFactory.createExtractor()" ];
  org_apache_any23_util_FileUtils_listFilesRecursively_java_io_File__java_io_FilenameFilter_ [ label="org.apache.any23.util.FileUtils.listFilesRecursively(java.io.File, java.io.FilenameFilter)" ];
  org_apache_any23_configuration_DefaultConfigurationTest_testModifiableConfigurationFail__ [ label="org.apache.any23.configuration.DefaultConfigurationTest.testModifiableConfigurationFail()" ];
  org_apache_any23_cli_BaseTool_getOut__ [ label="org.apache.any23.cli.BaseTool.getOut()" ];
  org_apache_any23_cli_PluginVerifier_setOut_java_io_PrintStream_ [ label="org.apache.any23.cli.PluginVerifier.setOut(java.io.PrintStream)" ];
  org_apache_any23_extractor_csv_CSVExtractorTest_testExtractionSemicolonSeparated__ [ label="org.apache.any23.extractor.csv.CSVExtractorTest.testExtractionSemicolonSeparated()" ];
  org_apache_any23_vocab_RDFSchemaUtilsTest_testSerializeVocabulariesNTriples__ [ label="org.apache.any23.vocab.RDFSchemaUtilsTest.testSerializeVocabulariesNTriples()" ];
  org_apache_any23_extractor_xpath_TemplateObject_createIRI_java_lang_String_ [ label="org.apache.any23.extractor.xpath.TemplateObject.createIRI(java.lang.String)" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_testBasicWithSyntaxErrors__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.testBasicWithSyntaxErrors()" ];
  extractLinkDefinedPrefixes_Document_ [ label="extractLinkDefinedPrefixes(Document)" ];
  org_apache_any23_util_StringUtils_implementJavaNaming_java_lang_String_ [ label="org.apache.any23.util.StringUtils.implementJavaNaming(java.lang.String)" ];
  getFormatFromRequestOrNegotiation_HttpServletRequest_ [ label="getFormatFromRequestOrNegotiation(HttpServletRequest)" ];
  org_apache_any23_extractor_ExtractionResultImplTest_testNotifyErrors__ [ label="org.apache.any23.extractor.ExtractionResultImplTest.testNotifyErrors()" ];
  receiveNamespace_String__String__ExtractionContext_ [ label="receiveNamespace(String, String, ExtractionContext)" ];
  org_apache_any23_cli_ToolTestBase_runTool_java_lang_String_ [ label="org.apache.any23.cli.ToolTestBase.runTool(java.lang.String)" ];
  org_apache_any23_extractor_SingleDocumentExtractionReport_getExtractorToIssues__ [ label="org.apache.any23.extractor.SingleDocumentExtractionReport.getExtractorToIssues()" ];
  org_apache_any23_extractor_html_SpeciesExtractor_resolvePropertyName_java_lang_String_ [ label="org.apache.any23.extractor.html.SpeciesExtractor.resolvePropertyName(java.lang.String)" ];
  org_apache_any23_vocab_LKIFCoreNorm_getInstance__ [ label="org.apache.any23.vocab.LKIFCoreNorm.getInstance()" ];
  org_apache_any23_extractor_IssueReport_getIssues__ [ label="org.apache.any23.extractor.IssueReport.getIssues()" ];
  fixIncludes_HTMLDocument__Node__IssueReport_ [ label="fixIncludes(HTMLDocument, Node, IssueReport)" ];
  org_apache_any23_extractor_html_HTMLMetaExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.HTMLMetaExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_servlet_conneg_MediaRangeSpec_getPrecedence_org_apache_any23_servlet_conneg_MediaRangeSpec_ [ label="org.apache.any23.servlet.conneg.MediaRangeSpec.getPrecedence(org.apache.any23.servlet.conneg.MediaRangeSpec)" ];
  org_apache_any23_servlet_conneg_MediaRangeSpec_isWildcardType__ [ label="org.apache.any23.servlet.conneg.MediaRangeSpec.isWildcardType()" ];
  org_apache_any23_servlet_conneg_MediaRangeSpec_isWildcardSubtype__ [ label="org.apache.any23.servlet.conneg.MediaRangeSpec.isWildcardSubtype()" ];
  org_apache_any23_servlet_conneg_MediaRangeSpec_getParameterNames__ [ label="org.apache.any23.servlet.conneg.MediaRangeSpec.getParameterNames()" ];
  org_apache_any23_servlet_conneg_MediaRangeSpec_getParameter_java_lang_String_ [ label="org.apache.any23.servlet.conneg.MediaRangeSpec.getParameter(java.lang.String)" ];
  getSupportedSettings__ [ label="getSupportedSettings()" ];
  tail_org_jsoup_nodes_Node__int_ [ label="tail(org.jsoup.nodes.Node, int)" ];
  org_apache_any23_vocab_Vocabulary_getProperties__ [ label="org.apache.any23.vocab.Vocabulary.getProperties()" ];
  org_apache_any23_extractor_rdf_RDFXMLExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.rdf.RDFXMLExtractorFactory.createExtractor()" ];
  org_apache_any23_encoding_TikaEncodingDetector_guessEncoding_java_io_InputStream__java_nio_charset_Charset_ [ label="org.apache.any23.encoding.TikaEncodingDetector.guessEncoding(java.io.InputStream, java.nio.charset.Charset)" ];
  org_apache_any23_encoding_TikaEncodingDetector_computeAndReset_java_io_InputStream__org_apache_any23_encoding_TikaEncodingDetector_InputStreamFunction_E__ [ label="org.apache.any23.encoding.TikaEncodingDetector.computeAndReset(java.io.InputStream, org.apache.any23.encoding.TikaEncodingDetector.InputStreamFunction<E>)" ];
  org_apache_any23_extractor_html_TagSoupParser_ElementLocation_getBeginLineNumber__ [ label="org.apache.any23.extractor.html.TagSoupParser.ElementLocation.getBeginLineNumber()" ];
  org_apache_any23_vocab_HItem_getInstance__ [ label="org.apache.any23.vocab.HItem.getInstance()" ];
  org_apache_any23_extractor_SimpleExtractorFactory_getExtractorLabel__ [ label="org.apache.any23.extractor.SimpleExtractorFactory.getExtractorLabel()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_assertNQuadsDetectionFail_java_lang_String_ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.assertNQuadsDetectionFail(java.lang.String)" ];
  org_apache_any23_extractor_rdfa_SemarglSink_addTypedLiteral_java_lang_String__java_lang_String__java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.rdfa.SemarglSink.addTypedLiteral(java.lang.String, java.lang.String, java.lang.String, java.lang.String)" ];
  org_apache_any23_writer_JSONLDWriterFactory_getSupportedSettings__ [ label="org.apache.any23.writer.JSONLDWriterFactory.getSupportedSettings()" ];
  org_apache_any23_Any23Test_testBlankNodesViaURL__ [ label="org.apache.any23.Any23Test.testBlankNodesViaURL()" ];
  org_apache_any23_extractor_xpath_QuadTemplate_getPredicate__ [ label="org.apache.any23.extractor.xpath.QuadTemplate.getPredicate()" ];
  org_apache_any23_configuration_Settings_of__ [ label="org.apache.any23.configuration.Settings.of()" ];
  org_apache_any23_extractor_yaml_YAMLExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.yaml.YAMLExtractorTest.getExtractorFactory()" ];
  org_apache_any23_extractor_html_AdrExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.AdrExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_source_HTTPDocumentSource_getContentType__ [ label="org.apache.any23.source.HTTPDocumentSource.getContentType()" ];
  org_apache_any23_writer_JSONWriter_printValue_java_lang_String__java_lang_String_ [ label="org.apache.any23.writer.JSONWriter.printValue(java.lang.String, java.lang.String)" ];
  org_apache_any23_servlet_ServletTest_testContentNegotiationForWildcardReturnsTurtle__ [ label="org.apache.any23.servlet.ServletTest.testContentNegotiationForWildcardReturnsTurtle()" ];
  extractRelTag_NamedNodeMap_ [ label="extractRelTag(NamedNodeMap)" ];
  org_apache_any23_writer_RDFWriterTripleHandler_close__ [ label="org.apache.any23.writer.RDFWriterTripleHandler.close()" ];
  addUid_Resource_ [ label="addUid(Resource)" ];
  mapFieldWithProperty_HTMLDocument__BNode__String__IRI_ [ label="mapFieldWithProperty(HTMLDocument, BNode, String, IRI)" ];
  org_apache_any23_extractor_html_HTMLMetaExtractor_Meta_hashCode__ [ label="org.apache.any23.extractor.html.HTMLMetaExtractor.Meta.hashCode()" ];
  getFunctionalSyntaxParser_boolean__boolean__ExtractionContext__ExtractionResult_ [ label="getFunctionalSyntaxParser(boolean, boolean, ExtractionContext, ExtractionResult)" ];
  addDomainTriplesPerResourceRoots_List__ExtractionContext_ [ label="addDomainTriplesPerResourceRoots(List, ExtractionContext)" ];
  addListerTel_HTMLDocument__Resource_ [ label="addListerTel(HTMLDocument, Resource)" ];
  org_apache_any23_configuration_SettingsTest_PositiveIntegerSetting_checkValue_java_lang_Integer_ [ label="org.apache.any23.configuration.SettingsTest.PositiveIntegerSetting.checkValue(java.lang.Integer)" ];
  org_apache_any23_plugin_officescraper_XSSFWorkbookTest_testXLSFormatAccess__ [ label="org.apache.any23.plugin.officescraper.XSSFWorkbookTest.testXLSFormatAccess()" ];
  findAll_Node__String_ [ label="findAll(Node, String)" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_getIssueReport__ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.getIssueReport()" ];
  org_apache_any23_extractor_csv_CSVExtractor_getObjectFromCell_java_lang_String_ [ label="org.apache.any23.extractor.csv.CSVExtractor.getObjectFromCell(java.lang.String)" ];
  org_apache_any23_extractor_csv_CSVExtractor_isInteger_java_lang_String_ [ label="org.apache.any23.extractor.csv.CSVExtractor.isInteger(java.lang.String)" ];
  org_apache_any23_extractor_csv_CSVExtractor_isFloat_java_lang_String_ [ label="org.apache.any23.extractor.csv.CSVExtractor.isFloat(java.lang.String)" ];
  org_apache_any23_validator_ValidationReport_FixError_toString__ [ label="org.apache.any23.validator.ValidationReport.FixError.toString()" ];
  org_apache_any23_validator_ValidationReport_Error_toString__ [ label="org.apache.any23.validator.ValidationReport.Error.toString()" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_testThreeDayEvent__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.testThreeDayEvent()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectWSDLByContent__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectWSDLByContent()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestWsdl__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.manifestWsdl()" ];
  org_apache_any23_extractor_html_HReviewExtractor_getDescription__ [ label="org.apache.any23.extractor.html.HReviewExtractor.getDescription()" ];
  addBNodeProperty_Node__Resource__IRI__BNode_ [ label="addBNodeProperty(Node, Resource, IRI, BNode)" ];
  manageError_MicrodataParserException_ [ label="manageError(MicrodataParserException)" ];
  org_apache_any23_validator_DefaultRuleContext_putData_java_lang_String__java_lang_Object_ [ label="org.apache.any23.validator.DefaultRuleContext.putData(java.lang.String, java.lang.Object)" ];
  org_apache_any23_extractor_ExtractorRegistryImpl_getExtractorGroup__ [ label="org.apache.any23.extractor.ExtractorRegistryImpl.getExtractorGroup()" ];
  org_apache_any23_extractor_ExtractorRegistryImpl_getExtractorGroup_java_util_List_java_lang_String__ [ label="org.apache.any23.extractor.ExtractorRegistryImpl.getExtractorGroup(java.util.List<java.lang.String>)" ];
  org_apache_any23_extractor_ExtractorRegistryImpl_getAllNames__ [ label="org.apache.any23.extractor.ExtractorRegistryImpl.getAllNames()" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_test17__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.test17()" ];
  org_apache_any23_extractor_html_EmbeddedJSONLDExtractorTest_testEmbeddedJSONLDInHeadAndBody__ [ label="org.apache.any23.extractor.html.EmbeddedJSONLDExtractorTest.testEmbeddedJSONLDInHeadAndBody()" ];
  org_apache_any23_extractor_microdata_MicrodataParserException_getErrorLocationEndCol__ [ label="org.apache.any23.extractor.microdata.MicrodataParserException.getErrorLocationEndCol()" ];
  org_apache_any23_extractor_html_HTMLDocumentTest_testExtractRelTag__ [ label="org.apache.any23.extractor.html.HTMLDocumentTest.testExtractRelTag()" ];
  getFactory_ExtractorRegistry__String_ [ label="getFactory(ExtractorRegistry, String)" ];
  org_apache_any23_rdf_PrefixesTest_testMergeWithVolatile__ [ label="org.apache.any23.rdf.PrefixesTest.testMergeWithVolatile()" ];
  org_apache_any23_vocab_VocabularyTest_testGetProperties__ [ label="org.apache.any23.vocab.VocabularyTest.testGetProperties()" ];
  org_apache_any23_extractor_rdfa_SemarglSink_endStream__ [ label="org.apache.any23.extractor.rdfa.SemarglSink.endStream()" ];
  org_apache_any23_extractor_html_microformats2_HProductExtractor_getBaseClassName__ [ label="org.apache.any23.extractor.html.microformats2.HProductExtractor.getBaseClassName()" ];
  org_apache_any23_filter_IgnoreAccidentalRDFaTest_testBlockCSSTriple__ [ label="org.apache.any23.filter.IgnoreAccidentalRDFaTest.testBlockCSSTriple()" ];
  org_apache_any23_plugin_Any23PluginManager_DynamicClassLoader_addURL_java_lang_String_ [ label="org.apache.any23.plugin.Any23PluginManager.DynamicClassLoader.addURL(java.lang.String)" ];
  org_apache_any23_http_HTTPClient_close__ [ label="org.apache.any23.http.HTTPClient.close()" ];
  org_apache_any23_mime_TikaMIMETypeDetector_checkN3Format_java_io_InputStream_ [ label="org.apache.any23.mime.TikaMIMETypeDetector.checkN3Format(java.io.InputStream)" ];
  org_apache_any23_mime_TikaMIMETypeDetector_findPattern_java_util_regex_Pattern____char__java_io_InputStream_ [ label="org.apache.any23.mime.TikaMIMETypeDetector.findPattern(java.util.regex.Pattern[], char, java.io.InputStream)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testImgSrcDataUrl__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testImgSrcDataUrl()" ];
  org_apache_any23_extractor_html_RDFMergerTest_test01Basic__ [ label="org.apache.any23.extractor.html.RDFMergerTest.test01Basic()" ];
  org_apache_any23_extractor_html_RDFMergerTest_extractHRevAndRelated_java_lang_String_ [ label="org.apache.any23.extractor.html.RDFMergerTest.extractHRevAndRelated(java.lang.String)" ];
  org_apache_any23_cli_VocabPrinter_RDFFormatConverter_convert_java_lang_String_ [ label="org.apache.any23.cli.VocabPrinter.RDFFormatConverter.convert(java.lang.String)" ];
  org_apache_any23_extractor_html_HResumeExtractorTest_testAnt__ [ label="org.apache.any23.extractor.html.HResumeExtractorTest.testAnt()" ];
  org_apache_any23_validator_ValidationReport_Issue_toString__ [ label="org.apache.any23.validator.ValidationReport.Issue.toString()" ];
  expectEndDocument_IRI_ [ label="expectEndDocument(IRI)" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_loadResultStatement_java_lang_String_ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.loadResultStatement(java.lang.String)" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_TestRDFHandler_getStatements__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.TestRDFHandler.getStatements()" ];
  org_apache_any23_extractor_html_HCardName_getOrganizationUnit__ [ label="org.apache.any23.extractor.html.HCardName.getOrganizationUnit()" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testPrice__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testPrice()" ];
  addPermalink_Resource_ [ label="addPermalink(Resource)" ];
  org_apache_any23_http_DefaultHTTPClient_getSoTimeout__ [ label="org.apache.any23.http.DefaultHTTPClient.getSoTimeout()" ];
  org_apache_any23_extractor_html_TagSoupParserTest_trimValue_java_lang_String_ [ label="org.apache.any23.extractor.html.TagSoupParserTest.trimValue(java.lang.String)" ];
  isRelativeNode_Node_ [ label="isRelativeNode(Node)" ];
  assertContains_Resource__IRI__String_ [ label="assertContains(Resource, IRI, String)" ];
  org_apache_any23_extractor_calendar_ICalExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.calendar.ICalExtractorFactory.createExtractor()" ];
  org_apache_any23_extractor_html_AbstractExtractorTestCase_assertContainsModel_java_lang_String_ [ label="org.apache.any23.extractor.html.AbstractExtractorTestCase.assertContainsModel(java.lang.String)" ];
  org_apache_any23_extractor_html_AbstractExtractorTestCase_getConnection__ [ label="org.apache.any23.extractor.html.AbstractExtractorTestCase.getConnection()" ];
  org_apache_any23_cli_MicrodataParser_run__ [ label="org.apache.any23.cli.MicrodataParser.run()" ];
  org_apache_any23_Any23Test_testExceptionPropagation__ [ label="org.apache.any23.Any23Test.testExceptionPropagation()" ];
  org_apache_any23_extractor_html_microformats2_HItemExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.microformats2.HItemExtractorFactory.createExtractor()" ];
  dumpModel_Model__RDFFormat_ [ label="dumpModel(Model, RDFFormat)" ];
  org_apache_any23_rdf_RDFUtils_getXSDDate_java_lang_String__java_lang_String_ [ label="org.apache.any23.rdf.RDFUtils.getXSDDate(java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_microdata_MicrodataExtractor_getDescription__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractor.getDescription()" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_test12__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.test12()" ];
  getDocumentBase_URL__Document_ [ label="getDocumentBase(URL, Document)" ];
  org_apache_any23_writer_WriterRegistryTest_assertUnique_java_util_List_java_lang_String__ [ label="org.apache.any23.writer.WriterRegistryTest.assertUnique(java.util.List<java.lang.String>)" ];
  org_apache_any23_cli_RoverTest_testDelegatingWriterFactory__ [ label="org.apache.any23.cli.RoverTest.testDelegatingWriterFactory()" ];
  org_apache_any23_source_HTTPDocumentSource_openInputStream__ [ label="org.apache.any23.source.HTTPDocumentSource.openInputStream()" ];
  org_apache_any23_extractor_calendar_BaseCalendarExtractor_localNameOfProperty_java_lang_String_ [ label="org.apache.any23.extractor.calendar.BaseCalendarExtractor.localNameOfProperty(java.lang.String)" ];
  org_apache_any23_extractor_html_HResumeExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.HResumeExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_http_AcceptHeaderBuilderTest_testSingleHeaderSpecific__ [ label="org.apache.any23.http.AcceptHeaderBuilderTest.testSingleHeaderSpecific()" ];
  org_apache_any23_extractor_html_SpanCloserInputStream_resetDetector__ [ label="org.apache.any23.extractor.html.SpanCloserInputStream.resetDetector()" ];
  consolidateResources_List__boolean__TripleHandler__String_ [ label="consolidateResources(List, boolean, TripleHandler, String)" ];
  org_apache_any23_extractor_SingleDocumentExtraction_createExtractionContext_java_lang_String_ [ label="org.apache.any23.extractor.SingleDocumentExtraction.createExtractionContext(java.lang.String)" ];
  org_apache_any23_extractor_rdfa_RDFa11Parser_isCURIEBNode_java_lang_String_ [ label="org.apache.any23.extractor.rdfa.RDFa11Parser.isCURIEBNode(java.lang.String)" ];
  org_apache_any23_util_DiscoveryUtils_findClassesInJAR_java_lang_String_ [ label="org.apache.any23.util.DiscoveryUtils.findClassesInJAR(java.lang.String)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testMultipleUrls__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testMultipleUrls()" ];
  org_apache_any23_cli_CrawlerTest_testCLI__ [ label="org.apache.any23.cli.CrawlerTest.testCLI()" ];
  org_apache_any23_writer_TripleFormat_normalizeMimeType_java_lang_String_ [ label="org.apache.any23.writer.TripleFormat.normalizeMimeType(java.lang.String)" ];
  findAllByTagAndClassName_Node__String__String_ [ label="findAllByTagAndClassName(Node, String, String)" ];
  depthFirstNode_Node__ExtractionResult_ [ label="depthFirstNode(Node, ExtractionResult)" ];
  of_Setting_ [ label="of(Setting)" ];
  org_apache_any23_validator_rule_MetaNameMisuseFix_getHRName__ [ label="org.apache.any23.validator.rule.MetaNameMisuseFix.getHRName()" ];
  org_apache_any23_writer_TripleWriterFactory_getSupportedSettings__ [ label="org.apache.any23.writer.TripleWriterFactory.getSupportedSettings()" ];
  disownProperty_ItemProp_ [ label="disownProperty(ItemProp)" ];
  writeRowMetadata_IRI__Row__ExtractionResult_ [ label="writeRowMetadata(IRI, Row, ExtractionResult)" ];
  org_apache_any23_extractor_html_DomUtilsTest_testGetXPathForNode__ [ label="org.apache.any23.extractor.html.DomUtilsTest.testGetXPathForNode()" ];
  org_apache_any23_configuration_Settings_find_S_ [ label="org.apache.any23.configuration.Settings.find(S)" ];
  org_apache_any23_plugin_htmlscraper_HTMLScraperExtractor_loadDefaultRules__ [ label="org.apache.any23.plugin.htmlscraper.HTMLScraperExtractor.loadDefaultRules()" ];
  org_apache_any23_extractor_html_HTMLDocument_resolveIRI_java_lang_String_ [ label="org.apache.any23.extractor.html.HTMLDocument.resolveIRI(java.lang.String)" ];
  org_apache_any23_extractor_microdata_ItemScope_toJSON_java_lang_String___ [ label="org.apache.any23.extractor.microdata.ItemScope.toJSON(java.lang.String[])" ];
  startRDF__ [ label="startRDF()" ];
  org_apache_any23_validator_ValidationReport_RuleError_toString__ [ label="org.apache.any23.validator.ValidationReport.RuleError.toString()" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testListerFnTel__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testListerFnTel()" ];
  org_apache_any23_extractor_html_microformats2_HEventExtractor_getBaseClassName__ [ label="org.apache.any23.extractor.html.microformats2.HEventExtractor.getBaseClassName()" ];
  org_apache_any23_extractor_html_microformats2_HResumeExtractor_getDescription__ [ label="org.apache.any23.extractor.html.microformats2.HResumeExtractor.getDescription()" ];
  org_apache_any23_rdf_PrefixesTest_testRemoveVolatilePrefix__ [ label="org.apache.any23.rdf.PrefixesTest.testRemoveVolatilePrefix()" ];
  org_apache_any23_vocab_RDFSchemaUtilsTest_testSerializeVocabulariesRDFXML__ [ label="org.apache.any23.vocab.RDFSchemaUtilsTest.testSerializeVocabulariesRDFXML()" ];
  validate_DOMDocument__boolean_ [ label="validate(DOMDocument, boolean)" ];
  org_apache_any23_cli_Rover_PrintStreamConverter_convert_java_lang_String_ [ label="org.apache.any23.cli.Rover.PrintStreamConverter.convert(java.lang.String)" ];
  org_apache_any23_rdf_RDFUtils_literal_java_lang_String__java_lang_String_ [ label="org.apache.any23.rdf.RDFUtils.literal(java.lang.String, java.lang.String)" ];
  org_apache_any23_validator_XMLValidationReportSerializer_getClassName_java_lang_Class___extends_java_lang_Object__ [ label="org.apache.any23.validator.XMLValidationReportSerializer.getClassName(java.lang.Class<? extends java.lang.Object>)" ];
  org_apache_any23_vocab_Excel_createProperty_java_lang_String_ [ label="org.apache.any23.vocab.Excel.createProperty(java.lang.String)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectXHTMLByMeta__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectXHTMLByMeta()" ];
  org_apache_any23_configuration_DefaultConfigurationTest_testGetProperties__ [ label="org.apache.any23.configuration.DefaultConfigurationTest.testGetProperties()" ];
  org_apache_any23_extractor_html_HReviewExtractorTest_testNoMicroformats__ [ label="org.apache.any23.extractor.html.HReviewExtractorTest.testNoMicroformats()" ];
  org_apache_any23_validator_DefaultValidationReport_getRuleActivations__ [ label="org.apache.any23.validator.DefaultValidationReport.getRuleActivations()" ];
  updateLanguage_Node__EvaluationContext_ [ label="updateLanguage(Node, EvaluationContext)" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_testHCalendarWithBudyInfo__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.testHCalendarWithBudyInfo()" ];
  join_TextField____String_ [ label="join(TextField[], String)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testInfiniteLoop__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testInfiniteLoop()" ];
  writeTriple_Resource__IRI__Value__Resource_ [ label="writeTriple(Resource, IRI, Value, Resource)" ];
  org_apache_any23_writer_JSONWriter_printIRI_java_lang_String_ [ label="org.apache.any23.writer.JSONWriter.printIRI(java.lang.String)" ];
  org_apache_any23_writer_RDFWriterTripleHandler_writer__ [ label="org.apache.any23.writer.RDFWriterTripleHandler.writer()" ];
  org_apache_any23_extractor_html_EncodingTest_testEncodingXHTML_ISO_8859_1__ [ label="org.apache.any23.extractor.html.EncodingTest.testEncodingXHTML_ISO_8859_1()" ];
  org_apache_any23_plugin_officescraper_ExcelExtractor_isStopAtFirstError__ [ label="org.apache.any23.plugin.officescraper.ExcelExtractor.isStopAtFirstError()" ];
  org_apache_any23_Any23Test_detectAndExtract_java_lang_String_ [ label="org.apache.any23.Any23Test.detectAndExtract(java.lang.String)" ];
  getStatements_Resource__IRI__Value_ [ label="getStatements(Resource, IRI, Value)" ];
  reportIssue_ValidationReport_IssueLevel__String_ [ label="reportIssue(ValidationReport.IssueLevel, String)" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testMicrodataGoogleRichSnippet__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.testMicrodataGoogleRichSnippet()" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_extractAndVerifyAgainstNQuads_java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.extractAndVerifyAgainstNQuads(java.lang.String, java.lang.String)" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_fixLink_java_lang_String__java_lang_String_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.fixLink(java.lang.String, java.lang.String)" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_fixWhiteSpace_java_lang_String_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.fixWhiteSpace(java.lang.String)" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_fixIRI_java_lang_String_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.fixIRI(java.lang.String)" ];
  org_apache_any23_extractor_rdf_NQuadsExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.rdf.NQuadsExtractorFactory.createExtractor()" ];
  register_ExtractorFactory_ [ label="register(ExtractorFactory)" ];
  org_apache_any23_extractor_microdata_ItemScope_getRefs__ [ label="org.apache.any23.extractor.microdata.ItemScope.getRefs()" ];
  org_apache_any23_rdf_PrefixesTest_testCanAddAfterRemoving__ [ label="org.apache.any23.rdf.PrefixesTest.testCanAddAfterRemoving()" ];
  org_apache_any23_validator_XMLValidationReportSerializer_serializeObject_java_lang_Object__java_io_PrintStream_ [ label="org.apache.any23.validator.XMLValidationReportSerializer.serializeObject(java.lang.Object, java.io.PrintStream)" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testExample5__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.testExample5()" ];
  org_apache_any23_plugin_officescraper_ExcelExtractorTest_testExtractXLSX__ [ label="org.apache.any23.plugin.officescraper.ExcelExtractorTest.testExtractXLSX()" ];
  org_apache_any23_plugin_officescraper_ExcelExtractorTest_processFile_java_lang_String_ [ label="org.apache.any23.plugin.officescraper.ExcelExtractorTest.processFile(java.lang.String)" ];
  getPredicate_Node_ [ label="getPredicate(Node)" ];
  org_apache_any23_extractor_yaml_ElementsProcessor_ModelHolder_getRoot__ [ label="org.apache.any23.extractor.yaml.ElementsProcessor.ModelHolder.getRoot()" ];
  org_apache_any23_vocab_OGPVideo_getInstance__ [ label="org.apache.any23.vocab.OGPVideo.getInstance()" ];
  register_WriterFactory_ [ label="register(WriterFactory)" ];
  addBrand_HTMLDocument__Resource_ [ label="addBrand(HTMLDocument, Resource)" ];
  org_apache_any23_extractor_TagSoupExtractionResult_ResourceRoot_getRoot__ [ label="org.apache.any23.extractor.TagSoupExtractionResult.ResourceRoot.getRoot()" ];
  org_apache_any23_validator_ValidationReport_RuleActivation_toString__ [ label="org.apache.any23.validator.ValidationReport.RuleActivation.toString()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testTriXByContentAndName__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testTriXByContentAndName()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestTrix__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.manifestTrix()" ];
  addTelephones_Resource_ [ label="addTelephones(Resource)" ];
  org_apache_any23_extractor_yaml_YAMLExtractorTest_tree2Test__ [ label="org.apache.any23.extractor.yaml.YAMLExtractorTest.tree2Test()" ];
  org_apache_any23_rdf_PrefixesTest_testCreate1__ [ label="org.apache.any23.rdf.PrefixesTest.testCreate1()" ];
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_AcceptHeaderOverride_getReplacement__ [ label="org.apache.any23.servlet.conneg.ContentTypeNegotiator.AcceptHeaderOverride.getReplacement()" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorFactory.createExtractor()" ];
  org_apache_any23_extractor_html_EmbeddedJSONLDExtractorTest_testEmbeddedJSONLDInHead__ [ label="org.apache.any23.extractor.html.EmbeddedJSONLDExtractorTest.testEmbeddedJSONLDInHead()" ];
  org_apache_any23_extractor_html_XFNExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.XFNExtractorFactory.createExtractor()" ];
  extract_String__String__String__String__TripleHandler_ [ label="extract(String, String, String, String, TripleHandler)" ];
  org_apache_any23_source_ByteArrayDocumentSource_getContentType__ [ label="org.apache.any23.source.ByteArrayDocumentSource.getContentType()" ];
  serializeToXML_Node__boolean_ [ label="serializeToXML(Node, boolean)" ];
  org_apache_any23_vocab_ReviewAggregate_createProperty_java_lang_String_ [ label="org.apache.any23.vocab.ReviewAggregate.createProperty(java.lang.String)" ];
  org_apache_any23_plugin_extractor_openie_OpenIEExtractor_getDescription__ [ label="org.apache.any23.plugin.extractor.openie.OpenIEExtractor.getDescription()" ];
  org_apache_any23_configuration_Configuration_getPropertyOrFail_java_lang_String_ [ label="org.apache.any23.configuration.Configuration.getPropertyOrFail(java.lang.String)" ];
  org_apache_any23_extractor_html_HCardName_reset__ [ label="org.apache.any23.extractor.html.HCardName.reset()" ];
  org_apache_any23_validator_XMLValidationReportSerializerTest_tearDown__ [ label="org.apache.any23.validator.XMLValidationReportSerializerTest.tearDown()" ];
  org_apache_any23_servlet_conneg_MediaRangeSpec_parseType_java_lang_String_ [ label="org.apache.any23.servlet.conneg.MediaRangeSpec.parseType(java.lang.String)" ];
  org_apache_any23_servlet_conneg_MediaRangeSpec_parseRange_java_lang_String_ [ label="org.apache.any23.servlet.conneg.MediaRangeSpec.parseRange(java.lang.String)" ];
  org_apache_any23_extractor_html_XFNExtractorTest_testRelativeIRIisResolvedAgainstBase__ [ label="org.apache.any23.extractor.html.XFNExtractorTest.testRelativeIRIisResolvedAgainstBase()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testIncludePattern__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testIncludePattern()" ];
  org_apache_any23_cli_VocabPrinterTest_testRun__ [ label="org.apache.any23.cli.VocabPrinterTest.testRun()" ];
  org_apache_any23_vocab_OGPProfile_createClass_java_lang_String_ [ label="org.apache.any23.vocab.OGPProfile.createClass(java.lang.String)" ];
  org_apache_any23_extractor_html_MicroformatExtractor_fixLink_java_lang_String_ [ label="org.apache.any23.extractor.html.MicroformatExtractor.fixLink(java.lang.String)" ];
  org_apache_any23_cli_RoverTest_testRunWithDefaultNS__ [ label="org.apache.any23.cli.RoverTest.testRunWithDefaultNS()" ];
  org_apache_any23_http_AcceptHeaderBuilderTest_testMultipleIndependentHeaders__ [ label="org.apache.any23.http.AcceptHeaderBuilderTest.testMultipleIndependentHeaders()" ];
  org_apache_any23_extractor_microdata_Item_equals_java_lang_Object_ [ label="org.apache.any23.extractor.microdata.Item.equals(java.lang.Object)" ];
  org_apache_any23_extractor_xpath_TemplateObject_toString__ [ label="org.apache.any23.extractor.xpath.TemplateObject.toString()" ];
  org_apache_any23_extractor_rdf_JSONLDExtractor_getDescription__ [ label="org.apache.any23.extractor.rdf.JSONLDExtractor.getDescription()" ];
  org_apache_any23_extractor_html_XFNExtractorTest_testParseTagSoup__ [ label="org.apache.any23.extractor.html.XFNExtractorTest.testParseTagSoup()" ];
  org_apache_any23_extractor_html_AdrExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.AdrExtractorFactory.createExtractor()" ];
  org_apache_any23_vocab_OGPArticle_createClass_java_lang_String_ [ label="org.apache.any23.vocab.OGPArticle.createClass(java.lang.String)" ];
  org_apache_any23_extractor_html_TurtleHTMLExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.TurtleHTMLExtractorTest.getExtractorFactory()" ];
  org_apache_any23_ExtractionReport_getValidationReport__ [ label="org.apache.any23.ExtractionReport.getValidationReport()" ];
  org_apache_any23_vocab_Vocabulary_createClass_java_lang_String__java_lang_String_ [ label="org.apache.any23.vocab.Vocabulary.createClass(java.lang.String, java.lang.String)" ];
  org_apache_any23_vocab_Vocabulary_createIRI_java_lang_String__java_lang_String_ [ label="org.apache.any23.vocab.Vocabulary.createIRI(java.lang.String, java.lang.String)" ];
  visitedPage_Page_ [ label="visitedPage(Page)" ];
  addPhotos_HTMLDocument__BNode_ [ label="addPhotos(HTMLDocument, BNode)" ];
  iri_IRI_ [ label="iri(IRI)" ];
  org_apache_any23_vocab_VocabularyTest_testGetComments__ [ label="org.apache.any23.vocab.VocabularyTest.testGetComments()" ];
  org_apache_any23_extractor_microdata_MicrodataParserTest_testAdvancedItemrefManagement__ [ label="org.apache.any23.extractor.microdata.MicrodataParserTest.testAdvancedItemrefManagement()" ];
  org_apache_any23_extractor_microdata_MicrodataParserTest_extractItemsAndVerifyJSONSerialization_java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.microdata.MicrodataParserTest.extractItemsAndVerifyJSONSerialization(java.lang.String, java.lang.String)" ];
  getWriter_Writer_ [ label="getWriter(Writer)" ];
  org_apache_any23_rdf_PrefixesTest_testAddVolatile__ [ label="org.apache.any23.rdf.PrefixesTest.testAddVolatile()" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_Any23Test_testRDFXMLDetectionAndExtraction__ [ label="org.apache.any23.Any23Test.testRDFXMLDetectionAndExtraction()" ];
  org_apache_any23_util_StringUtils_multiply_char__int_ [ label="org.apache.any23.util.StringUtils.multiply(char, int)" ];
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_addUserAgentOverride_java_util_regex_Pattern__java_lang_String__java_lang_String_ [ label="org.apache.any23.servlet.conneg.ContentTypeNegotiator.addUserAgentOverride(java.util.regex.Pattern, java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_html_TurtleHTMLExtractor_getDescription__ [ label="org.apache.any23.extractor.html.TurtleHTMLExtractor.getDescription()" ];
  org_apache_any23_plugin_PluginIT_after__ [ label="org.apache.any23.plugin.PluginIT.after()" ];
  org_apache_any23_extractor_ExtractorRegistryImpl_unregister_java_lang_String_ [ label="org.apache.any23.extractor.ExtractorRegistryImpl.unregister(java.lang.String)" ];
  org_apache_any23_rdf_Prefixes_removePrefix_java_lang_String_ [ label="org.apache.any23.rdf.Prefixes.removePrefix(java.lang.String)" ];
  org_apache_any23_extractor_xpath_XPathExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.xpath.XPathExtractorFactory.createExtractor()" ];
  org_apache_any23_extractor_microdata_ItemPropValue_getAsLink__ [ label="org.apache.any23.extractor.microdata.ItemPropValue.getAsLink()" ];
  org_apache_any23_rdf_PrefixesTest_testCanReAssignToSameIRI__ [ label="org.apache.any23.rdf.PrefixesTest.testCanReAssignToSameIRI()" ];
  org_apache_any23_servlet_conneg_MediaRangeSpec_getMediaType__ [ label="org.apache.any23.servlet.conneg.MediaRangeSpec.getMediaType()" ];
  org_apache_any23_validator_DefaultValidationReportBuilder_toString__ [ label="org.apache.any23.validator.DefaultValidationReportBuilder.toString()" ];
  org_apache_any23_validator_XMLValidationReportSerializerTest_setUp__ [ label="org.apache.any23.validator.XMLValidationReportSerializerTest.setUp()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRSS2ByContent__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectRSS2ByContent()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestRss2__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.manifestRss2()" ];
  setAnnotated_boolean_ [ label="setAnnotated(boolean)" ];
  org_apache_any23_filter_ExtractionContextBlocker_ValvedTriplePipe_sendNamespace_java_lang_String__java_lang_String_ [ label="org.apache.any23.filter.ExtractionContextBlocker.ValvedTriplePipe.sendNamespace(java.lang.String, java.lang.String)" ];
  org_apache_any23_vocab_LKIFCoreMereology_getInstance__ [ label="org.apache.any23.vocab.LKIFCoreMereology.getInstance()" ];
  head_org_jsoup_nodes_Node__int_ [ label="head(org.jsoup.nodes.Node, int)" ];
  org_apache_any23_extractor_html_TagSoupParser_ElementLocation_getEndLineNumber__ [ label="org.apache.any23.extractor.html.TagSoupParser.ElementLocation.getEndLineNumber()" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_createLiteral_java_math_BigInteger_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.createLiteral(java.math.BigInteger)" ];
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_AcceptHeaderOverride_matches_java_lang_String__java_lang_String_ [ label="org.apache.any23.servlet.conneg.ContentTypeNegotiator.AcceptHeaderOverride.matches(java.lang.String, java.lang.String)" ];
  addAnniversary_HTMLDocument__BNode_ [ label="addAnniversary(HTMLDocument, BNode)" ];
  org_apache_any23_plugin_Any23PluginManagerTest_testGetPlugins__ [ label="org.apache.any23.plugin.Any23PluginManagerTest.testGetPlugins()" ];
  org_apache_any23_rdf_RDFUtils_makeIRI_java_lang_String_ [ label="org.apache.any23.rdf.RDFUtils.makeIRI(java.lang.String)" ];
  org_apache_any23_extractor_xpath_TemplateSubject_toString__ [ label="org.apache.any23.extractor.xpath.TemplateSubject.toString()" ];
  normalizeAndReportIfInvalid_String__IRI__TimeZone__ExtractionResult_ [ label="normalizeAndReportIfInvalid(String, IRI, TimeZone, ExtractionResult)" ];
  org_apache_any23_extractor_microdata_ItemPropValue_getAsDate__ [ label="org.apache.any23.extractor.microdata.ItemPropValue.getAsDate()" ];
  org_apache_any23_extractor_ExtractionContext_toString__ [ label="org.apache.any23.extractor.ExtractionContext.toString()" ];
  org_apache_any23_extractor_html_HCardExtractor_getDescription__ [ label="org.apache.any23.extractor.html.HCardExtractor.getDescription()" ];
  org_apache_any23_extractor_microdata_ItemPropValue_isNested__ [ label="org.apache.any23.extractor.microdata.ItemPropValue.isNested()" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.getExtractorFactory()" ];
  org_apache_any23_extractor_xpath_TemplateXPathExtractorRuleImplTest_testAddRemoveVariables__ [ label="org.apache.any23.extractor.xpath.TemplateXPathExtractorRuleImplTest.testAddRemoveVariables()" ];
  newDefault_Configuration_ [ label="newDefault(Configuration)" ];
  org_apache_any23_Any23OnlineTestBase_assumeOnlineAllowed__ [ label="org.apache.any23.Any23OnlineTestBase.assumeOnlineAllowed()" ];
  org_apache_any23_extractor_html_HRecipeExtractor_resetExtractor__ [ label="org.apache.any23.extractor.html.HRecipeExtractor.resetExtractor()" ];
  org_apache_any23_extractor_html_TitleExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.TitleExtractorFactory.createExtractor()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testGeoAbbr__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testGeoAbbr()" ];
  org_apache_any23_extractor_html_HReviewExtractor_getBaseClassName__ [ label="org.apache.any23.extractor.html.HReviewExtractor.getBaseClassName()" ];
  parseRDF_RDFFormat__InputStream_ [ label="parseRDF(RDFFormat, InputStream)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestHtml__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.manifestHtml()" ];
  org_apache_any23_writer_TripleFormat_Capabilities_withNamespaces__ [ label="org.apache.any23.writer.TripleFormat.Capabilities.withNamespaces()" ];
  addAffiliations_HTMLDocument__Resource_ [ label="addAffiliations(HTMLDocument, Resource)" ];
  org_apache_any23_extractor_calendar_JCalExtractorTest_filePrefix__ [ label="org.apache.any23.extractor.calendar.JCalExtractorTest.filePrefix()" ];
  org_apache_any23_extractor_ExtractionContext_getDocumentIRI__ [ label="org.apache.any23.extractor.ExtractionContext.getDocumentIRI()" ];
  org_apache_any23_extractor_html_TurtleHTMLExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.TurtleHTMLExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_extractor_rdfa_BaseRDFaExtractor_toString_java_lang_Throwable_ [ label="org.apache.any23.extractor.rdfa.BaseRDFaExtractor.toString(java.lang.Throwable)" ];
  add_Variable_ [ label="add(Variable)" ];
  org_apache_any23_filter_IgnoreAccidentalRDFaTest_testAcceptGenericTriple__ [ label="org.apache.any23.filter.IgnoreAccidentalRDFaTest.testAcceptGenericTriple()" ];
  org_apache_any23_plugin_Any23PluginManager_loadJARDir_java_io_File_ [ label="org.apache.any23.plugin.Any23PluginManager.loadJARDir(java.io.File)" ];
  org_apache_any23_plugin_Any23PluginManager_loadJAR_java_io_File_ [ label="org.apache.any23.plugin.Any23PluginManager.loadJAR(java.io.File)" ];
  findNodeById_Node__String_ [ label="findNodeById(Node, String)" ];
  org_apache_any23_extractor_html_HTMLDocument_getPluralUrlField_java_lang_String_ [ label="org.apache.any23.extractor.html.HTMLDocument.getPluralUrlField(java.lang.String)" ];
  getTagSoupDOM_ExtractionParameters_ [ label="getTagSoupDOM(ExtractionParameters)" ];
  org_apache_any23_http_AcceptHeaderBuilderTest_testEmpty__ [ label="org.apache.any23.http.AcceptHeaderBuilderTest.testEmpty()" ];
  org_apache_any23_extractor_html_XFNExtractorTest_testNoMicroformats__ [ label="org.apache.any23.extractor.html.XFNExtractorTest.testNoMicroformats()" ];
  org_apache_any23_extractor_html_AdrExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.AdrExtractorTest.getExtractorFactory()" ];
  processDocument_URL__Document__ExtractionResult_ [ label="processDocument(URL, Document, ExtractionResult)" ];
  org_apache_any23_extractor_xpath_TemplateXPathExtractorRuleImplTest_testAddTemplateWithNoDeclaredVarCheck__ [ label="org.apache.any23.extractor.xpath.TemplateXPathExtractorRuleImplTest.testAddTemplateWithNoDeclaredVarCheck()" ];
  getDocumentLanguage_Document_ [ label="getDocumentLanguage(Document)" ];
  org_apache_any23_extractor_rdf_BaseRDFExtractor_isStopAtFirstError__ [ label="org.apache.any23.extractor.rdf.BaseRDFExtractor.isStopAtFirstError()" ];
  getMimeType_WriterFactory_ [ label="getMimeType(WriterFactory)" ];
  org_apache_any23_writer_RDFWriterTripleHandler_isAnnotated__ [ label="org.apache.any23.writer.RDFWriterTripleHandler.isAnnotated()" ];
  org_apache_any23_Any23Test_assertEncodingDetection_java_lang_String__java_lang_String__java_lang_String_ [ label="org.apache.any23.Any23Test.assertEncodingDetection(java.lang.String, java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_rdfa_RDFa11ParserTest_testIsRelativeNegative__ [ label="org.apache.any23.extractor.rdfa.RDFa11ParserTest.testIsRelativeNegative()" ];
  org_apache_any23_extractor_ExtractionParameters_setFlag_java_lang_String__boolean_ [ label="org.apache.any23.extractor.ExtractionParameters.setFlag(java.lang.String, boolean)" ];
  org_apache_any23_extractor_ExtractionParameters_validateValue_java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.ExtractionParameters.validateValue(java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_html_microformats2_HAdrExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.microformats2.HAdrExtractorTest.getExtractorFactory()" ];
  acceptNode_Node_ [ label="acceptNode(Node)" ];
  org_apache_any23_extractor_html_microformats2_HEntryExtractor_getBaseClassName__ [ label="org.apache.any23.extractor.html.microformats2.HEntryExtractor.getBaseClassName()" ];
  evaluateDefaultVariant_MediaRangeSpec_ [ label="evaluateDefaultVariant(MediaRangeSpec)" ];
  org_apache_any23_openie_OpenIEExtractorTest_tearDown__ [ label="org.apache.any23.openie.OpenIEExtractorTest.tearDown()" ];
  org_apache_any23_extractor_html_microformats2_HCardExtractor_resetExtractor__ [ label="org.apache.any23.extractor.html.microformats2.HCardExtractor.resetExtractor()" ];
  org_apache_any23_extractor_html_LicenseExtractorTest_testMixedCaseTitleTag__ [ label="org.apache.any23.extractor.html.LicenseExtractorTest.testMixedCaseTitleTag()" ];
  org_apache_any23_plugin_Any23PluginManager_getPluginLocations_java_lang_String_ [ label="org.apache.any23.plugin.Any23PluginManager.getPluginLocations(java.lang.String)" ];
  org_apache_any23_Any23Test_testDemoCodeSnippet1__ [ label="org.apache.any23.Any23Test.testDemoCodeSnippet1()" ];
  org_apache_any23_extractor_ExtractionResultImplTest_tearDown__ [ label="org.apache.any23.extractor.ExtractionResultImplTest.tearDown()" ];
  getItemProps_Node__boolean_ [ label="getItemProps(Node, boolean)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_tearDown__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.tearDown()" ];
  org_apache_any23_plugin_officescraper_XSSFWorkbookTest_testXLSXFormatAccess__ [ label="org.apache.any23.plugin.officescraper.XSSFWorkbookTest.testXLSXFormatAccess()" ];
  org_apache_any23_util_LogUtils_setDefaultLogging__ [ label="org.apache.any23.util.LogUtils.setDefaultLogging()" ];
  org_apache_any23_writer_ReportingTripleHandler_close__ [ label="org.apache.any23.writer.ReportingTripleHandler.close()" ];
  org_apache_any23_cli_MicrodataParser_setOut_java_io_PrintStream_ [ label="org.apache.any23.cli.MicrodataParser.setOut(java.io.PrintStream)" ];
  getPropertyValue_Node_ [ label="getPropertyValue(Node)" ];
  isTooGeneric_MIMEType_ [ label="isTooGeneric(MIMEType)" ];
  org_apache_any23_extractor_html_AbstractExtractorTestCase_dumpHumanReadableTriples__ [ label="org.apache.any23.extractor.html.AbstractExtractorTestCase.dumpHumanReadableTriples()" ];
  org_apache_any23_extractor_yaml_YAMLExtractorTest_treeTest__ [ label="org.apache.any23.extractor.yaml.YAMLExtractorTest.treeTest()" ];
  org_apache_any23_servlet_ServletTest_testGETAddsHTTPScheme__ [ label="org.apache.any23.servlet.ServletTest.testGETAddsHTTPScheme()" ];
  org_apache_any23_extractor_yaml_YAMLExtractorTest_multiTest__ [ label="org.apache.any23.extractor.yaml.YAMLExtractorTest.multiTest()" ];
  org_apache_any23_extractor_microdata_ItemProp_getName__ [ label="org.apache.any23.extractor.microdata.ItemProp.getName()" ];
  org_apache_any23_rdf_PrefixesTest_testEmptyPrefix__ [ label="org.apache.any23.rdf.PrefixesTest.testEmptyPrefix()" ];
  org_apache_any23_servlet_ServletTest_testResponseWithReport__ [ label="org.apache.any23.servlet.ServletTest.testResponseWithReport()" ];
  org_apache_any23_extractor_calendar_XCalExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.calendar.XCalExtractorFactory.createExtractor()" ];
  org_apache_any23_http_AcceptHeaderBuilderTest_testHighestSpecificValueIsChosen__ [ label="org.apache.any23.http.AcceptHeaderBuilderTest.testHighestSpecificValueIsChosen()" ];
  org_apache_any23_ExtractionReport_hasMatchingExtractors__ [ label="org.apache.any23.ExtractionReport.hasMatchingExtractors()" ];
  org_apache_any23_extractor_xpath_TemplateXPathExtractionRuleImpl_checkVariableNameDeclared_java_lang_String_ [ label="org.apache.any23.extractor.xpath.TemplateXPathExtractionRuleImpl.checkVariableNameDeclared(java.lang.String)" ];
  org_apache_any23_extractor_xpath_TemplateXPathExtractionRuleImpl_variableNameDeclared_java_lang_String_ [ label="org.apache.any23.extractor.xpath.TemplateXPathExtractionRuleImpl.variableNameDeclared(java.lang.String)" ];
  org_apache_any23_plugin_Any23PluginManager_loadFiles_java_io_File____ [ label="org.apache.any23.plugin.Any23PluginManager.loadFiles(java.io.File...)" ];
  org_apache_any23_plugin_Any23PluginManager_loadClassDir_java_io_File_ [ label="org.apache.any23.plugin.Any23PluginManager.loadClassDir(java.io.File)" ];
  org_apache_any23_extractor_html_AdrExtractorTest_testVCardMultiAddress__ [ label="org.apache.any23.extractor.html.AdrExtractorTest.testVCardMultiAddress()" ];
  addExtractionTimeSizeMetaTriples_ExtractionContext_ [ label="addExtractionTimeSizeMetaTriples(ExtractionContext)" ];
  org_apache_any23_extractor_csv_CSVExtractorTest_testExtractionCommaSeparated__ [ label="org.apache.any23.extractor.csv.CSVExtractorTest.testExtractionCommaSeparated()" ];
  org_apache_any23_extractor_rdfa_RDFaExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.rdfa.RDFaExtractorTest.getExtractorFactory()" ];
  org_apache_any23_extractor_html_HTMLDocument_findMicroformattedObjectNode_java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.html.HTMLDocument.findMicroformattedObjectNode(java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_ExtractionParameters_getProperty_java_lang_String_ [ label="org.apache.any23.extractor.ExtractionParameters.getProperty(java.lang.String)" ];
  getTripleWriter_TripleHandler__Settings_ [ label="getTripleWriter(TripleHandler, Settings)" ];
  org_apache_any23_extractor_html_TitleExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.TitleExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_extractor_html_TagSoupParser_getDOM__ [ label="org.apache.any23.extractor.html.TagSoupParser.getDOM()" ];
  org_apache_any23_extractor_csv_CSVReaderBuilder_getCharValueFromConfiguration_java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.csv.CSVReaderBuilder.getCharValueFromConfiguration(java.lang.String, java.lang.String)" ];
  processHeader_CSVRecord__IRI_ [ label="processHeader(CSVRecord, IRI)" ];
  org_apache_any23_configuration_Configuration_getProperty_java_lang_String__java_lang_String_ [ label="org.apache.any23.configuration.Configuration.getProperty(java.lang.String, java.lang.String)" ];
  hasAttribute_Node__String_ [ label="hasAttribute(Node, String)" ];
  getTypes_Node_ [ label="getTypes(Node)" ];
  get_Setting_ [ label="get(Setting)" ];
  configureParser_RDFParser__boolean__boolean__ExtractionContext__ExtractionResult_ [ label="configureParser(RDFParser, boolean, boolean, ExtractionContext, ExtractionResult)" ];
  org_apache_any23_plugin_Any23PluginManager_getInstance__ [ label="org.apache.any23.plugin.Any23PluginManager.getInstance()" ];
  org_apache_any23_cli_Rover_getOut__ [ label="org.apache.any23.cli.Rover.getOut()" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_createLiteral_java_lang_String__java_lang_String_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.createLiteral(java.lang.String, java.lang.String)" ];
  org_apache_any23_configuration_SettingsTest_testDuplicateIdentifiers__ [ label="org.apache.any23.configuration.SettingsTest.testDuplicateIdentifiers()" ];
  org_apache_any23_extractor_html_microformats2_HGeoExtractor_getDescription__ [ label="org.apache.any23.extractor.html.microformats2.HGeoExtractor.getDescription()" ];
  org_apache_any23_writer_RDFWriterTripleHandler_handleComment_java_lang_String_ [ label="org.apache.any23.writer.RDFWriterTripleHandler.handleComment(java.lang.String)" ];
  org_apache_any23_extractor_xpath_TemplateXPathExtractorRuleImplTest_testAddRemoveTemplates__ [ label="org.apache.any23.extractor.xpath.TemplateXPathExtractorRuleImplTest.testAddRemoveTemplates()" ];
  org_apache_any23_writer_WriterFactoryRegistry_getInstance__ [ label="org.apache.any23.writer.WriterFactoryRegistry.getInstance()" ];
  establishNewSubjectCurrentObjectResource_Node__EvaluationContext_ [ label="establishNewSubjectCurrentObjectResource(Node, EvaluationContext)" ];
  getTriXParser_boolean__boolean__ExtractionContext__ExtractionResult_ [ label="getTriXParser(boolean, boolean, ExtractionContext, ExtractionResult)" ];
  org_apache_any23_configuration_SettingsTest_testFind__ [ label="org.apache.any23.configuration.SettingsTest.testFind()" ];
  org_apache_any23_extractor_calendar_ICalExtractorTest_testRFC5545example3__ [ label="org.apache.any23.extractor.calendar.ICalExtractorTest.testRFC5545example3()" ];
  htmlCharset_TextStatistics__Element_ [ label="htmlCharset(TextStatistics, Element)" ];
  org_apache_any23_encoding_TikaEncodingDetectorTest_testIso88591Simple__ [ label="org.apache.any23.encoding.TikaEncodingDetectorTest.testIso88591Simple()" ];
  org_apache_any23_servlet_WebResponder_getRunner__ [ label="org.apache.any23.servlet.WebResponder.getRunner()" ];
  org_apache_any23_writer_TripleFormat_getStandardIRI__ [ label="org.apache.any23.writer.TripleFormat.getStandardIRI()" ];
  org_apache_any23_extractor_html_HTMLDocument_findNodeById_java_lang_String_ [ label="org.apache.any23.extractor.html.HTMLDocument.findNodeById(java.lang.String)" ];
  org_apache_any23_rdf_PrefixesTest_testCanExpandDeclaredPrefix__ [ label="org.apache.any23.rdf.PrefixesTest.testCanExpandDeclaredPrefix()" ];
  org_apache_any23_extractor_html_AbstractExtractorTestCase_getIssues_java_lang_String_ [ label="org.apache.any23.extractor.html.AbstractExtractorTestCase.getIssues(java.lang.String)" ];
  org_apache_any23_extractor_ExtractionParameters_newDefault__ [ label="org.apache.any23.extractor.ExtractionParameters.newDefault()" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testItemPhotoImg__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testItemPhotoImg()" ];
  org_apache_any23_rdf_PrefixesTest_testMergeEmptyPrefixes__ [ label="org.apache.any23.rdf.PrefixesTest.testMergeEmptyPrefixes()" ];
  getItemScope_Node_ [ label="getItemScope(Node)" ];
  org_apache_any23_extractor_microdata_MicrodataParser_deferProperties_java_lang_String____ [ label="org.apache.any23.extractor.microdata.MicrodataParser.deferProperties(java.lang.String...)" ];
  org_apache_any23_Any23Test_testImplicitEncoding__ [ label="org.apache.any23.Any23Test.testImplicitEncoding()" ];
  org_apache_any23_configuration_Setting_create_java_lang_String__java_lang_Float_ [ label="org.apache.any23.configuration.Setting.create(java.lang.String, java.lang.Float)" ];
  processList_IRI__List_ [ label="processList(IRI, List)" ];
  org_apache_any23_extractor_microdata_Item_toJSON__ [ label="org.apache.any23.extractor.microdata.Item.toJSON()" ];
  org_apache_any23_extractor_html_microformats2_HGeoExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.microformats2.HGeoExtractorTest.getExtractorFactory()" ];
  org_apache_any23_extractor_html_HTMLMetaExtractor_Meta_getName__ [ label="org.apache.any23.extractor.html.HTMLMetaExtractor.Meta.getName()" ];
  org_apache_any23_extractor_yaml_YAMLTikaParserTest_tikaStreamDetect__ [ label="org.apache.any23.extractor.yaml.YAMLTikaParserTest.tikaStreamDetect()" ];
  createStatement_Resource__IRI__Value_ [ label="createStatement(Resource, IRI, Value)" ];
  org_apache_any23_extractor_rdfa_AbstractRDFaExtractorTestCase_testDrupalTestPage__ [ label="org.apache.any23.extractor.rdfa.AbstractRDFaExtractorTestCase.testDrupalTestPage()" ];
  org_apache_any23_vocab_LKIFCoreTime_getInstance__ [ label="org.apache.any23.vocab.LKIFCoreTime.getInstance()" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testSummary__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testSummary()" ];
  org_apache_any23_extractor_ExtractionContext_getExtractorName__ [ label="org.apache.any23.extractor.ExtractionContext.getExtractorName()" ];
  org_apache_any23_writer_TripleFormat_toRDFFormat__ [ label="org.apache.any23.writer.TripleFormat.toRDFFormat()" ];
  getFormatFromRequest_HttpServletRequest_ [ label="getFormatFromRequest(HttpServletRequest)" ];
  org_apache_any23_extractor_microdata_MicrodataParserTest_getMicrodataDom_java_lang_String_ [ label="org.apache.any23.extractor.microdata.MicrodataParserTest.getMicrodataDom(java.lang.String)" ];
  org_apache_any23_extractor_microdata_ItemProp_hashCode__ [ label="org.apache.any23.extractor.microdata.ItemProp.hashCode()" ];
  org_apache_any23_extractor_html_HTMLMetaExtractor_Meta_getContent__ [ label="org.apache.any23.extractor.html.HTMLMetaExtractor.Meta.getContent()" ];
  org_apache_any23_extractor_rdfa_SemarglSink_addNonLiteral_java_lang_String__java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.rdfa.SemarglSink.addNonLiteral(java.lang.String, java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_html_RDFMergerTest_testNoMicroformats__ [ label="org.apache.any23.extractor.html.RDFMergerTest.testNoMicroformats()" ];
  org_apache_any23_extractor_html_RDFMergerTest_extract_java_lang_String_ [ label="org.apache.any23.extractor.html.RDFMergerTest.extract(java.lang.String)" ];
  org_apache_any23_extractor_rdf_FunctionalSyntaxExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.rdf.FunctionalSyntaxExtractorFactory.createExtractor()" ];
  org_apache_any23_extractor_rdfa_SemarglSink_addPlainLiteral_java_lang_String__java_lang_String__java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.rdfa.SemarglSink.addPlainLiteral(java.lang.String, java.lang.String, java.lang.String, java.lang.String)" ];
  itemrefIds_Node_ [ label="itemrefIds(Node)" ];
  org_apache_any23_encoding_TikaEncodingDetectorTest_testISO8859HTML__ [ label="org.apache.any23.encoding.TikaEncodingDetectorTest.testISO8859HTML()" ];
  org_apache_any23_configuration_Configuration_getFlagProperty_java_lang_String_ [ label="org.apache.any23.configuration.Configuration.getFlagProperty(java.lang.String)" ];
  org_apache_any23_extractor_html_HTMLFixture_getDOM__ [ label="org.apache.any23.extractor.html.HTMLFixture.getDOM()" ];
  org_apache_any23_extractor_html_HTMLFixture_getFile__ [ label="org.apache.any23.extractor.html.HTMLFixture.getFile()" ];
  org_apache_any23_writer_TurtleWriterFactory_getTripleFormat__ [ label="org.apache.any23.writer.TurtleWriterFactory.getTripleFormat()" ];
  org_apache_any23_extractor_html_DomUtilsTest_testHasClassName__ [ label="org.apache.any23.extractor.html.DomUtilsTest.testHasClassName()" ];
  isOpenIE_HttpServletRequest_ [ label="isOpenIE(HttpServletRequest)" ];
  org_apache_any23_extractor_calendar_ICalExtractor_reader_java_io_InputStream_ [ label="org.apache.any23.extractor.calendar.ICalExtractor.reader(java.io.InputStream)" ];
  org_apache_any23_extractor_html_HReviewAggregateExtractor_resetExtractor__ [ label="org.apache.any23.extractor.html.HReviewAggregateExtractor.resetExtractor()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testNQuadsDetection__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testNQuadsDetection()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_assertNQuadsDetection_java_lang_String_ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.assertNQuadsDetection(java.lang.String)" ];
  org_apache_any23_extractor_TagSoupExtractionResult_PropertyPath_getObject__ [ label="org.apache.any23.extractor.TagSoupExtractionResult.PropertyPath.getObject()" ];
  org_apache_any23_writer_JSONLDWriterFactory_getTripleFormat__ [ label="org.apache.any23.writer.JSONLDWriterFactory.getTripleFormat()" ];
  org_apache_any23_extractor_ExtractorDescription_getExtractorName__ [ label="org.apache.any23.extractor.ExtractorDescription.getExtractorName()" ];
  org_apache_any23_mime_MIMEType_isAnyMajorType__ [ label="org.apache.any23.mime.MIMEType.isAnyMajorType()" ];
  org_apache_any23_extractor_html_TagSoupParsingConfiguration_parse_java_io_InputStream__java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.html.TagSoupParsingConfiguration.parse(java.io.InputStream, java.lang.String, java.lang.String)" ];
  org_apache_any23_filter_ExtractionContextBlocker_close__ [ label="org.apache.any23.filter.ExtractionContextBlocker.close()" ];
  org_apache_any23_extractor_html_RDFMergerTest_extractHCardAndRelated_java_lang_String_ [ label="org.apache.any23.extractor.html.RDFMergerTest.extractHCardAndRelated(java.lang.String)" ];
  org_apache_any23_plugin_crawler_SiteCrawler_getMaxDepth__ [ label="org.apache.any23.plugin.crawler.SiteCrawler.getMaxDepth()" ];
  org_apache_any23_vocab_Review_createProperty_java_lang_String_ [ label="org.apache.any23.vocab.Review.createProperty(java.lang.String)" ];
  org_apache_any23_plugin_htmlscraper_HTMLScraperExtractorTest_setUp__ [ label="org.apache.any23.plugin.htmlscraper.HTMLScraperExtractorTest.setUp()" ];
  org_apache_any23_extractor_yaml_YAMLExtractorTest_integersTest__ [ label="org.apache.any23.extractor.yaml.YAMLExtractorTest.integersTest()" ];
  org_apache_any23_rdf_RDFUtils_quad_java_lang_String__java_lang_String__java_lang_String__java_lang_String_ [ label="org.apache.any23.rdf.RDFUtils.quad(java.lang.String, java.lang.String, java.lang.String, java.lang.String)" ];
  org_apache_any23_rdf_RDFUtils_toValue_java_lang_String_ [ label="org.apache.any23.rdf.RDFUtils.toValue(java.lang.String)" ];
  processNode_Node__ExtractionResult_ [ label="processNode(Node, ExtractionResult)" ];
  org_apache_any23_extractor_rdfa_RDFa11Parser_getContext__ [ label="org.apache.any23.extractor.rdfa.RDFa11Parser.getContext()" ];
  org_apache_any23_extractor_xpath_Term_getValue_java_util_Map_java_lang_String__java_lang_String__ [ label="org.apache.any23.extractor.xpath.Term.getValue(java.util.Map<java.lang.String, java.lang.String>)" ];
  org_apache_any23_extractor_xpath_Term_getValueInternal_java_lang_String_ [ label="org.apache.any23.extractor.xpath.Term.getValueInternal(java.lang.String)" ];
  org_apache_any23_extractor_xpath_XPathExtractionRule_getName__ [ label="org.apache.any23.extractor.xpath.XPathExtractionRule.getName()" ];
  org_apache_any23_extractor_html_AbstractExtractorTestCase_dumpModelToTurtle__ [ label="org.apache.any23.extractor.html.AbstractExtractorTestCase.dumpModelToTurtle()" ];
  org_apache_any23_extractor_html_HTMLMetaExtractor_Meta_getHttpEquiv__ [ label="org.apache.any23.extractor.html.HTMLMetaExtractor.Meta.getHttpEquiv()" ];
  org_apache_any23_extractor_rdf_JSONLDExtractor_setStopAtFirstError_boolean_ [ label="org.apache.any23.extractor.rdf.JSONLDExtractor.setStopAtFirstError(boolean)" ];
  org_apache_any23_encoding_TikaEncodingDetector_InputStreamFunction_compute_java_io_InputStream_ [ label="org.apache.any23.encoding.TikaEncodingDetector.InputStreamFunction.compute(java.io.InputStream)" ];
  org_apache_any23_extractor_html_microformats2_HCardExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.microformats2.HCardExtractorTest.getExtractorFactory()" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_createLiteral_byte_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.createLiteral(byte)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testXHTMLByContentAndName__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testXHTMLByContentAndName()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestXHtml__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.manifestXHtml()" ];
  org_apache_any23_configuration_Setting_hashCode__ [ label="org.apache.any23.configuration.Setting.hashCode()" ];
  org_apache_any23_extractor_html_HCardName_FieldValue_isMultiField__ [ label="org.apache.any23.extractor.html.HCardName.FieldValue.isMultiField()" ];
  setMIMETypeDetector_MIMETypeDetector_ [ label="setMIMETypeDetector(MIMETypeDetector)" ];
  createResource_RDFDataset_Node_ [ label="createResource(RDFDataset.Node)" ];
  getWriter_Writer__String_ [ label="getWriter(Writer, String)" ];
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_toAcceptRanges_java_lang_String_ [ label="org.apache.any23.servlet.conneg.ContentTypeNegotiator.toAcceptRanges(java.lang.String)" ];
  findAllByTag_Node__String_ [ label="findAllByTag(Node, String)" ];
  serialize_ValidationReport__OutputStream_ [ label="serialize(ValidationReport, OutputStream)" ];
  addResourceRoot_String____Resource__Class_ [ label="addResourceRoot(String[], Resource, Class)" ];
  findSubjects_IRI__Value_ [ label="findSubjects(IRI, Value)" ];
  org_apache_any23_vocab_SINDICE_createClass_java_lang_String_ [ label="org.apache.any23.vocab.SINDICE.createClass(java.lang.String)" ];
  org_apache_any23_rdf_PrefixesTest_testExpandOnlyAcceptsCURIEs__ [ label="org.apache.any23.rdf.PrefixesTest.testExpandOnlyAcceptsCURIEs()" ];
  printExtractorList_ExtractorRegistry_ [ label="printExtractorList(ExtractorRegistry)" ];
  assertNotFound_Resource__IRI_ [ label="assertNotFound(Resource, IRI)" ];
  hasAttribute_Node__String__String_ [ label="hasAttribute(Node, String, String)" ];
  addPhoto_HTMLDocument__BNode_ [ label="addPhoto(HTMLDocument, BNode)" ];
  org_apache_any23_rdf_RDFUtilsTest_testGetXSDDate__ [ label="org.apache.any23.rdf.RDFUtilsTest.testGetXSDDate()" ];
  org_apache_any23_plugin_htmlscraper_HTMLScraperExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.plugin.htmlscraper.HTMLScraperExtractorFactory.getDescriptionInstance()" ];
  readNodeContent_Node__boolean_ [ label="readNodeContent(Node, boolean)" ];
  org_apache_any23_extractor_ExtractionException_printStackTrace_java_io_PrintStream_ [ label="org.apache.any23.extractor.ExtractionException.printStackTrace(java.io.PrintStream)" ];
  org_apache_any23_cli_BaseTool_concise_java_io_PrintStream__boolean_ [ label="org.apache.any23.cli.BaseTool.concise(java.io.PrintStream, boolean)" ];
  org_apache_any23_cli_MicrodataParser_MicrodataParserDocumentSourceConverter_convert_java_lang_String_ [ label="org.apache.any23.cli.MicrodataParser.MicrodataParserDocumentSourceConverter.convert(java.lang.String)" ];
  readAttributeWithPrefix_Node__String__String_ [ label="readAttributeWithPrefix(Node, String, String)" ];
  org_apache_any23_servlet_ServletTest_testPOSTWorks__ [ label="org.apache.any23.servlet.ServletTest.testPOSTWorks()" ];
  addNames_Resource_ [ label="addNames(Resource)" ];
  setLocalCopyFactory_LocalCopyFactory_ [ label="setLocalCopyFactory(LocalCopyFactory)" ];
  getMicrodata_Document_ [ label="getMicrodata(Document)" ];
  org_apache_any23_extractor_rdf_JSONLDExtractor_setVerifyDataType_boolean_ [ label="org.apache.any23.extractor.rdf.JSONLDExtractor.setVerifyDataType(boolean)" ];
  org_apache_any23_extractor_ExtractorRegistry_isRegisteredName_java_lang_String_ [ label="org.apache.any23.extractor.ExtractorRegistry.isRegisteredName(java.lang.String)" ];
  org_apache_any23_extractor_calendar_JCalExtractorTest_testRFC7265example2__ [ label="org.apache.any23.extractor.calendar.JCalExtractorTest.testRFC7265example2()" ];
  org_apache_any23_extractor_rdfa_RDFa11ParserTest_testGetAsPlainLiteral__ [ label="org.apache.any23.extractor.rdfa.RDFa11ParserTest.testGetAsPlainLiteral()" ];
  org_apache_any23_writer_TripleWriterHandler_setContentLength_long_ [ label="org.apache.any23.writer.TripleWriterHandler.setContentLength(long)" ];
  org_apache_any23_extractor_html_EmbeddedJSONLDExtractorTest_testSeveralEmbeddedJSONLDInHead__ [ label="org.apache.any23.extractor.html.EmbeddedJSONLDExtractorTest.testSeveralEmbeddedJSONLDInHead()" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testMicrodataMissingScheme__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.testMicrodataMissingScheme()" ];
  org_apache_any23_http_AcceptHeaderBuilderTest_testTypeWildcardSuppressesLowerValues__ [ label="org.apache.any23.http.AcceptHeaderBuilderTest.testTypeWildcardSuppressesLowerValues()" ];
  org_apache_any23_extractor_html_SpanCloserInputStreamTest_testSpanNegativeReplacement__ [ label="org.apache.any23.extractor.html.SpanCloserInputStreamTest.testSpanNegativeReplacement()" ];
  org_apache_any23_extractor_html_SpanCloserInputStreamTest_processInput_java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.html.SpanCloserInputStreamTest.processInput(java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_html_TagSoupParser_ElementLocation_getBeginColumnNumber__ [ label="org.apache.any23.extractor.html.TagSoupParser.ElementLocation.getBeginColumnNumber()" ];
  addAuthors_HTMLDocument__Resource_ [ label="addAuthors(HTMLDocument, Resource)" ];
  org_apache_any23_extractor_microdata_ItemPropValue_parseDateTime_java_lang_String_ [ label="org.apache.any23.extractor.microdata.ItemPropValue.parseDateTime(java.lang.String)" ];
  org_apache_any23_Any23Test_testExtractionParameters__ [ label="org.apache.any23.Any23Test.testExtractionParameters()" ];
  org_apache_any23_http_DefaultHTTPClientConfiguration_getUserAgent__ [ label="org.apache.any23.http.DefaultHTTPClientConfiguration.getUserAgent()" ];
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_getBestMatch_java_lang_String__java_lang_String_ [ label="org.apache.any23.servlet.conneg.ContentTypeNegotiator.getBestMatch(java.lang.String, java.lang.String)" ];
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_Negotiation_negotiate__ [ label="org.apache.any23.servlet.conneg.ContentTypeNegotiator.Negotiation.negotiate()" ];
  org_apache_any23_extractor_html_HCardExtractor_readFn__ [ label="org.apache.any23.extractor.html.HCardExtractor.readFn()" ];
  org_apache_any23_plugin_crawler_SiteCrawler_setMaxPages_int_ [ label="org.apache.any23.plugin.crawler.SiteCrawler.setMaxPages(int)" ];
  org_apache_any23_source_ByteArrayDocumentSource_getContentLength__ [ label="org.apache.any23.source.ByteArrayDocumentSource.getContentLength()" ];
  org_apache_any23_configuration_Configuration_getProperties__ [ label="org.apache.any23.configuration.Configuration.getProperties()" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_test07__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.test07()" ];
  org_apache_any23_rdf_RDFUtils_literal_double_ [ label="org.apache.any23.rdf.RDFUtils.literal(double)" ];
  org_apache_any23_http_DefaultHTTPClient_close__ [ label="org.apache.any23.http.DefaultHTTPClient.close()" ];
  org_apache_any23_extractor_calendar_JCalExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.calendar.JCalExtractorTest.getExtractorFactory()" ];
  org_apache_any23_extractor_microdata_ItemPropValue_isNumber__ [ label="org.apache.any23.extractor.microdata.ItemPropValue.isNumber()" ];
  org_apache_any23_extractor_microdata_ItemPropValue_isInteger__ [ label="org.apache.any23.extractor.microdata.ItemPropValue.isInteger()" ];
  processType_ItemScope__ParsedIRI__ExtractionResult__Map__IRI_ [ label="processType(ItemScope, ParsedIRI, ExtractionResult, Map, IRI)" ];
  org_apache_any23_vocab_OGPArticle_createProperty_java_lang_String_ [ label="org.apache.any23.vocab.OGPArticle.createProperty(java.lang.String)" ];
  addTelephones_HTMLDocument__BNode_ [ label="addTelephones(HTMLDocument, BNode)" ];
  org_apache_any23_servlet_ServletTest_testGETInvalidIRI__ [ label="org.apache.any23.servlet.ServletTest.testGETInvalidIRI()" ];
  addVotes_HTMLDocument__Resource_ [ label="addVotes(HTMLDocument, Resource)" ];
  org_apache_any23_writer_TripleHandler_setContentLength_long_ [ label="org.apache.any23.writer.TripleHandler.setContentLength(long)" ];
  org_apache_any23_validator_DOMDocument_getOriginalDocument__ [ label="org.apache.any23.validator.DOMDocument.getOriginalDocument()" ];
  addIngredients_HTMLDocument__BNode_ [ label="addIngredients(HTMLDocument, BNode)" ];
  writeTriple_String__String__Value_ [ label="writeTriple(String, String, Value)" ];
  org_apache_any23_util_StreamUtils_inputStreamToDocument_java_io_InputStream_ [ label="org.apache.any23.util.StreamUtils.inputStreamToDocument(java.io.InputStream)" ];
  org_apache_any23_extractor_html_AbstractExtractorTestCase_assertModelNotEmpty__ [ label="org.apache.any23.extractor.html.AbstractExtractorTestCase.assertModelNotEmpty()" ];
  org_apache_any23_cli_PluginVerifier_run__ [ label="org.apache.any23.cli.PluginVerifier.run()" ];
  org_apache_any23_extractor_html_HReviewExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.HReviewExtractorFactory.createExtractor()" ];
  org_apache_any23_extractor_TagSoupExtractionResult_PropertyPath_toString__ [ label="org.apache.any23.extractor.TagSoupExtractionResult.PropertyPath.toString()" ];
  org_apache_any23_extractor_html_RDFMergerTest_testSingleton__ [ label="org.apache.any23.extractor.html.RDFMergerTest.testSingleton()" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_createLiteral_short_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.createLiteral(short)" ];
  org_apache_any23_extractor_html_ICBMExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.ICBMExtractorFactory.createExtractor()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestNQuads__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.manifestNQuads()" ];
  org_apache_any23_extractor_microdata_MicrodataParserException_getErrorLocationBeginCol__ [ label="org.apache.any23.extractor.microdata.MicrodataParserException.getErrorLocationBeginCol()" ];
  getParser_ExtractionContext__ExtractionResult_ [ label="getParser(ExtractionContext, ExtractionResult)" ];
  org_apache_any23_writer_JSONWriter_writeNamespace_java_lang_String__java_lang_String_ [ label="org.apache.any23.writer.JSONWriter.writeNamespace(java.lang.String, java.lang.String)" ];
  org_apache_any23_vocab_ICAL_createClass_java_lang_String_ [ label="org.apache.any23.vocab.ICAL.createClass(java.lang.String)" ];
  org_apache_any23_encoding_TikaEncodingDetector_guessEncoding_java_io_InputStream__java_lang_String_ [ label="org.apache.any23.encoding.TikaEncodingDetector.guessEncoding(java.io.InputStream, java.lang.String)" ];
  serializeVocabulary_Vocabulary__RDFFormat__boolean__PrintStream_ [ label="serializeVocabulary(Vocabulary, RDFFormat, boolean, PrintStream)" ];
  org_apache_any23_extractor_microdata_ItemScope_toJSON__ [ label="org.apache.any23.extractor.microdata.ItemScope.toJSON()" ];
  org_apache_any23_http_HTTPClient_getContentLength__ [ label="org.apache.any23.http.HTTPClient.getContentLength()" ];
  org_apache_any23_encoding_EncodingUtils_TextStatisticsOptimizedForUtf8_looksLikeUTF8__ [ label="org.apache.any23.encoding.EncodingUtils.TextStatisticsOptimizedForUtf8.looksLikeUTF8()" ];
  org_apache_any23_plugin_htmlscraper_HTMLScraperExtractorTest_tearDown__ [ label="org.apache.any23.plugin.htmlscraper.HTMLScraperExtractorTest.tearDown()" ];
  org_apache_any23_Any23Test_testAbstractMethodErrorIssue186_1__ [ label="org.apache.any23.Any23Test.testAbstractMethodErrorIssue186_1()" ];
  assertContains_Resource__IRI__Value_ [ label="assertContains(Resource, IRI, Value)" ];
  org_apache_any23_extractor_html_HeadLinkExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.HeadLinkExtractorFactory.createExtractor()" ];
  testStrategy_InputStream__CSVFormat_ [ label="testStrategy(InputStream, CSVFormat)" ];
  org_apache_any23_plugin_crawler_SharedData_getSeed__ [ label="org.apache.any23.plugin.crawler.SharedData.getSeed()" ];
  org_apache_any23_encoding_TikaEncodingDetectorTest_testTikaIssue2771__ [ label="org.apache.any23.encoding.TikaEncodingDetectorTest.testTikaIssue2771()" ];
  org_apache_any23_extractor_csv_CSVReaderBuilderTest_testNegativeCSVDetection__ [ label="org.apache.any23.extractor.csv.CSVReaderBuilderTest.testNegativeCSVDetection()" ];
  org_apache_any23_extractor_html_AbstractExtractorTestCase_dumpModelToRDFXML__ [ label="org.apache.any23.extractor.html.AbstractExtractorTestCase.dumpModelToRDFXML()" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testDescription__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testDescription()" ];
  org_apache_any23_plugin_officescraper_ExcelExtractorTest_testGetDescription__ [ label="org.apache.any23.plugin.officescraper.ExcelExtractorTest.testGetDescription()" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testComplexDescription__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testComplexDescription()" ];
  org_apache_any23_extractor_ExtractionAPITest_testMimetypes__ [ label="org.apache.any23.extractor.ExtractionAPITest.testMimetypes()" ];
  applyTo_Document__Writer_ [ label="applyTo(Document, Writer)" ];
  org_apache_any23_http_HTTPClient_getActualDocumentIRI__ [ label="org.apache.any23.http.HTTPClient.getActualDocumentIRI()" ];
  org_apache_any23_extractor_html_EmbeddedJSONLDExtractor_getDescription__ [ label="org.apache.any23.extractor.html.EmbeddedJSONLDExtractor.getDescription()" ];
  org_apache_any23_extractor_microdata_MicrodataParser_setErrorMode_org_apache_any23_extractor_microdata_MicrodataParser_ErrorMode_ [ label="org.apache.any23.extractor.microdata.MicrodataParser.setErrorMode(org.apache.any23.extractor.microdata.MicrodataParser.ErrorMode)" ];
  org_apache_any23_cli_ExtractorDocumentationTest_testExampleOutput__ [ label="org.apache.any23.cli.ExtractorDocumentationTest.testExampleOutput()" ];
  org_apache_any23_extractor_html_SpanCloserInputStream_read__ [ label="org.apache.any23.extractor.html.SpanCloserInputStream.read()" ];
  org_apache_any23_extractor_html_SpanCloserInputStream_checkOpenTrailingSequence_int_ [ label="org.apache.any23.extractor.html.SpanCloserInputStream.checkOpenTrailingSequence(int)" ];
  org_apache_any23_vocab_WO_createProperty_java_lang_String_ [ label="org.apache.any23.vocab.WO.createProperty(java.lang.String)" ];
  org_apache_any23_source_ByteArrayDocumentSource_openInputStream__ [ label="org.apache.any23.source.ByteArrayDocumentSource.openInputStream()" ];
  extract_String__String__TripleHandler_ [ label="extract(String, String, TripleHandler)" ];
  org_apache_any23_cli_Crawler_PatterConverter_convert_java_lang_String_ [ label="org.apache.any23.cli.Crawler.PatterConverter.convert(java.lang.String)" ];
  org_apache_any23_filter_ExtractionContextBlocker_ValvedTriplePipe_receiveNamespace_java_lang_String__java_lang_String_ [ label="org.apache.any23.filter.ExtractionContextBlocker.ValvedTriplePipe.receiveNamespace(java.lang.String, java.lang.String)" ];
  org_apache_any23_cli_ToolRunnerTest_testGetVersion__ [ label="org.apache.any23.cli.ToolRunnerTest.testGetVersion()" ];
  org_apache_any23_configuration_DefaultConfigurationTest_testCopyAccessor__ [ label="org.apache.any23.configuration.DefaultConfigurationTest.testCopyAccessor()" ];
  org_apache_any23_cli_flows_PeopleExtractorFactory_getIdentifier__ [ label="org.apache.any23.cli.flows.PeopleExtractorFactory.getIdentifier()" ];
  org_apache_any23_extractor_html_EmbeddedJSONLDExtractor_getPrefixIfExists_java_lang_String_ [ label="org.apache.any23.extractor.html.EmbeddedJSONLDExtractor.getPrefixIfExists(java.lang.String)" ];
  addBNodeProperty_Resource__IRI__BNode_ [ label="addBNodeProperty(Resource, IRI, BNode)" ];
  extractTextNotInType_NodeList__StringBuilder_ [ label="extractTextNotInType(NodeList, StringBuilder)" ];
  org_apache_any23_extractor_microdata_ItemScope_stringToSingletonIRI_java_lang_String_ [ label="org.apache.any23.extractor.microdata.ItemScope.stringToSingletonIRI(java.lang.String)" ];
  org_apache_any23_extractor_rdf_TurtleExtractorTest_testTypedLiteralIncompatibleValueSupport__ [ label="org.apache.any23.extractor.rdf.TurtleExtractorTest.testTypedLiteralIncompatibleValueSupport()" ];
  supportsAllContentTypes_ExtractorFactory_ [ label="supportsAllContentTypes(ExtractorFactory)" ];
  isAnnotated__ [ label="isAnnotated()" ];
  org_apache_any23_extractor_microdata_ItemProp_equals_java_lang_Object_ [ label="org.apache.any23.extractor.microdata.ItemProp.equals(java.lang.Object)" ];
  capabilities_RDFFormat_ [ label="capabilities(RDFFormat)" ];
  org_apache_any23_writer_WriterFactoryRegistry_getIdentifiers__ [ label="org.apache.any23.writer.WriterFactoryRegistry.getIdentifiers()" ];
  asModelHolder_Value__Model_ [ label="asModelHolder(Value, Model)" ];
  addExperiences_HTMLDocument__Resource_ [ label="addExperiences(HTMLDocument, Resource)" ];
  getTopLevelItemScopeNodes_Node_ [ label="getTopLevelItemScopeNodes(Node)" ];
  org_apache_any23_extractor_rdf_NTriplesExtractor_getDescription__ [ label="org.apache.any23.extractor.rdf.NTriplesExtractor.getDescription()" ];
  org_apache_any23_extractor_html_EmbeddedJSONLDExtractorTest_testJSONLDFatalError__ [ label="org.apache.any23.extractor.html.EmbeddedJSONLDExtractorTest.testJSONLDFatalError()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectExtensionN3ByMeta__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectExtensionN3ByMeta()" ];
  org_apache_any23_cli_MimeDetector_setOut_java_io_PrintStream_ [ label="org.apache.any23.cli.MimeDetector.setOut(java.io.PrintStream)" ];
  org_apache_any23_extractor_html_HCardName_containsField_java_lang_String_ [ label="org.apache.any23.extractor.html.HCardName.containsField(java.lang.String)" ];
  printExampleInput_String__ExtractorRegistry_ [ label="printExampleInput(String, ExtractorRegistry)" ];
  org_apache_any23_extractor_rdfa_SemarglSink_warning_java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.rdfa.SemarglSink.warning(java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_html_microformats2_HItemExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.microformats2.HItemExtractorTest.getExtractorFactory()" ];
  org_apache_any23_writer_JSONWriter_printExplicitIRI_java_lang_String_ [ label="org.apache.any23.writer.JSONWriter.printExplicitIRI(java.lang.String)" ];
  org_apache_any23_mime_MIMEType_isAnySubtype__ [ label="org.apache.any23.mime.MIMEType.isAnySubtype()" ];
  getInputIRIFromRequest_HttpServletRequest_ [ label="getInputIRIFromRequest(HttpServletRequest)" ];
  org_apache_any23_servlet_Servlet_hasScheme_java_lang_String_ [ label="org.apache.any23.servlet.Servlet.hasScheme(java.lang.String)" ];
  org_apache_any23_writer_JSONWriter_close__ [ label="org.apache.any23.writer.JSONWriter.close()" ];
  createSubjectForItemId_ParsedIRI__String_ [ label="createSubjectForItemId(ParsedIRI, String)" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testItemFn__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testItemFn()" ];
  org_apache_any23_util_StringUtilsTest_testEscapeDoubleQuotes__ [ label="org.apache.any23.util.StringUtilsTest.testEscapeDoubleQuotes()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testYAMLByContentAndName__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testYAMLByContentAndName()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestYAML__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.manifestYAML()" ];
  org_apache_any23_Any23_getHTTPClient__ [ label="org.apache.any23.Any23.getHTTPClient()" ];
  org_apache_any23_Any23_getAcceptHeader__ [ label="org.apache.any23.Any23.getAcceptHeader()" ];
  getStatementsSize_Resource__IRI__Value_ [ label="getStatementsSize(Resource, IRI, Value)" ];
  org_apache_any23_extractor_html_MicroformatExtractor_getCurrentExtractionResult__ [ label="org.apache.any23.extractor.html.MicroformatExtractor.getCurrentExtractionResult()" ];
  org_apache_any23_vocab_DOAP_getInstance__ [ label="org.apache.any23.vocab.DOAP.getInstance()" ];
  org_apache_any23_extractor_xpath_Variable_getxPath__ [ label="org.apache.any23.extractor.xpath.Variable.getxPath()" ];
  org_apache_any23_extractor_html_SpeciesExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.SpeciesExtractorTest.getExtractorFactory()" ];
  org_apache_any23_servlet_Servlet_isValidIRI_java_lang_String_ [ label="org.apache.any23.servlet.Servlet.isValidIRI(java.lang.String)" ];
  org_apache_any23_rdf_PopularPrefixes_getPrefixes__ [ label="org.apache.any23.rdf.PopularPrefixes.getPrefixes()" ];
  org_apache_any23_rdf_PopularPrefixes_testIRICompliance_java_lang_String_ [ label="org.apache.any23.rdf.PopularPrefixes.testIRICompliance(java.lang.String)" ];
  org_apache_any23_source_MemCopyFactory_toByteArray_java_io_InputStream_ [ label="org.apache.any23.source.MemCopyFactory.toByteArray(java.io.InputStream)" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_extractAndVerifyAgainstNQuads_java_lang_String__java_lang_String__boolean_ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.extractAndVerifyAgainstNQuads(java.lang.String, java.lang.String, boolean)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestCsv__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.manifestCsv()" ];
  org_apache_any23_configuration_SettingsTest_testSettingType__ [ label="org.apache.any23.configuration.SettingsTest.testSettingType()" ];
  org_apache_any23_http_DefaultHTTPClientConfiguration_getAcceptHeader__ [ label="org.apache.any23.http.DefaultHTTPClientConfiguration.getAcceptHeader()" ];
  org_apache_any23_extractor_html_TitleExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.TitleExtractorTest.getExtractorFactory()" ];
  printIssueReport_ExtractionReport__PrintStream_ [ label="printIssueReport(ExtractionReport, PrintStream)" ];
  predicate_String__ExtractionResult_ [ label="predicate(String, ExtractionResult)" ];
  org_apache_any23_extractor_calendar_ICalExtractorTest_filePrefix__ [ label="org.apache.any23.extractor.calendar.ICalExtractorTest.filePrefix()" ];
  findObjects_Resource__IRI_ [ label="findObjects(Resource, IRI)" ];
  org_apache_any23_extractor_html_HCardName_hasAnyField__ [ label="org.apache.any23.extractor.html.HCardName.hasAnyField()" ];
  org_apache_any23_extractor_calendar_BaseCalendarExtractorTest_TestRDFHandler_getStatements__ [ label="org.apache.any23.extractor.calendar.BaseCalendarExtractorTest.TestRDFHandler.getStatements()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectTextHTMLByMeta__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectTextHTMLByMeta()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testRDFaByContentAndName__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testRDFaByContentAndName()" ];
  org_apache_any23_extractor_html_HListingExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.getExtractorFactory()" ];
  org_apache_any23_extractor_rdf_ManchesterSyntaxExtractorTest_setUp__ [ label="org.apache.any23.extractor.rdf.ManchesterSyntaxExtractorTest.setUp()" ];
  isAnnotated_HttpServletRequest_ [ label="isAnnotated(HttpServletRequest)" ];
  org_apache_any23_extractor_html_RDFMergerTest_testAbbrTitleEverything__ [ label="org.apache.any23.extractor.html.RDFMergerTest.testAbbrTitleEverything()" ];
  extract_File__TripleHandler_ [ label="extract(File, TripleHandler)" ];
  org_apache_any23_extractor_xpath_TemplateXPathExtractorRuleImplTest_setUp__ [ label="org.apache.any23.extractor.xpath.TemplateXPathExtractorRuleImplTest.setUp()" ];
  org_apache_any23_extractor_microdata_ItemPropValue_isPlain__ [ label="org.apache.any23.extractor.microdata.ItemPropValue.isPlain()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testArea__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testArea()" ];
  org_apache_any23_servlet_ServletTest_testGETWorks__ [ label="org.apache.any23.servlet.ServletTest.testGETWorks()" ];
  org_apache_any23_servlet_ServletTest_testPOSTWorksWithParametersOnContentType__ [ label="org.apache.any23.servlet.ServletTest.testPOSTWorksWithParametersOnContentType()" ];
  popVocabulary_Node_ [ label="popVocabulary(Node)" ];
  org_apache_any23_rdf_RDFUtils_literal_byte_ [ label="org.apache.any23.rdf.RDFUtils.literal(byte)" ];
  org_apache_any23_extractor_html_TitleExtractorTest_testTitleWithDefaultLanguage__ [ label="org.apache.any23.extractor.html.TitleExtractorTest.testTitleWithDefaultLanguage()" ];
  org_apache_any23_cli_ExtractorDocumentation_getOut__ [ label="org.apache.any23.cli.ExtractorDocumentation.getOut()" ];
  org_apache_any23_rdf_PrefixesTest_testCannotAbbreviateUndefined__ [ label="org.apache.any23.rdf.PrefixesTest.testCannotAbbreviateUndefined()" ];
  org_apache_any23_mime_NaiveMIMETypeDetector_getExtension_java_lang_String_ [ label="org.apache.any23.mime.NaiveMIMETypeDetector.getExtension(java.lang.String)" ];
  org_apache_any23_configuration_SettingsTest_testGetAbsentSetting__ [ label="org.apache.any23.configuration.SettingsTest.testGetAbsentSetting()" ];
  writeNamespace_String__String_ [ label="writeNamespace(String, String)" ];
  org_apache_any23_servlet_ServletTest_testPOSTwithContentTypeParam__ [ label="org.apache.any23.servlet.ServletTest.testPOSTwithContentTypeParam()" ];
  checkTriple_String__VerificationMode_ [ label="checkTriple(String, VerificationMode)" ];
  org_apache_any23_util_ReaderInputStream_close__ [ label="org.apache.any23.util.ReaderInputStream.close()" ];
  org_apache_any23_cli_BaseTool_ConcisePrintStream_Anonymous_d7a2a5c0_0370_4426_b0e6_e939029dfcbf_close__ [ label="org.apache.any23.cli.BaseTool.ConcisePrintStream.Anonymous-d7a2a5c0-0370-4426-b0e6-e939029dfcbf.close()" ];
  guessMimeTypeByInputAndMeta_InputStream__Metadata_ [ label="guessMimeTypeByInputAndMeta(InputStream, Metadata)" ];
  getTurtleParserInstance_boolean__boolean__ExtractionContext__ExtractionResult_ [ label="getTurtleParserInstance(boolean, boolean, ExtractionContext, ExtractionResult)" ];
  addCount_HTMLDocument__Resource_ [ label="addCount(HTMLDocument, Resource)" ];
  org_apache_any23_extractor_html_HTMLDocument_findAll_java_lang_String_ [ label="org.apache.any23.extractor.html.HTMLDocument.findAll(java.lang.String)" ];
  org_apache_any23_http_AcceptHeaderBuilderTest_testSubtypeWildcardSuppressesLowerValues__ [ label="org.apache.any23.http.AcceptHeaderBuilderTest.testSubtypeWildcardSuppressesLowerValues()" ];
  org_apache_any23_writer_FormatWriter_isAnnotated__ [ label="org.apache.any23.writer.FormatWriter.isAnnotated()" ];
  createHTTPDocumentSource_HTTPClient__String_ [ label="createHTTPDocumentSource(HTTPClient, String)" ];
  addFieldTriple_Node__BNode__String__String_ [ label="addFieldTriple(Node, BNode, String, String)" ];
  org_apache_any23_extractor_html_SpeciesExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.SpeciesExtractorFactory.createExtractor()" ];
  org_apache_any23_util_StringUtils_isPrefix_java_lang_String__java_lang_String_ [ label="org.apache.any23.util.StringUtils.isPrefix(java.lang.String, java.lang.String)" ];
  org_apache_any23_rdf_PrefixesTest_testAddPrefixesAsVolatile__ [ label="org.apache.any23.rdf.PrefixesTest.testAddPrefixesAsVolatile()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testAbbrTitleEverything__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testAbbrTitleEverything()" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_test16__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.test16()" ];
  writeContentComplicated_TripleHandler_ [ label="writeContentComplicated(TripleHandler)" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_createLiteral_java_lang_String_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.createLiteral(java.lang.String)" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_createIRI_java_lang_String_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.createIRI(java.lang.String)" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_reportError_java_lang_Exception_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.reportError(java.lang.Exception)" ];
  org_apache_any23_filter_ExtractionContextBlocker_ValvedTriplePipe_unblock__ [ label="org.apache.any23.filter.ExtractionContextBlocker.ValvedTriplePipe.unblock()" ];
  org_apache_any23_util_FileUtils_cp_java_io_File__java_io_File_ [ label="org.apache.any23.util.FileUtils.cp(java.io.File, java.io.File)" ];
  org_apache_any23_util_FileUtils_cp_java_io_InputStream__java_io_File_ [ label="org.apache.any23.util.FileUtils.cp(java.io.InputStream, java.io.File)" ];
  org_apache_any23_extractor_rdfa_RDFaExtractor_getDescription__ [ label="org.apache.any23.extractor.rdfa.RDFaExtractor.getDescription()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testNoNullPointers__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testNoNullPointers()" ];
  org_apache_any23_plugin_crawler_SiteCrawler_getWebCrawler__ [ label="org.apache.any23.plugin.crawler.SiteCrawler.getWebCrawler()" ];
  org_apache_any23_plugin_crawler_SiteCrawler_getNumOfCrawlers__ [ label="org.apache.any23.plugin.crawler.SiteCrawler.getNumOfCrawlers()" ];
  org_apache_any23_extractor_SingleDocumentExtractionTest_testNestedMicroformats__ [ label="org.apache.any23.extractor.SingleDocumentExtractionTest.testNestedMicroformats()" ];
  org_apache_any23_extractor_html_HRecipeExtractorTest_testExtraction__ [ label="org.apache.any23.extractor.html.HRecipeExtractorTest.testExtraction()" ];
  org_apache_any23_encoding_EncodingDetector_guessEncoding_java_io_InputStream__java_lang_String_ [ label="org.apache.any23.encoding.EncodingDetector.guessEncoding(java.io.InputStream, java.lang.String)" ];
  org_apache_any23_validator_ValidationReport_Error_getMessage__ [ label="org.apache.any23.validator.ValidationReport.Error.getMessage()" ];
  org_apache_any23_configuration_DefaultConfiguration_getPropertyIntOrFail_java_lang_String_ [ label="org.apache.any23.configuration.DefaultConfiguration.getPropertyIntOrFail(java.lang.String)" ];
  org_apache_any23_extractor_yaml_YAMLTikaParserTest_tikaNameDetect__ [ label="org.apache.any23.extractor.yaml.YAMLTikaParserTest.tikaNameDetect()" ];
  openSubResult_ExtractionContext_ [ label="openSubResult(ExtractionContext)" ];
  org_apache_any23_extractor_ExtractionResultImpl_checkOpen__ [ label="org.apache.any23.extractor.ExtractionResultImpl.checkOpen()" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_test03__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.test03()" ];
  org_apache_any23_extractor_html_HTMLDocument_getSingularUrlField_java_lang_String_ [ label="org.apache.any23.extractor.html.HTMLDocument.getSingularUrlField(java.lang.String)" ];
  org_apache_any23_util_URLUtils_isOnline_java_lang_String_ [ label="org.apache.any23.util.URLUtils.isOnline(java.lang.String)" ];
  org_apache_any23_extractor_SingleDocumentExtractionTest_tearDown__ [ label="org.apache.any23.extractor.SingleDocumentExtractionTest.tearDown()" ];
  close__ [ label="close()" ];
  addKey_HTMLDocument__BNode_ [ label="addKey(HTMLDocument, BNode)" ];
  org_apache_any23_writer_WriterFactoryRegistry_getWritersByMimeType_java_lang_String_ [ label="org.apache.any23.writer.WriterFactoryRegistry.getWritersByMimeType(java.lang.String)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testRSS1ByContentAndName__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testRSS1ByContentAndName()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestRss1__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.manifestRss1()" ];
  org_apache_any23_extractor_SingleDocumentExtractionTest_testNestedMicroformatsInduced__ [ label="org.apache.any23.extractor.SingleDocumentExtractionTest.testNestedMicroformatsInduced()" ];
  org_apache_any23_cli_VocabPrinter_run__ [ label="org.apache.any23.cli.VocabPrinter.run()" ];
  org_apache_any23_http_DefaultHTTPClient_openInputStream_java_lang_String_ [ label="org.apache.any23.http.DefaultHTTPClient.openInputStream(java.lang.String)" ];
  org_apache_any23_http_DefaultHTTPClient_ensureClientInitialized__ [ label="org.apache.any23.http.DefaultHTTPClient.ensureClientInitialized()" ];
  wholeText_Node_ [ label="wholeText(Node)" ];
  org_apache_any23_writer_TripleWriter_close__ [ label="org.apache.any23.writer.TripleWriter.close()" ];
  org_apache_any23_extractor_SingleDocumentExtraction_getDetectedMIMEType__ [ label="org.apache.any23.extractor.SingleDocumentExtraction.getDetectedMIMEType()" ];
  org_apache_any23_encoding_EncodingUtils_contentTypeCharset_java_lang_CharSequence_ [ label="org.apache.any23.encoding.EncodingUtils.contentTypeCharset(java.lang.CharSequence)" ];
  addUrls_HTMLDocument__BNode_ [ label="addUrls(HTMLDocument, BNode)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testRelativeUrl__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testRelativeUrl()" ];
  notifyError_MicrodataParserException____ExtractionResult_ [ label="notifyError(MicrodataParserException[], ExtractionResult)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testSingleton__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testSingleton()" ];
  assertTriple_IRI__String_ [ label="assertTriple(IRI, String)" ];
  org_apache_any23_writer_URIListWriter_close__ [ label="org.apache.any23.writer.URIListWriter.close()" ];
  org_apache_any23_extractor_html_SpanCloserInputStreamTest_testSpanPositiveReplacement__ [ label="org.apache.any23.extractor.html.SpanCloserInputStreamTest.testSpanPositiveReplacement()" ];
  addDescription_HTMLDocument__Resource_ [ label="addDescription(HTMLDocument, Resource)" ];
  org_apache_any23_extractor_html_microformats2_HGeoExtractor_getBaseClassName__ [ label="org.apache.any23.extractor.html.microformats2.HGeoExtractor.getBaseClassName()" ];
  org_apache_any23_extractor_ExtractorRegistryImpl_getInstance__ [ label="org.apache.any23.extractor.ExtractorRegistryImpl.getInstance()" ];
  addRule_Class_ [ label="addRule(Class)" ];
  getContextResource_Resource_ [ label="getContextResource(Resource)" ];
  org_apache_any23_filter_ExtractionContextBlockerTest_testSendsNamespaceAfterUnblock__ [ label="org.apache.any23.filter.ExtractionContextBlockerTest.testSendsNamespaceAfterUnblock()" ];
  org_apache_any23_extractor_html_SpanCloserInputStreamTest_testMixedReplacement__ [ label="org.apache.any23.extractor.html.SpanCloserInputStreamTest.testMixedReplacement()" ];
  org_apache_any23_configuration_Setting_create_java_lang_String__java_lang_Boolean_ [ label="org.apache.any23.configuration.Setting.create(java.lang.String, java.lang.Boolean)" ];
  org_apache_any23_extractor_html_XFNExtractorTest_testFriendAndSweetheart__ [ label="org.apache.any23.extractor.html.XFNExtractorTest.testFriendAndSweetheart()" ];
  org_apache_any23_rdf_RDFUtils_parseRDF_java_lang_String_ [ label="org.apache.any23.rdf.RDFUtils.parseRDF(java.lang.String)" ];
  addDateTimes_Resource_ [ label="addDateTimes(Resource)" ];
  org_apache_any23_util_StringUtils_escapeAsJSONString_java_lang_String_ [ label="org.apache.any23.util.StringUtils.escapeAsJSONString(java.lang.String)" ];
  org_apache_any23_extractor_calendar_XCalExtractor_reader_java_io_InputStream_ [ label="org.apache.any23.extractor.calendar.XCalExtractor.reader(java.io.InputStream)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testRSS2ByContentAndName__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testRSS2ByContentAndName()" ];
  org_apache_any23_extractor_html_microformats2_HResumeExtractor_getBaseClassName__ [ label="org.apache.any23.extractor.html.microformats2.HResumeExtractor.getBaseClassName()" ];
  org_apache_any23_configuration_Settings_mapForSize_int_ [ label="org.apache.any23.configuration.Settings.mapForSize(int)" ];
  org_apache_any23_extractor_SingleDocumentExtractionTest_setUp__ [ label="org.apache.any23.extractor.SingleDocumentExtractionTest.setUp()" ];
  org_apache_any23_extractor_microdata_ItemScope_getType__ [ label="org.apache.any23.extractor.microdata.ItemScope.getType()" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testExample5222__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.testExample5222()" ];
  org_apache_any23_extractor_html_EmbeddedJSONLDExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.EmbeddedJSONLDExtractorTest.getExtractorFactory()" ];
  org_apache_any23_plugin_crawler_SiteCrawlerTest_testSiteCrawling__ [ label="org.apache.any23.plugin.crawler.SiteCrawlerTest.testSiteCrawling()" ];
  org_apache_any23_extractor_html_AdrExtractor_getDescription__ [ label="org.apache.any23.extractor.html.AdrExtractor.getDescription()" ];
  extractSkillValue_Node_ [ label="extractSkillValue(Node)" ];
  org_apache_any23_Any23Test_testTTLDetection__ [ label="org.apache.any23.Any23Test.testTTLDetection()" ];
  org_apache_any23_encoding_TikaEncodingDetectorTest_testTikaIssue868__ [ label="org.apache.any23.encoding.TikaEncodingDetectorTest.testTikaIssue868()" ];
  org_apache_any23_source_StringDocumentSource_getContentType__ [ label="org.apache.any23.source.StringDocumentSource.getContentType()" ];
  org_apache_any23_writer_WriterFactory_getIdentifier__ [ label="org.apache.any23.writer.WriterFactory.getIdentifier()" ];
  org_apache_any23_extractor_microdata_MicrodataParserReport_getDetectedItemScopes__ [ label="org.apache.any23.extractor.microdata.MicrodataParserReport.getDetectedItemScopes()" ];
  blockContext_ExtractionContext_ [ label="blockContext(ExtractionContext)" ];
  notifyPage_Page_ [ label="notifyPage(Page)" ];
  org_apache_any23_filter_ExtractionContextBlocker_unblockDocument__ [ label="org.apache.any23.filter.ExtractionContextBlocker.unblockDocument()" ];
  org_apache_any23_extractor_html_HTMLFixture_getHTMLDocument__ [ label="org.apache.any23.extractor.html.HTMLFixture.getHTMLDocument()" ];
  org_apache_any23_extractor_microdata_MicrodataParserTest_testBasicFeatures__ [ label="org.apache.any23.extractor.microdata.MicrodataParserTest.testBasicFeatures()" ];
  org_apache_any23_extractor_rdfa_JsoupScanner_sneakyThrow_java_lang_Throwable_ [ label="org.apache.any23.extractor.rdfa.JsoupScanner.sneakyThrow(java.lang.Throwable)" ];
  org_apache_any23_extractor_microdata_ItemPropValue_getAsNested__ [ label="org.apache.any23.extractor.microdata.ItemPropValue.getAsNested()" ];
  org_apache_any23_extractor_calendar_ICalExtractorTest_testExternalTimezone__ [ label="org.apache.any23.extractor.calendar.ICalExtractorTest.testExternalTimezone()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testIgnoreChildren__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testIgnoreChildren()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testIgnoreUnknowns__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testIgnoreUnknowns()" ];
  org_apache_any23_plugin_extractor_openie_OpenIEExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.plugin.extractor.openie.OpenIEExtractorFactory.getDescriptionInstance()" ];
  addUrl_HTMLDocument__Resource_ [ label="addUrl(HTMLDocument, Resource)" ];
  org_apache_any23_writer_TurtleWriterFactory_getSupportedSettings__ [ label="org.apache.any23.writer.TurtleWriterFactory.getSupportedSettings()" ];
  org_apache_any23_http_AcceptHeaderBuilderTest_testSuppressQIfEquals1__ [ label="org.apache.any23.http.AcceptHeaderBuilderTest.testSuppressQIfEquals1()" ];
  applyOn_DOMDocument__RuleContext__ValidationReportBuilder_ [ label="applyOn(DOMDocument, RuleContext, ValidationReportBuilder)" ];
  registerAll_WriterFactory___ [ label="registerAll(WriterFactory[])" ];
  addWorst_HTMLDocument__Resource_ [ label="addWorst(HTMLDocument, Resource)" ];
  org_apache_any23_extractor_microdata_ItemScope_getId__ [ label="org.apache.any23.extractor.microdata.ItemScope.getId()" ];
  org_apache_any23_extractor_TagSoupExtractionResult_getPropertyPaths__ [ label="org.apache.any23.extractor.TagSoupExtractionResult.getPropertyPaths()" ];
  org_apache_any23_extractor_html_HReviewExtractorTest_test04NoHcardForItem__ [ label="org.apache.any23.extractor.html.HReviewExtractorTest.test04NoHcardForItem()" ];
  org_apache_any23_extractor_html_AbstractExtractorTestCase_getIssues__ [ label="org.apache.any23.extractor.html.AbstractExtractorTestCase.getIssues()" ];
  org_apache_any23_extractor_html_AbstractExtractorTestCase_getExtractorFactory__ [ label="org.apache.any23.extractor.html.AbstractExtractorTestCase.getExtractorFactory()" ];
  org_apache_any23_writer_JSONWriterFactory_getTripleFormat__ [ label="org.apache.any23.writer.JSONWriterFactory.getTripleFormat()" ];
  org_apache_any23_AbstractAny23TestBase_setUp__ [ label="org.apache.any23.AbstractAny23TestBase.setUp()" ];
  org_apache_any23_writer_WriterFactoryRegistry_getWriterByIdentifier_java_lang_String_ [ label="org.apache.any23.writer.WriterFactoryRegistry.getWriterByIdentifier(java.lang.String)" ];
  org_apache_any23_Any23_getHTTPUserAgent__ [ label="org.apache.any23.Any23.getHTTPUserAgent()" ];
  addAuthors_HTMLDocument__BNode_ [ label="addAuthors(HTMLDocument, BNode)" ];
  org_apache_any23_vocab_ICAL_getInstance__ [ label="org.apache.any23.vocab.ICAL.getInstance()" ];
  org_apache_any23_vocab_XFN_createProperty_java_lang_String_ [ label="org.apache.any23.vocab.XFN.createProperty(java.lang.String)" ];
  addUID_HTMLDocument__BNode_ [ label="addUID(HTMLDocument, BNode)" ];
  org_apache_any23_extractor_rdfa_RDFa11ParserTest_testIsCURIEPositive__ [ label="org.apache.any23.extractor.rdfa.RDFa11ParserTest.testIsCURIEPositive()" ];
  org_apache_any23_extractor_IssueReport_Issue_getCol__ [ label="org.apache.any23.extractor.IssueReport.Issue.getCol()" ];
  org_apache_any23_http_AcceptHeaderBuilderTest_testHighestTypeWildcardIsChosen__ [ label="org.apache.any23.http.AcceptHeaderBuilderTest.testHighestTypeWildcardIsChosen()" ];
  addSummary_HTMLDocument__Resource_ [ label="addSummary(HTMLDocument, Resource)" ];
  org_apache_any23_extractor_IssueReport_printReport_java_io_PrintStream_ [ label="org.apache.any23.extractor.IssueReport.printReport(java.io.PrintStream)" ];
  org_apache_any23_vocab_Vocabulary_getClass_java_lang_String_ [ label="org.apache.any23.vocab.Vocabulary.getClass(java.lang.String)" ];
  org_apache_any23_extractor_rdfa_SemarglSink_setProperty_java_lang_String__java_lang_Object_ [ label="org.apache.any23.extractor.rdfa.SemarglSink.setProperty(java.lang.String, java.lang.Object)" ];
  org_apache_any23_extractor_SingleDocumentExtractionTest_testMicroformatDomains__ [ label="org.apache.any23.extractor.SingleDocumentExtractionTest.testMicroformatDomains()" ];
  org_apache_any23_cli_ExtractorDocumentation_printError_java_lang_String_ [ label="org.apache.any23.cli.ExtractorDocumentation.printError(java.lang.String)" ];
  org_apache_any23_extractor_ExtractorRegistryImpl_isRegisteredName_java_lang_String_ [ label="org.apache.any23.extractor.ExtractorRegistryImpl.isRegisteredName(java.lang.String)" ];
  org_apache_any23_source_HTTPDocumentSource_isLocal__ [ label="org.apache.any23.source.HTTPDocumentSource.isLocal()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testEMailNotUri__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testEMailNotUri()" ];
  org_apache_any23_servlet_ServletTest_testJSONResponseFormat__ [ label="org.apache.any23.servlet.ServletTest.testJSONResponseFormat()" ];
  org_apache_any23_validator_DefaultRuleContext_getData_java_lang_String_ [ label="org.apache.any23.validator.DefaultRuleContext.getData(java.lang.String)" ];
  org_apache_any23_Any23Test_testMicrodataSupport__ [ label="org.apache.any23.Any23Test.testMicrodataSupport()" ];
  org_apache_any23_http_DefaultHTTPClientConfiguration_singleton__ [ label="org.apache.any23.http.DefaultHTTPClientConfiguration.singleton()" ];
  org_apache_any23_source_ByteArrayDocumentSource_isLocal__ [ label="org.apache.any23.source.ByteArrayDocumentSource.isLocal()" ];
  org_apache_any23_vocab_Vocabulary_getClasses__ [ label="org.apache.any23.vocab.Vocabulary.getClasses()" ];
  extract_ExtractionParameters__String__TripleHandler_ [ label="extract(ExtractionParameters, String, TripleHandler)" ];
  org_apache_any23_Any23_createDocumentSource_java_lang_String_ [ label="org.apache.any23.Any23.createDocumentSource(java.lang.String)" ];
  org_apache_any23_Any23Test_testExplicitEncoding__ [ label="org.apache.any23.Any23Test.testExplicitEncoding()" ];
  org_apache_any23_plugin_crawler_SiteCrawler_Anonymous_f14a2991_fe4c_445c_937a_e8858e8ac07b_run__ [ label="org.apache.any23.plugin.crawler.SiteCrawler.Anonymous-f14a2991-fe4c-445c-937a-e8858e8ac07b.run()" ];
  org_apache_any23_encoding_TikaEncodingDetectorTest_testXMLEncodingPattern__ [ label="org.apache.any23.encoding.TikaEncodingDetectorTest.testXMLEncodingPattern()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectCSVByContent__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectCSVByContent()" ];
  org_apache_any23_cli_Rover_close__ [ label="org.apache.any23.cli.Rover.close()" ];
  org_apache_any23_vocab_Vocabulary_createProperty_java_lang_String__java_lang_String_ [ label="org.apache.any23.vocab.Vocabulary.createProperty(java.lang.String, java.lang.String)" ];
  org_apache_any23_writer_TripleWriterFactory_getRdfWriter_java_io_OutputStream_ [ label="org.apache.any23.writer.TripleWriterFactory.getRdfWriter(java.io.OutputStream)" ];
  org_apache_any23_extractor_microdata_MicrodataParserTest_testDeferProperties__ [ label="org.apache.any23.extractor.microdata.MicrodataParserTest.testDeferProperties()" ];
  org_apache_any23_encoding_TikaEncodingDetectorTest_setUp__ [ label="org.apache.any23.encoding.TikaEncodingDetectorTest.setUp()" ];
  org_apache_any23_extractor_ExtractionResultImpl_getExtractionContext__ [ label="org.apache.any23.extractor.ExtractionResultImpl.getExtractionContext()" ];
  addItemAddresses_HTMLDocument__Resource_ [ label="addItemAddresses(HTMLDocument, Resource)" ];
  org_apache_any23_extractor_html_HListingExtractor_getDescription__ [ label="org.apache.any23.extractor.html.HListingExtractor.getDescription()" ];
  org_apache_any23_extractor_html_XFNExtractorTest_testSomeLinksWithoutRel__ [ label="org.apache.any23.extractor.html.XFNExtractorTest.testSomeLinksWithoutRel()" ];
  aboutIsValid_Node_ [ label="aboutIsValid(Node)" ];
  org_apache_any23_extractor_calendar_BaseCalendarExtractor_type_java_lang_String_ [ label="org.apache.any23.extractor.calendar.BaseCalendarExtractor.type(java.lang.String)" ];
  org_apache_any23_extractor_calendar_BaseCalendarExtractor_localNameOfType_java_lang_String_ [ label="org.apache.any23.extractor.calendar.BaseCalendarExtractor.localNameOfType(java.lang.String)" ];
  org_apache_any23_rdf_PrefixesTest_testNewPrefixesFromOtherPrefixesAreIndependent__ [ label="org.apache.any23.rdf.PrefixesTest.testNewPrefixesFromOtherPrefixesAreIndependent()" ];
  org_apache_any23_extractor_html_HCalendarExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.HCalendarExtractorFactory.createExtractor()" ];
  createStatement_Resource__IRI__Value__Resource_ [ label="createStatement(Resource, IRI, Value, Resource)" ];
  org_apache_any23_extractor_xpath_TemplatePredicate_toString__ [ label="org.apache.any23.extractor.xpath.TemplatePredicate.toString()" ];
  reportIssue_ValidationReport_IssueLevel__String__Node_ [ label="reportIssue(ValidationReport.IssueLevel, String, Node)" ];
  org_apache_any23_extractor_html_DomUtilsTest_testFindAllByTag__ [ label="org.apache.any23.extractor.html.DomUtilsTest.testFindAllByTag()" ];
  org_apache_any23_plugin_Any23PluginManager_DynamicClassLoader_addJAR_java_io_File_ [ label="org.apache.any23.plugin.Any23PluginManager.DynamicClassLoader.addJAR(java.io.File)" ];
  org_apache_any23_extractor_html_MicroformatExtractor_getExtractionContext__ [ label="org.apache.any23.extractor.html.MicroformatExtractor.getExtractionContext()" ];
  org_apache_any23_extractor_microdata_ItemPropValue_formatDateTime_java_util_Date_ [ label="org.apache.any23.extractor.microdata.ItemPropValue.formatDateTime(java.util.Date)" ];
  processMap_IRI__Map__Value_ [ label="processMap(IRI, Map, Value)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testInclude__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testInclude()" ];
  org_apache_any23_extractor_html_HeadLinkExtractorTest_testLinkExtraction__ [ label="org.apache.any23.extractor.html.HeadLinkExtractorTest.testLinkExtraction()" ];
  org_apache_any23_writer_TripleFormat_normalizeExtension_java_lang_String_ [ label="org.apache.any23.writer.TripleFormat.normalizeExtension(java.lang.String)" ];
  org_apache_any23_writer_CountingTripleHandler_getCount__ [ label="org.apache.any23.writer.CountingTripleHandler.getCount()" ];
  org_apache_any23_extractor_html_AbstractExtractorTestCase_dumpModelToNQuads__ [ label="org.apache.any23.extractor.html.AbstractExtractorTestCase.dumpModelToNQuads()" ];
  org_apache_any23_extractor_html_SpeciesExtractor_getBaseClassName__ [ label="org.apache.any23.extractor.html.SpeciesExtractor.getBaseClassName()" ];
  org_apache_any23_filter_IgnoreTitlesOfEmptyDocuments_close__ [ label="org.apache.any23.filter.IgnoreTitlesOfEmptyDocuments.close()" ];
  org_apache_any23_extractor_html_HRecipeExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.HRecipeExtractorTest.getExtractorFactory()" ];
  addDescription_Resource_ [ label="addDescription(Resource)" ];
  org_apache_any23_validator_DOMDocument_getNode_java_lang_String_ [ label="org.apache.any23.validator.DOMDocument.getNode(java.lang.String)" ];
  org_apache_any23_rdf_PrefixesTest_testAddVolatileNeverFails__ [ label="org.apache.any23.rdf.PrefixesTest.testAddVolatileNeverFails()" ];
  org_apache_any23_vocab_OGPVideo_createClass_java_lang_String_ [ label="org.apache.any23.vocab.OGPVideo.createClass(java.lang.String)" ];
  org_apache_any23_filter_ExtractionContextBlocker_setContentLength_long_ [ label="org.apache.any23.filter.ExtractionContextBlocker.setContentLength(long)" ];
  getMimeTypesStr_Collection_ [ label="getMimeTypesStr(Collection)" ];
  org_apache_any23_extractor_rdf_ManchesterSyntaxExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.rdf.ManchesterSyntaxExtractorFactory.createExtractor()" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.getExtractorFactory()" ];
  org_apache_any23_rdf_RDFUtils_iri_java_lang_String__java_lang_String_ [ label="org.apache.any23.rdf.RDFUtils.iri(java.lang.String, java.lang.String)" ];
  assertTripleCount_IRI__Value__int_ [ label="assertTripleCount(IRI, Value, int)" ];
  org_apache_any23_Any23Test_testNturtleDetectionAndExtraction__ [ label="org.apache.any23.Any23Test.testNturtleDetectionAndExtraction()" ];
  org_apache_any23_extractor_microdata_ItemScope_getTypes__ [ label="org.apache.any23.extractor.microdata.ItemScope.getTypes()" ];
  org_apache_any23_validator_ValidationReport_RuleActivation_getRuleStr__ [ label="org.apache.any23.validator.ValidationReport.RuleActivation.getRuleStr()" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_testNoMicroformatsInStatCvsPage__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.testNoMicroformatsInStatCvsPage()" ];
  org_apache_any23_util_StringUtils_countNL_java_lang_String_ [ label="org.apache.any23.util.StringUtils.countNL(java.lang.String)" ];
  org_apache_any23_util_StringUtils_countOccurrences_java_lang_String__java_lang_String_ [ label="org.apache.any23.util.StringUtils.countOccurrences(java.lang.String, java.lang.String)" ];
  org_apache_any23_validator_DefaultValidationReportBuilder_getReport__ [ label="org.apache.any23.validator.DefaultValidationReportBuilder.getReport()" ];
  org_apache_any23_validator_ValidationReportBuilder_getReport__ [ label="org.apache.any23.validator.ValidationReportBuilder.getReport()" ];
  org_apache_any23_extractor_html_TagSoupParserTest_tearDown__ [ label="org.apache.any23.extractor.html.TagSoupParserTest.tearDown()" ];
  org_apache_any23_extractor_calendar_ICalExtractorTest_testRFC5545example6__ [ label="org.apache.any23.extractor.calendar.ICalExtractorTest.testRFC5545example6()" ];
  writeParams_BNode__IRI__ICalParameters__ExtractionResult_ [ label="writeParams(BNode, IRI, ICalParameters, ExtractionResult)" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testBadPropertyNames__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.testBadPropertyNames()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testRelativeUrlBase__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testRelativeUrlBase()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testUid__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testUid()" ];
  org_apache_any23_plugin_Any23PluginManager_DynamicClassLoader_addClassDir_java_io_File_ [ label="org.apache.any23.plugin.Any23PluginManager.DynamicClassLoader.addClassDir(java.io.File)" ];
  org_apache_any23_extractor_ExtractionException_printStackTrace_java_io_PrintWriter_ [ label="org.apache.any23.extractor.ExtractionException.printStackTrace(java.io.PrintWriter)" ];
  org_apache_any23_cli_ToolRunner_parsePluginDirOption_java_lang_String___ [ label="org.apache.any23.cli.ToolRunner.parsePluginDirOption(java.lang.String[])" ];
  setOrganization_TextField_ [ label="setOrganization(TextField)" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_test11__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.test11()" ];
  dataType_ICalDataType__Boolean_ [ label="dataType(ICalDataType, Boolean)" ];
  org_apache_any23_extractor_ExtractionParametersTest_testReadDefaultConfig__ [ label="org.apache.any23.extractor.ExtractionParametersTest.testReadDefaultConfig()" ];
  setWebCrawler_Class_ [ label="setWebCrawler(Class)" ];
  org_apache_any23_extractor_microdata_ItemScope_getProperties__ [ label="org.apache.any23.extractor.microdata.ItemScope.getProperties()" ];
  org_apache_any23_writer_TripleWriter_writeNamespace_java_lang_String__java_lang_String_ [ label="org.apache.any23.writer.TripleWriter.writeNamespace(java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_html_EncodingTest_testEncodingHTML_ISO_8859_1__ [ label="org.apache.any23.extractor.html.EncodingTest.testEncodingHTML_ISO_8859_1()" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_testIssue271AndJavascriptParsing__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.testIssue271AndJavascriptParsing()" ];
  org_apache_any23_filter_IgnoreAccidentalRDFa_setContentLength_long_ [ label="org.apache.any23.filter.IgnoreAccidentalRDFa.setContentLength(long)" ];
  org_apache_any23_vocab_OGPProfile_getInstance__ [ label="org.apache.any23.vocab.OGPProfile.getInstance()" ];
  org_apache_any23_vocab_Vocabulary_getPropertyCamelCase_java_lang_String_ [ label="org.apache.any23.vocab.Vocabulary.getPropertyCamelCase(java.lang.String)" ];
  org_apache_any23_extractor_html_microformats2_HProductExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.microformats2.HProductExtractorFactory.createExtractor()" ];
  org_apache_any23_extractor_rdf_RDFHandlerAdapter_startRDF__ [ label="org.apache.any23.extractor.rdf.RDFHandlerAdapter.startRDF()" ];
  addCategory_Resource_ [ label="addCategory(Resource)" ];
  org_apache_any23_source_FileDocumentSource_isLocal__ [ label="org.apache.any23.source.FileDocumentSource.isLocal()" ];
  acceptIRI_IRI_ [ label="acceptIRI(IRI)" ];
  org_apache_any23_writer_TripleFormat_getExtension__ [ label="org.apache.any23.writer.TripleFormat.getExtension()" ];
  closeContext_ExtractionContext_ [ label="closeContext(ExtractionContext)" ];
  org_apache_any23_writer_BenchmarkTripleHandler_StatObject_interimStop__ [ label="org.apache.any23.writer.BenchmarkTripleHandler.StatObject.interimStop()" ];
  addFamilyName_HTMLDocument__BNode_ [ label="addFamilyName(HTMLDocument, BNode)" ];
  org_apache_any23_extractor_rdf_ManchesterSyntaxExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.rdf.ManchesterSyntaxExtractorFactory.getDescriptionInstance()" ];
  getCurrentObject_Node_ [ label="getCurrentObject(Node)" ];
  org_apache_any23_extractor_rdf_RDFParserFactory_InternalParseErrorListener_warning_java_lang_String__long__long_ [ label="org.apache.any23.extractor.rdf.RDFParserFactory.InternalParseErrorListener.warning(java.lang.String, long, long)" ];
  org_apache_any23_extractor_rdf_RDFParserFactory_InternalParseErrorListener_notifyExceptionInNotification_java_lang_Exception_ [ label="org.apache.any23.extractor.rdf.RDFParserFactory.InternalParseErrorListener.notifyExceptionInNotification(java.lang.Exception)" ];
  org_apache_any23_writer_BenchmarkTripleHandler_close__ [ label="org.apache.any23.writer.BenchmarkTripleHandler.close()" ];
  org_apache_any23_configuration_DefaultConfigurationTest_testCopyIsolation__ [ label="org.apache.any23.configuration.DefaultConfigurationTest.testCopyIsolation()" ];
  org_apache_any23_vocab_Review_getInstance__ [ label="org.apache.any23.vocab.Review.getInstance()" ];
  addName_HTMLDocument__Resource_ [ label="addName(HTMLDocument, Resource)" ];
  org_apache_any23_source_FileDocumentSource_getContentType__ [ label="org.apache.any23.source.FileDocumentSource.getContentType()" ];
  org_apache_any23_extractor_html_HReviewExtractorTest_test03NoHcardForItem__ [ label="org.apache.any23.extractor.html.HReviewExtractorTest.test03NoHcardForItem()" ];
  org_apache_any23_cli_Rover_printReports__ [ label="org.apache.any23.cli.Rover.printReports()" ];
  of_Setting______ [ label="of(Setting<?>[])" ];
  org_apache_any23_extractor_calendar_ICalExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.calendar.ICalExtractorTest.getExtractorFactory()" ];
  org_apache_any23_extractor_html_RDFMergerTest_test01XFNFoaf__ [ label="org.apache.any23.extractor.html.RDFMergerTest.test01XFNFoaf()" ];
  org_apache_any23_cli_VocabPrinter_setOut_java_io_PrintStream_ [ label="org.apache.any23.cli.VocabPrinter.setOut(java.io.PrintStream)" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_test02__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.test02()" ];
  org_apache_any23_util_StringUtilsTest_testEscapeAsJSONString__ [ label="org.apache.any23.util.StringUtilsTest.testEscapeAsJSONString()" ];
  assertNotContains_Resource__IRI__Literal_ [ label="assertNotContains(Resource, IRI, Literal)" ];
  org_apache_any23_extractor_html_HResumeExtractorTest_testLinkedIn__ [ label="org.apache.any23.extractor.html.HResumeExtractorTest.testLinkedIn()" ];
  addItemPhoto_HTMLDocument__Resource_ [ label="addItemPhoto(HTMLDocument, Resource)" ];
  org_apache_any23_extractor_html_SpeciesExtractorTest_testSpeciesMicroformatExtractOverTaxoBox__ [ label="org.apache.any23.extractor.html.SpeciesExtractorTest.testSpeciesMicroformatExtractOverTaxoBox()" ];
  org_apache_any23_extractor_html_HTMLDocument_readAttribute_java_lang_String_ [ label="org.apache.any23.extractor.html.HTMLDocument.readAttribute(java.lang.String)" ];
  org_apache_any23_mime_MIMEType_getQuality__ [ label="org.apache.any23.mime.MIMEType.getQuality()" ];
  addItemUrl_HTMLDocument__Resource_ [ label="addItemUrl(HTMLDocument, Resource)" ];
  org_apache_any23_configuration_SettingsTest_testNonNullSetting__ [ label="org.apache.any23.configuration.SettingsTest.testNonNullSetting()" ];
  getRevs_Node_ [ label="getRevs(Node)" ];
  org_apache_any23_extractor_html_microformats2_HCardExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.microformats2.HCardExtractorFactory.createExtractor()" ];
  org_apache_any23_Any23Test_testGZippedContent__ [ label="org.apache.any23.Any23Test.testGZippedContent()" ];
  serializeVocabularies_RDFFormat__PrintStream_ [ label="serializeVocabularies(RDFFormat, PrintStream)" ];
  org_apache_any23_extractor_xpath_QuadTemplate_getObject__ [ label="org.apache.any23.extractor.xpath.QuadTemplate.getObject()" ];
  org_apache_any23_rdf_PrefixesTest_testAddPrefix__ [ label="org.apache.any23.rdf.PrefixesTest.testAddPrefix()" ];
  org_apache_any23_extractor_microdata_MicrodataParserException_getErrorLocationEndRow__ [ label="org.apache.any23.extractor.microdata.MicrodataParserException.getErrorLocationEndRow()" ];
  org_apache_any23_extractor_rdfa_RDFaExtractorTest_testRDFa11PrefixBackwardCompatibility__ [ label="org.apache.any23.extractor.rdfa.RDFaExtractorTest.testRDFa11PrefixBackwardCompatibility()" ];
  getXPathListForNode_Node_ [ label="getXPathListForNode(Node)" ];
  org_apache_any23_extractor_rdfa_RDFa11ParserTest_testIsCURIEBNodeNegative__ [ label="org.apache.any23.extractor.rdfa.RDFa11ParserTest.testIsCURIEBNodeNegative()" ];
  org_apache_any23_extractor_html_HCalendarExtractor_extract__ [ label="org.apache.any23.extractor.html.HCalendarExtractor.extract()" ];
  validate_URI__Document__boolean_ [ label="validate(URI, Document, boolean)" ];
  org_apache_any23_extractor_html_EncodingTest_testEncodingXHTML_UTF_8__ [ label="org.apache.any23.extractor.html.EncodingTest.testEncodingXHTML_UTF_8()" ];
  addInstructions_HTMLDocument__BNode_ [ label="addInstructions(HTMLDocument, BNode)" ];
  org_apache_any23_extractor_microdata_MicrodataParserTest_testNestedMicrodata__ [ label="org.apache.any23.extractor.microdata.MicrodataParserTest.testNestedMicrodata()" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_createLiteral_int_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.createLiteral(int)" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_testIssue227__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.testIssue227()" ];
  org_apache_any23_extractor_microdata_ItemProp_getValue__ [ label="org.apache.any23.extractor.microdata.ItemProp.getValue()" ];
  org_apache_any23_writer_ReportingTripleHandler_getExtractorNames__ [ label="org.apache.any23.writer.ReportingTripleHandler.getExtractorNames()" ];
  org_apache_any23_extractor_rdfa_AbstractRDFaExtractorTestCase_testBasic__ [ label="org.apache.any23.extractor.rdfa.AbstractRDFaExtractorTestCase.testBasic()" ];
  org_apache_any23_writer_CompositeTripleHandler_close__ [ label="org.apache.any23.writer.CompositeTripleHandler.close()" ];
  org_apache_any23_encoding_TikaEncodingDetectorTest_testUTF8XHTML__ [ label="org.apache.any23.encoding.TikaEncodingDetectorTest.testUTF8XHTML()" ];
  org_apache_any23_extractor_microdata_ItemPropValue_toJSON__ [ label="org.apache.any23.extractor.microdata.ItemPropValue.toJSON()" ];
  org_apache_any23_extractor_html_microformats2_HItemExtractor_resetExtractor__ [ label="org.apache.any23.extractor.html.microformats2.HItemExtractor.resetExtractor()" ];
  org_apache_any23_cli_VocabPrinter_getOut__ [ label="org.apache.any23.cli.VocabPrinter.getOut()" ];
  org_apache_any23_mime_MIMEType_compareTo_org_apache_any23_mime_MIMEType_ [ label="org.apache.any23.mime.MIMEType.compareTo(org.apache.any23.mime.MIMEType)" ];
  org_apache_any23_configuration_DefaultConfigurationTest_setUp__ [ label="org.apache.any23.configuration.DefaultConfigurationTest.setUp()" ];
  pushVocabulary_Node__IRI_ [ label="pushVocabulary(Node, IRI)" ];
  writeTriple_Resource__IRI__Value__ExtractionResult_ [ label="writeTriple(Resource, IRI, Value, ExtractionResult)" ];
  org_apache_any23_extractor_html_HTMLMetaExtractorTest_testExtractPageMetaWithExtensionsPerMozillaSpecification__ [ label="org.apache.any23.extractor.html.HTMLMetaExtractorTest.testExtractPageMetaWithExtensionsPerMozillaSpecification()" ];
  org_apache_any23_extractor_rdf_JSONLDExtractorTest_testJsonCleaning__ [ label="org.apache.any23.extractor.rdf.JSONLDExtractorTest.testJsonCleaning()" ];
  org_apache_any23_extractor_html_microformats2_HProductExtractor_resetExtractor__ [ label="org.apache.any23.extractor.html.microformats2.HProductExtractor.resetExtractor()" ];
  org_apache_any23_extractor_html_microformats2_HProductExtractorTest_testModelNotEmpty__ [ label="org.apache.any23.extractor.html.microformats2.HProductExtractorTest.testModelNotEmpty()" ];
  org_apache_any23_extractor_ExtractionResultImpl_writeNamespace_java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.ExtractionResultImpl.writeNamespace(java.lang.String, java.lang.String)" ];
  org_apache_any23_validator_DefaultValidationReport_toString__ [ label="org.apache.any23.validator.DefaultValidationReport.toString()" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_createRunner_java_lang_String_ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.createRunner(java.lang.String)" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_runOnlineTests__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.runOnlineTests()" ];
  org_apache_any23_servlet_ServletTest_testGETWrongFormat__ [ label="org.apache.any23.servlet.ServletTest.testGETWrongFormat()" ];
  org_apache_any23_extractor_html_XFNExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.XFNExtractorTest.getExtractorFactory()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testImageSrc__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testImageSrc()" ];
  org_apache_any23_writer_TripleWriterFactory_getMimeType__ [ label="org.apache.any23.writer.TripleWriterFactory.getMimeType()" ];
  extract_String__TripleHandler_ [ label="extract(String, TripleHandler)" ];
  org_apache_any23_extractor_rdf_TurtleExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.rdf.TurtleExtractorFactory.getDescriptionInstance()" ];
  parseFragment_String__ParseErrorList_ [ label="parseFragment(String, ParseErrorList)" ];
  org_apache_any23_extractor_microdata_ItemPropValue_toString__ [ label="org.apache.any23.extractor.microdata.ItemPropValue.toString()" ];
  addDurations_HTMLDocument__BNode_ [ label="addDurations(HTMLDocument, BNode)" ];
  org_apache_any23_configuration_Configuration_getPropertyIntOrFail_java_lang_String_ [ label="org.apache.any23.configuration.Configuration.getPropertyIntOrFail(java.lang.String)" ];
  org_apache_any23_extractor_calendar_BaseCalendarExtractorTest_TestRDFHandler_handleComment_java_lang_String_ [ label="org.apache.any23.extractor.calendar.BaseCalendarExtractorTest.TestRDFHandler.handleComment(java.lang.String)" ];
  expectCloseContext_String__IRI__String_ [ label="expectCloseContext(String, IRI, String)" ];
  org_apache_any23_extractor_html_HTMLDocument_getDefaultLanguage__ [ label="org.apache.any23.extractor.html.HTMLDocument.getDefaultLanguage()" ];
  org_apache_any23_extractor_xpath_TemplateGraph_getValueInternal_java_lang_String_ [ label="org.apache.any23.extractor.xpath.TemplateGraph.getValueInternal(java.lang.String)" ];
  org_apache_any23_util_DiscoveryUtilsTest_testGetClassesInPackage__ [ label="org.apache.any23.util.DiscoveryUtilsTest.testGetClassesInPackage()" ];
  addNutritions_HTMLDocument__BNode_ [ label="addNutritions(HTMLDocument, BNode)" ];
  org_apache_any23_servlet_ServletTest_testPOSTNothing__ [ label="org.apache.any23.servlet.ServletTest.testPOSTNothing()" ];
  org_apache_any23_extractor_ExtractorRegistry_getAllNames__ [ label="org.apache.any23.extractor.ExtractorRegistry.getAllNames()" ];
  org_apache_any23_cli_MimeDetectorTest_testDetectInline__ [ label="org.apache.any23.cli.MimeDetectorTest.testDetectInline()" ];
  addInReplyTo_HTMLDocument__BNode_ [ label="addInReplyTo(HTMLDocument, BNode)" ];
  org_apache_any23_vocab_LKIFCoreAction_getInstance__ [ label="org.apache.any23.vocab.LKIFCoreAction.getInstance()" ];
  org_apache_any23_plugin_htmlscraper_HTMLScraperExtractorTest_testRun__ [ label="org.apache.any23.plugin.htmlscraper.HTMLScraperExtractorTest.testRun()" ];
  org_apache_any23_rdf_RDFUtilsTest_testGetNQuadsWriter__ [ label="org.apache.any23.rdf.RDFUtilsTest.testGetNQuadsWriter()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRSS1ByContent__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectRSS1ByContent()" ];
  org_apache_any23_extractor_IssueReport_notifyIssue_org_apache_any23_extractor_IssueReport_IssueLevel__java_lang_String__long__long_ [ label="org.apache.any23.extractor.IssueReport.notifyIssue(org.apache.any23.extractor.IssueReport.IssueLevel, java.lang.String, long, long)" ];
  org_apache_any23_extractor_html_HReviewAggregateExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.HReviewAggregateExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_extractor_html_RDFMergerTest_testAncestors__ [ label="org.apache.any23.extractor.html.RDFMergerTest.testAncestors()" ];
  org_apache_any23_rdf_Prefixes_canExpand_java_lang_String_ [ label="org.apache.any23.rdf.Prefixes.canExpand(java.lang.String)" ];
  org_apache_any23_extractor_ExtractorGroup_isEmpty__ [ label="org.apache.any23.extractor.ExtractorGroup.isEmpty()" ];
  org_apache_any23_servlet_ServletTest_testContentNegotiationDefaultsToTurtle__ [ label="org.apache.any23.servlet.ServletTest.testContentNegotiationDefaultsToTurtle()" ];
  org_apache_any23_configuration_Setting_create_java_lang_String__java_lang_Class_V___V_ [ label="org.apache.any23.configuration.Setting.create(java.lang.String, java.lang.Class<V>, V)" ];
  createLocalCopy_DocumentSource_ [ label="createLocalCopy(DocumentSource)" ];
  org_apache_any23_extractor_html_AbstractExtractorTestCase_extract_java_lang_String_ [ label="org.apache.any23.extractor.html.AbstractExtractorTestCase.extract(java.lang.String)" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_testHCalendarClassWithTodo__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.testHCalendarClassWithTodo()" ];
  processScriptNode_RDFParser__IRI__Node__ExtractionResult_ [ label="processScriptNode(RDFParser, IRI, Node, ExtractionResult)" ];
  org_apache_any23_extractor_html_HCardExtractor_dropSubject_java_lang_String_ [ label="org.apache.any23.extractor.html.HCardExtractor.dropSubject(java.lang.String)" ];
  org_apache_any23_validator_EmptyValidationReport_getErrors__ [ label="org.apache.any23.validator.EmptyValidationReport.getErrors()" ];
  verifyTypeOccurrence_TripleHandler__IRI__int_ [ label="verifyTypeOccurrence(TripleHandler, IRI, int)" ];
  org_apache_any23_extractor_rdfa_RDFa11Extractor_setStopAtFirstError_boolean_ [ label="org.apache.any23.extractor.rdfa.RDFa11Extractor.setStopAtFirstError(boolean)" ];
  addListerUrl_HTMLDocument__Resource_ [ label="addListerUrl(HTMLDocument, Resource)" ];
  assertNotContains_IRI__Resource_ [ label="assertNotContains(IRI, Resource)" ];
  org_apache_any23_extractor_html_GeoExtractor_getDescription__ [ label="org.apache.any23.extractor.html.GeoExtractor.getDescription()" ];
  org_apache_any23_writer_BaseWriterFactory_getSupportedSettings__ [ label="org.apache.any23.writer.BaseWriterFactory.getSupportedSettings()" ];
  getAsPlainLiteral_Node__String_ [ label="getAsPlainLiteral(Node, String)" ];
  org_apache_any23_extractor_ExtractorRegistry_getFactory_java_lang_String_ [ label="org.apache.any23.extractor.ExtractorRegistry.getFactory(java.lang.String)" ];
  addListerFn_HTMLDocument__Resource_ [ label="addListerFn(HTMLDocument, Resource)" ];
  org_apache_any23_writer_URIListWriter_setAnnotated_boolean_ [ label="org.apache.any23.writer.URIListWriter.setAnnotated(boolean)" ];
  org_apache_any23_extractor_html_LicenseExtractorTest_testEmpty__ [ label="org.apache.any23.extractor.html.LicenseExtractorTest.testEmpty()" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_testExplicitDatatypeDeclaration__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.testExplicitDatatypeDeclaration()" ];
  printExtractors_ReportingTripleHandler__PrintStream_ [ label="printExtractors(ReportingTripleHandler, PrintStream)" ];
  hasClassName_Node__String_ [ label="hasClassName(Node, String)" ];
  org_apache_any23_Any23Test_testHTMLBruteForceDetection__ [ label="org.apache.any23.Any23Test.testHTMLBruteForceDetection()" ];
  org_apache_any23_writer_LoggingTripleHandler_printHeader_java_io_PrintWriter_ [ label="org.apache.any23.writer.LoggingTripleHandler.printHeader(java.io.PrintWriter)" ];
  org_apache_any23_extractor_html_HReviewExtractorTest_test01Basic__ [ label="org.apache.any23.extractor.html.HReviewExtractorTest.test01Basic()" ];
  org_apache_any23_extractor_rdf_JsonCleaningInputStream_isNextOrUnread_java_io_PushbackInputStream__int____ [ label="org.apache.any23.extractor.rdf.JsonCleaningInputStream.isNextOrUnread(java.io.PushbackInputStream, int...)" ];
  org_apache_any23_extractor_calendar_ICalExtractorTest_testRFC5545example2__ [ label="org.apache.any23.extractor.calendar.ICalExtractorTest.testRFC5545example2()" ];
  org_apache_any23_vocab_ICAL_createProperty_java_lang_String_ [ label="org.apache.any23.vocab.ICAL.createProperty(java.lang.String)" ];
  org_apache_any23_vocab_LKIFCoreTimeModification_getInstance__ [ label="org.apache.any23.vocab.LKIFCoreTimeModification.getInstance()" ];
  org_apache_any23_configuration_SettingsTest_PositiveIntegerSetting_toString__ [ label="org.apache.any23.configuration.SettingsTest.PositiveIntegerSetting.toString()" ];
  appendFormatted_Node__StringBuilder__boolean_ [ label="appendFormatted(Node, StringBuilder, boolean)" ];
  org_apache_any23_encoding_TikaEncodingDetectorTest_testEncodingHTML__ [ label="org.apache.any23.encoding.TikaEncodingDetectorTest.testEncodingHTML()" ];
  org_apache_any23_configuration_DefaultModifiableConfiguration_setProperty_java_lang_String__java_lang_String_ [ label="org.apache.any23.configuration.DefaultModifiableConfiguration.setProperty(java.lang.String, java.lang.String)" ];
  parseRDF_RDFFormat__String_ [ label="parseRDF(RDFFormat, String)" ];
  org_apache_any23_configuration_DefaultConfigurationTest_testGetPropertyIntOrFailOk__ [ label="org.apache.any23.configuration.DefaultConfigurationTest.testGetPropertyIntOrFailOk()" ];
  org_apache_any23_extractor_microdata_MicrodataParserTest_testGetDateConcurrent__ [ label="org.apache.any23.extractor.microdata.MicrodataParserTest.testGetDateConcurrent()" ];
  org_apache_any23_extractor_rdfa_RDFa11ParserTest_testGetAsXMLLiteral__ [ label="org.apache.any23.extractor.rdfa.RDFa11ParserTest.testGetAsXMLLiteral()" ];
  org_apache_any23_extractor_microdata_Item_getXpath__ [ label="org.apache.any23.extractor.microdata.Item.getXpath()" ];
  extract_DocumentSource__TripleHandler_ [ label="extract(DocumentSource, TripleHandler)" ];
  org_apache_any23_extractor_html_HRecipeExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.HRecipeExtractorFactory.createExtractor()" ];
  org_apache_any23_configuration_Setting_withValue_V_ [ label="org.apache.any23.configuration.Setting.withValue(V)" ];
  org_apache_any23_writer_NTriplesWriterFactory_getTripleFormat__ [ label="org.apache.any23.writer.NTriplesWriterFactory.getTripleFormat()" ];
  org_apache_any23_extractor_rdf_TurtleExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.rdf.TurtleExtractorFactory.createExtractor()" ];
  org_apache_any23_extractor_MockTripleHandler_expectSetContentLength_long_ [ label="org.apache.any23.extractor.MockTripleHandler.expectSetContentLength(long)" ];
  org_apache_any23_cli_Rover_run__ [ label="org.apache.any23.cli.Rover.run()" ];
  org_apache_any23_cli_Rover_configure__ [ label="org.apache.any23.cli.Rover.configure()" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_TestRDFHandler_handleNamespace_java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.TestRDFHandler.handleNamespace(java.lang.String, java.lang.String)" ];
  org_apache_any23_util_ReaderInputStream_read_byte____int__int_ [ label="org.apache.any23.util.ReaderInputStream.read(byte[], int, int)" ];
  org_apache_any23_extractor_html_AbstractExtractorTestCase_assertNoIssues__ [ label="org.apache.any23.extractor.html.AbstractExtractorTestCase.assertNoIssues()" ];
  org_apache_any23_servlet_conneg_MediaRangeSpec_parseAccept_java_lang_String_ [ label="org.apache.any23.servlet.conneg.MediaRangeSpec.parseAccept(java.lang.String)" ];
  addLogo_Resource_ [ label="addLogo(Resource)" ];
  org_apache_any23_extractor_html_HCardName_getFields_java_lang_String_ [ label="org.apache.any23.extractor.html.HCardName.getFields(java.lang.String)" ];
  call_RDFDataset_ [ label="call(RDFDataset)" ];
  org_apache_any23_extractor_rdf_JSONLDExtractorTest_setUp__ [ label="org.apache.any23.extractor.rdf.JSONLDExtractorTest.setUp()" ];
  org_apache_any23_rdf_PrefixesTest_testUndefinedPrefix__ [ label="org.apache.any23.rdf.PrefixesTest.testUndefinedPrefix()" ];
  org_apache_any23_extractor_xpath_QuadTemplate_toString__ [ label="org.apache.any23.extractor.xpath.QuadTemplate.toString()" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testDtListed__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testDtListed()" ];
  org_apache_any23_rdf_Prefixes_canAbbreviate_java_lang_String_ [ label="org.apache.any23.rdf.Prefixes.canAbbreviate(java.lang.String)" ];
  findObjectAsLiteral_Resource__IRI_ [ label="findObjectAsLiteral(Resource, IRI)" ];
  org_apache_any23_extractor_ExtractionContext_copy_java_lang_String_ [ label="org.apache.any23.extractor.ExtractionContext.copy(java.lang.String)" ];
  org_apache_any23_extractor_ExtractionContext_getDefaultLanguage__ [ label="org.apache.any23.extractor.ExtractionContext.getDefaultLanguage()" ];
  isItemProp_Node_ [ label="isItemProp(Node)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestAtom__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.manifestAtom()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testCumulativeHNames__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testCumulativeHNames()" ];
  extract_ExtractionParameters__DocumentSource__TripleHandler__String_ [ label="extract(ExtractionParameters, DocumentSource, TripleHandler, String)" ];
  org_apache_any23_extractor_html_HCardExtractor_readOrganization__ [ label="org.apache.any23.extractor.html.HCardExtractor.readOrganization()" ];
  org_apache_any23_extractor_html_XFNExtractorTest_testSimpleFriend__ [ label="org.apache.any23.extractor.html.XFNExtractorTest.testSimpleFriend()" ];
  org_apache_any23_validator_DefaultValidatorTest_FakeFix_getHRName__ [ label="org.apache.any23.validator.DefaultValidatorTest.FakeFix.getHRName()" ];
  writeTriple_Resource__IRI__Value__IRI_ [ label="writeTriple(Resource, IRI, Value, IRI)" ];
  org_apache_any23_extractor_ExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.ExtractorFactory.createExtractor()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRDFNQuadsByContentAndName__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectRDFNQuadsByContentAndName()" ];
  org_apache_any23_cli_ExtractorDocumentationTest_testList__ [ label="org.apache.any23.cli.ExtractorDocumentationTest.testList()" ];
  remove_Variable_ [ label="remove(Variable)" ];
  org_apache_any23_extractor_html_SpanCloserInputStreamTest_testSubsequentSpanReplacement__ [ label="org.apache.any23.extractor.html.SpanCloserInputStreamTest.testSubsequentSpanReplacement()" ];
  org_apache_any23_extractor_html_TagSoupParser_getValidatedDOM_boolean_ [ label="org.apache.any23.extractor.html.TagSoupParser.getValidatedDOM(boolean)" ];
  execute_Rule__RuleContext__DOMDocument_ [ label="execute(Rule, RuleContext, DOMDocument)" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_testInvalidXMLCharacter__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.testInvalidXMLCharacter()" ];
  org_apache_any23_configuration_Setting_create_java_lang_String__java_lang_String_ [ label="org.apache.any23.configuration.Setting.create(java.lang.String, java.lang.String)" ];
  extract_ScribeIndex__WriteContext__BNode__ICalComponent__ExtractionResult__boolean_ [ label="extract(ScribeIndex, WriteContext, BNode, ICalComponent, ExtractionResult, boolean)" ];
  addSex_HTMLDocument__BNode_ [ label="addSex(HTMLDocument, BNode)" ];
  addListerEmail_HTMLDocument__Resource_ [ label="addListerEmail(HTMLDocument, Resource)" ];
  org_apache_any23_extractor_rdf_ManchesterSyntaxExtractorTest_testExampleManchesterSyntax__ [ label="org.apache.any23.extractor.rdf.ManchesterSyntaxExtractorTest.testExampleManchesterSyntax()" ];
  setFullName_TextField_ [ label="setFullName(TextField)" ];
  org_apache_any23_writer_CountingTripleHandler_close__ [ label="org.apache.any23.writer.CountingTripleHandler.close()" ];
  addTel_Resource__String__String_ [ label="addTel(Resource, String, String)" ];
  org_apache_any23_source_DocumentSource_getDocumentIRI__ [ label="org.apache.any23.source.DocumentSource.getDocumentIRI()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectContentPlainByMeta__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectContentPlainByMeta()" ];
  org_apache_any23_rdf_Prefixes_asMap__ [ label="org.apache.any23.rdf.Prefixes.asMap()" ];
  org_apache_any23_mime_MIMEType_getSubtype__ [ label="org.apache.any23.mime.MIMEType.getSubtype()" ];
  org_apache_any23_writer_FormatWriter_setAnnotated_boolean_ [ label="org.apache.any23.writer.FormatWriter.setAnnotated(boolean)" ];
  writeContentSimple_TripleWriter_ [ label="writeContentSimple(TripleWriter)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectTextN3ByMeta__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectTextN3ByMeta()" ];
  org_apache_any23_filter_ExtractionContextBlockerTest_setUp__ [ label="org.apache.any23.filter.ExtractionContextBlockerTest.setUp()" ];
  org_apache_any23_servlet_ServletTest_testGETwithURLDecoding__ [ label="org.apache.any23.servlet.ServletTest.testGETwithURLDecoding()" ];
  org_apache_any23_extractor_ExtractionAPITest_testDirectInstantiation__ [ label="org.apache.any23.extractor.ExtractionAPITest.testDirectInstantiation()" ];
  org_apache_any23_extractor_html_XFNExtractorTest_testSimpleMeLink__ [ label="org.apache.any23.extractor.html.XFNExtractorTest.testSimpleMeLink()" ];
  org_apache_any23_extractor_html_microformats2_HGeoExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.microformats2.HGeoExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_http_DefaultHTTPClient_getContentLength__ [ label="org.apache.any23.http.DefaultHTTPClient.getContentLength()" ];
  org_apache_any23_validator_ValidationReport_getIssues__ [ label="org.apache.any23.validator.ValidationReport.getIssues()" ];
  org_apache_any23_extractor_html_XFNExtractorTest_testMixedCaseATag__ [ label="org.apache.any23.extractor.html.XFNExtractorTest.testMixedCaseATag()" ];
  org_apache_any23_vocab_DOAC_getInstance__ [ label="org.apache.any23.vocab.DOAC.getInstance()" ];
  org_apache_any23_writer_TripleFormatTest_testRdf4jRoundTripping__ [ label="org.apache.any23.writer.TripleFormatTest.testRdf4jRoundTripping()" ];
  addStringProperty_String__Resource__IRI_ [ label="addStringProperty(String, Resource, IRI)" ];
  init_HTTPClientConfiguration_ [ label="init(HTTPClientConfiguration)" ];
  org_apache_any23_plugin_crawler_SiteCrawler_stop__ [ label="org.apache.any23.plugin.crawler.SiteCrawler.stop()" ];
  org_apache_any23_extractor_rdf_TriXExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.rdf.TriXExtractorFactory.createExtractor()" ];
  org_apache_any23_validator_rule_MissingItemscopeAttributeValueFix_getHRName__ [ label="org.apache.any23.validator.rule.MissingItemscopeAttributeValueFix.getHRName()" ];
  org_apache_any23_extractor_microdata_MicrodataParserTest_getDom_java_lang_String_ [ label="org.apache.any23.extractor.microdata.MicrodataParserTest.getDom(java.lang.String)" ];
  org_apache_any23_extractor_ExtractionResultImpl_getResourceRoots__ [ label="org.apache.any23.extractor.ExtractionResultImpl.getResourceRoots()" ];
  org_apache_any23_extractor_html_HCardExtractor_readNames__ [ label="org.apache.any23.extractor.html.HCardExtractor.readNames()" ];
  findDummy_HTMLDocument_ [ label="findDummy(HTMLDocument)" ];
  org_apache_any23_extractor_html_EncodingTest_testEncodingHTML_UTF_8__ [ label="org.apache.any23.extractor.html.EncodingTest.testEncodingHTML_UTF_8()" ];
  org_apache_any23_configuration_Configuration_defineProperty_java_lang_String_ [ label="org.apache.any23.configuration.Configuration.defineProperty(java.lang.String)" ];
  org_apache_any23_util_StringUtils_join_java_lang_String__java_lang_String____ [ label="org.apache.any23.util.StringUtils.join(java.lang.String, java.lang.String...)" ];
  quad_Resource__org_eclipse_rdf4j_model_IRI__Value__Resource_ [ label="quad(Resource, org.eclipse.rdf4j.model.IRI, Value, Resource)" ];
  org_apache_any23_extractor_html_HCardName_isMultiField_java_lang_String_ [ label="org.apache.any23.extractor.html.HCardName.isMultiField(java.lang.String)" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_testRelRevSupport__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.testRelRevSupport()" ];
  org_apache_any23_plugin_Any23PluginManager_loadClassDirs_java_io_File____ [ label="org.apache.any23.plugin.Any23PluginManager.loadClassDirs(java.io.File...)" ];
  org_apache_any23_extractor_html_XFNExtractorTest_testIgnoreExtraSpacesInRel__ [ label="org.apache.any23.extractor.html.XFNExtractorTest.testIgnoreExtraSpacesInRel()" ];
  org_apache_any23_writer_JSONWriter_printBNode_java_lang_String_ [ label="org.apache.any23.writer.JSONWriter.printBNode(java.lang.String)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testZipByContentAndName__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testZipByContentAndName()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestZip__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.manifestZip()" ];
  org_apache_any23_extractor_xpath_TemplateXPathExtractorRuleImplTest_testAddVariableSameNameCheck__ [ label="org.apache.any23.extractor.xpath.TemplateXPathExtractorRuleImplTest.testAddVariableSameNameCheck()" ];
  org_apache_any23_extractor_html_XFNExtractor_getDescription__ [ label="org.apache.any23.extractor.html.XFNExtractor.getDescription()" ];
  org_apache_any23_util_ReaderInputStream_available__ [ label="org.apache.any23.util.ReaderInputStream.available()" ];
  org_apache_any23_extractor_html_RDFMergerTest_testAdr__ [ label="org.apache.any23.extractor.html.RDFMergerTest.testAdr()" ];
  org_apache_any23_writer_ReportingTripleHandler_printReport__ [ label="org.apache.any23.writer.ReportingTripleHandler.printReport()" ];
  org_apache_any23_writer_ReportingTripleHandler_getTotalDocuments__ [ label="org.apache.any23.writer.ReportingTripleHandler.getTotalDocuments()" ];
  org_apache_any23_writer_ReportingTripleHandler_getTotalTriples__ [ label="org.apache.any23.writer.ReportingTripleHandler.getTotalTriples()" ];
  org_apache_any23_extractor_csv_CSVReaderBuilder_isCSV_java_io_InputStream_ [ label="org.apache.any23.extractor.csv.CSVReaderBuilder.isCSV(java.io.InputStream)" ];
  org_apache_any23_extractor_csv_CSVExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.csv.CSVExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_extractor_html_LicenseExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.LicenseExtractorFactory.createExtractor()" ];
  org_apache_any23_extractor_rdfa_SemarglSink_error_java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.rdfa.SemarglSink.error(java.lang.String, java.lang.String)" ];
  getProperty_String__IRI_ [ label="getProperty(String, IRI)" ];
  getTripleWriter_Output__Settings_ [ label="getTripleWriter(Output, Settings)" ];
  org_apache_any23_extractor_calendar_BaseCalendarExtractor_reader_java_io_InputStream_ [ label="org.apache.any23.extractor.calendar.BaseCalendarExtractor.reader(java.io.InputStream)" ];
  org_apache_any23_extractor_html_HTMLDocument_findMicroformattedValue_java_lang_String__java_lang_String__java_lang_String__java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.html.HTMLDocument.findMicroformattedValue(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_microdata_ItemPropValue_equals_java_lang_Object_ [ label="org.apache.any23.extractor.microdata.ItemPropValue.equals(java.lang.Object)" ];
  addSortString_HTMLDocument__BNode_ [ label="addSortString(HTMLDocument, BNode)" ];
  org_apache_any23_cli_BaseTool_ConcisePrintStream_Anonymous_07939d9e_96a6_4c99_ab72_e65558b27ca1_write_int_ [ label="org.apache.any23.cli.BaseTool.ConcisePrintStream.Anonymous-07939d9e-96a6-4c99-ab72-e65558b27ca1.write(int)" ];
  org_apache_any23_extractor_rdf_TriXExtractor_getDescription__ [ label="org.apache.any23.extractor.rdf.TriXExtractor.getDescription()" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testNoMicroformats__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testNoMicroformats()" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testTel__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.testTel()" ];
  org_apache_any23_configuration_Settings_iterator__ [ label="org.apache.any23.configuration.Settings.iterator()" ];
  org_apache_any23_extractor_ExtractionResultImpl_getIssues__ [ label="org.apache.any23.extractor.ExtractionResultImpl.getIssues()" ];
  org_apache_any23_vocab_HRecipe_getInstance__ [ label="org.apache.any23.vocab.HRecipe.getInstance()" ];
  org_apache_any23_extractor_html_TitleExtractor_getDescription__ [ label="org.apache.any23.extractor.html.TitleExtractor.getDescription()" ];
  org_apache_any23_mime_TikaMIMETypeDetector_checkCSVFormat_java_io_InputStream_ [ label="org.apache.any23.mime.TikaMIMETypeDetector.checkCSVFormat(java.io.InputStream)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectZIPByContent__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectZIPByContent()" ];
  nodeToInputStream_Node_ [ label="nodeToInputStream(Node)" ];
  addDescription_HTMLDocument__BNode_ [ label="addDescription(HTMLDocument, BNode)" ];
  org_apache_any23_extractor_html_TagSoupParserTest_testImplicitEncodingBehavior__ [ label="org.apache.any23.extractor.html.TagSoupParserTest.testImplicitEncodingBehavior()" ];
  org_apache_any23_vocab_Excel_createResource_java_lang_String_ [ label="org.apache.any23.vocab.Excel.createResource(java.lang.String)" ];
  isContainedInId_Node__Set_ [ label="isContainedInId(Node, Set)" ];
  addIRIProperty_Resource__IRI__IRI_ [ label="addIRIProperty(Resource, IRI, IRI)" ];
  org_apache_any23_validator_DefaultValidator_loadDefaultRules__ [ label="org.apache.any23.validator.DefaultValidator.loadDefaultRules()" ];
  org_apache_any23_extractor_html_EmbeddedJSONLDExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.EmbeddedJSONLDExtractorFactory.createExtractor()" ];
  addHonorificPrefix_HTMLDocument__BNode_ [ label="addHonorificPrefix(HTMLDocument, BNode)" ];
  configure_WriterConfig__Settings_ [ label="configure(WriterConfig, Settings)" ];
  org_apache_any23_writer_JSONWriterFactory_getSupportedSettings__ [ label="org.apache.any23.writer.JSONWriterFactory.getSupportedSettings()" ];
  notifyErrors_ExtractionResult_ [ label="notifyErrors(ExtractionResult)" ];
  org_apache_any23_extractor_html_HTMLFixture_getOpener_java_lang_String_ [ label="org.apache.any23.extractor.html.HTMLFixture.getOpener(java.lang.String)" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_testRDFa10Extraction__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.testRDFa10Extraction()" ];
  writeTriple_Resource__IRI__Value_ [ label="writeTriple(Resource, IRI, Value)" ];
  org_apache_any23_extractor_html_microformats2_HProductExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.microformats2.HProductExtractorTest.getExtractorFactory()" ];
  org_apache_any23_extractor_html_microformats2_HEntryExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.microformats2.HEntryExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_extractor_html_HCardName_FieldValue_getValue__ [ label="org.apache.any23.extractor.html.HCardName.FieldValue.getValue()" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testListerURL__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testListerURL()" ];
  serializeVocabulary_Vocabulary__RDFFormat_ [ label="serializeVocabulary(Vocabulary, RDFFormat)" ];
  org_apache_any23_extractor_html_HCardName_getFullNamePart_java_lang_String__int_ [ label="org.apache.any23.extractor.html.HCardName.getFullNamePart(java.lang.String, int)" ];
  org_apache_any23_writer_TripleFormat_checkNonNull_E__java_lang_String_ [ label="org.apache.any23.writer.TripleFormat.checkNonNull(E, java.lang.String)" ];
  addOrg_HTMLDocument__BNode_ [ label="addOrg(HTMLDocument, BNode)" ];
  org_apache_any23_vocab_OGP_createClass_java_lang_String_ [ label="org.apache.any23.vocab.OGP.createClass(java.lang.String)" ];
  org_apache_any23_extractor_html_AbstractExtractorTestCase_assertModelEmpty__ [ label="org.apache.any23.extractor.html.AbstractExtractorTestCase.assertModelEmpty()" ];
  org_apache_any23_extractor_calendar_XCalExtractor_getDescription__ [ label="org.apache.any23.extractor.calendar.XCalExtractor.getDescription()" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testItemPhotoHref__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testItemPhotoHref()" ];
  org_apache_any23_writer_BaseWriterFactory_getMimeType__ [ label="org.apache.any23.writer.BaseWriterFactory.getMimeType()" ];
  produceTriple_Node__Resource__ExtractionResult_ [ label="produceTriple(Node, Resource, ExtractionResult)" ];
  org_apache_any23_extractor_rdfa_RDFaExtractor_setVerifyDataType_boolean_ [ label="org.apache.any23.extractor.rdfa.RDFaExtractor.setVerifyDataType(boolean)" ];
  createNestingRelationship_PropertyPath__ResourceRoot__TripleHandler__ExtractionContext_ [ label="createNestingRelationship(PropertyPath, ResourceRoot, TripleHandler, ExtractionContext)" ];
  addPublished_HTMLDocument__BNode_ [ label="addPublished(HTMLDocument, BNode)" ];
  org_apache_any23_extractor_SingleDocumentExtraction_hasMatchingExtractors__ [ label="org.apache.any23.extractor.SingleDocumentExtraction.hasMatchingExtractors()" ];
  org_apache_any23_rdf_PrefixesTest_testMergePrefixesWithConflictRaisesException__ [ label="org.apache.any23.rdf.PrefixesTest.testMergePrefixesWithConflictRaisesException()" ];
  getExtractionParameters_HttpServletRequest_ [ label="getExtractionParameters(HttpServletRequest)" ];
  org_apache_any23_extractor_ExtractionContext_equals_java_lang_Object_ [ label="org.apache.any23.extractor.ExtractionContext.equals(java.lang.Object)" ];
  org_apache_any23_servlet_ServletTest_testGETwithURLEncoding__ [ label="org.apache.any23.servlet.ServletTest.testGETwithURLEncoding()" ];
  org_apache_any23_servlet_conneg_MediaRangeSpec_getBestMatch_java_util_List_org_apache_any23_servlet_conneg_MediaRangeSpec__ [ label="org.apache.any23.servlet.conneg.MediaRangeSpec.getBestMatch(java.util.List<org.apache.any23.servlet.conneg.MediaRangeSpec>)" ];
  org_apache_any23_vocab_LKIFCoreTop_getInstance__ [ label="org.apache.any23.vocab.LKIFCoreTop.getInstance()" ];
  isItemScope_Node_ [ label="isItemScope(Node)" ];
  consolidateResources_List__List__boolean__TripleHandler__String_ [ label="consolidateResources(List, List, boolean, TripleHandler, String)" ];
  assertExtractorActivation_String__Class___extends_Extractor____ [ label="assertExtractorActivation(String, Class<? extends Extractor>[])" ];
  org_apache_any23_configuration_DefaultConfigurationTest_testGetFlagProperty__ [ label="org.apache.any23.configuration.DefaultConfigurationTest.testGetFlagProperty()" ];
  org_apache_any23_util_StreamUtils_asString_java_io_InputStream_ [ label="org.apache.any23.util.StreamUtils.asString(java.io.InputStream)" ];
  org_apache_any23_util_StreamUtils_asString_java_io_InputStream__boolean_ [ label="org.apache.any23.util.StreamUtils.asString(java.io.InputStream, boolean)" ];
  org_apache_any23_extractor_calendar_JCalExtractor_reader_java_io_InputStream_ [ label="org.apache.any23.extractor.calendar.JCalExtractor.reader(java.io.InputStream)" ];
  org_apache_any23_extractor_yaml_YAMLTikaParserTest_prepareDetector__ [ label="org.apache.any23.extractor.yaml.YAMLTikaParserTest.prepareDetector()" ];
  getBlankNodeFor_Node_ [ label="getBlankNodeFor(Node)" ];
  org_apache_any23_extractor_html_microformats2_HGeoExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.microformats2.HGeoExtractorFactory.createExtractor()" ];
  addClassesName_HTMLDocument__Resource_ [ label="addClassesName(HTMLDocument, Resource)" ];
  addNutrition_HTMLDocument__HTMLDocument_TextField_ [ label="addNutrition(HTMLDocument, HTMLDocument.TextField)" ];
  countTags_Node_ [ label="countTags(Node)" ];
  org_apache_any23_extractor_rdf_BaseRDFExtractor_setStopAtFirstError_boolean_ [ label="org.apache.any23.extractor.rdf.BaseRDFExtractor.setStopAtFirstError(boolean)" ];
  isElementNode_Node_ [ label="isElementNode(Node)" ];
  org_apache_any23_extractor_html_XFNExtractorTest_testForSomeReasonICantBeMyOwnSweetheart__ [ label="org.apache.any23.extractor.html.XFNExtractorTest.testForSomeReasonICantBeMyOwnSweetheart()" ];
  of_Collection_ [ label="of(Collection)" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testDtListedAndExpired__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testDtListedAndExpired()" ];
  org_apache_any23_util_FileUtils_mv_java_io_File__java_io_File_ [ label="org.apache.any23.util.FileUtils.mv(java.io.File, java.io.File)" ];
  org_apache_any23_writer_TurtleWriterFactory_getIdentifier__ [ label="org.apache.any23.writer.TurtleWriterFactory.getIdentifier()" ];
  org_apache_any23_extractor_html_RDFMergerTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.RDFMergerTest.getExtractorFactory()" ];
  value_Node__String_ [ label="value(Node, String)" ];
  addName_HTMLDocument__BNode_ [ label="addName(HTMLDocument, BNode)" ];
  printOut_ExtractionResult__Map_ [ label="printOut(ExtractionResult, Map)" ];
  org_apache_any23_extractor_html_DocumentReport_getDocument__ [ label="org.apache.any23.extractor.html.DocumentReport.getDocument()" ];
  org_apache_any23_plugin_htmlscraper_HTMLScraperExtractor_getDescription__ [ label="org.apache.any23.plugin.htmlscraper.HTMLScraperExtractor.getDescription()" ];
  org_apache_any23_extractor_xpath_TemplateXPathExtractionRuleImpl_getUriRegex__ [ label="org.apache.any23.extractor.xpath.TemplateXPathExtractionRuleImpl.getUriRegex()" ];
  org_apache_any23_extractor_yaml_YAMLProcessorException_getReason__ [ label="org.apache.any23.extractor.yaml.YAMLProcessorException.getReason()" ];
  org_apache_any23_plugin_htmlscraper_HTMLScraperExtractor_setStopAtFirstError_boolean_ [ label="org.apache.any23.plugin.htmlscraper.HTMLScraperExtractor.setStopAtFirstError(boolean)" ];
  addBday_HTMLDocument__BNode_ [ label="addBday(HTMLDocument, BNode)" ];
  addNotes_HTMLDocument__BNode_ [ label="addNotes(HTMLDocument, BNode)" ];
  org_apache_any23_validator_DefaultRuleContext_removeData_java_lang_String_ [ label="org.apache.any23.validator.DefaultRuleContext.removeData(java.lang.String)" ];
  org_apache_any23_writer_TriXWriterFactory_getSupportedSettings__ [ label="org.apache.any23.writer.TriXWriterFactory.getSupportedSettings()" ];
  getPredicate_IRI__String_ [ label="getPredicate(IRI, String)" ];
  getNQuadsParser_boolean__boolean__ExtractionContext__ExtractionResult_ [ label="getNQuadsParser(boolean, boolean, ExtractionContext, ExtractionResult)" ];
  org_apache_any23_util_ReaderInputStream_mark_int_ [ label="org.apache.any23.util.ReaderInputStream.mark(int)" ];
  org_apache_any23_rdf_PrefixesTest_testAsMapIsUnmodifiable__ [ label="org.apache.any23.rdf.PrefixesTest.testAsMapIsUnmodifiable()" ];
  org_apache_any23_writer_WriterRegistryTest_testGetIdentifiers__ [ label="org.apache.any23.writer.WriterRegistryTest.testGetIdentifiers()" ];
  org_apache_any23_encoding_EncodingUtils_iso_8859_1_java_io_InputStream_ [ label="org.apache.any23.encoding.EncodingUtils.iso_8859_1(java.io.InputStream)" ];
  org_apache_any23_extractor_rdf_JSONLDExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.rdf.JSONLDExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_extractor_html_AdrExtractor_getBaseClassName__ [ label="org.apache.any23.extractor.html.AdrExtractor.getBaseClassName()" ];
  org_apache_any23_vocab_VocabularyTest_testGetClasses__ [ label="org.apache.any23.vocab.VocabularyTest.testGetClasses()" ];
  addStringMultiProperty_String__Resource__IRI_ [ label="addStringMultiProperty(String, Resource, IRI)" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorFactory.createExtractor()" ];
  org_apache_any23_extractor_html_HTMLMetaExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.HTMLMetaExtractorTest.getExtractorFactory()" ];
  org_apache_any23_extractor_html_HReviewAggregateExtractor_getDescription__ [ label="org.apache.any23.extractor.html.HReviewAggregateExtractor.getDescription()" ];
  org_apache_any23_extractor_html_SpanCloserInputStreamTest_testCloserTransparency__ [ label="org.apache.any23.extractor.html.SpanCloserInputStreamTest.testCloserTransparency()" ];
  org_apache_any23_extractor_ExtractionContext_checkNotNull_java_lang_Object__java_lang_String_ [ label="org.apache.any23.extractor.ExtractionContext.checkNotNull(java.lang.Object, java.lang.String)" ];
  reportAndGetCompatFormat_WriterFactory_ [ label="reportAndGetCompatFormat(WriterFactory)" ];
  org_apache_any23_filter_ExtractionContextBlocker_ValvedTriplePipe_block__ [ label="org.apache.any23.filter.ExtractionContextBlocker.ValvedTriplePipe.block()" ];
  org_apache_any23_servlet_ServletTest_testCorrectBaseIRI__ [ label="org.apache.any23.servlet.ServletTest.testCorrectBaseIRI()" ];
  org_apache_any23_writer_WriterRegistryTest_testGetMimeTypes__ [ label="org.apache.any23.writer.WriterRegistryTest.testGetMimeTypes()" ];
  org_apache_any23_openie_OpenIEExtractorTest_setUp__ [ label="org.apache.any23.openie.OpenIEExtractorTest.setUp()" ];
  org_apache_any23_writer_RDFXMLWriterFactory_getTripleFormat__ [ label="org.apache.any23.writer.RDFXMLWriterFactory.getTripleFormat()" ];
  org_apache_any23_extractor_csv_CSVExtractorTest_testTypeManagement__ [ label="org.apache.any23.extractor.csv.CSVExtractorTest.testTypeManagement()" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_testOneVEvent__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.testOneVEvent()" ];
  setHTTPClient_HTTPClient_ [ label="setHTTPClient(HTTPClient)" ];
  addContent_HTMLDocument__BNode_ [ label="addContent(HTMLDocument, BNode)" ];
  org_apache_any23_extractor_ExtractionParameters_isFix__ [ label="org.apache.any23.extractor.ExtractionParameters.isFix()" ];
  org_apache_any23_writer_TripleFormat_checkMimeTypes_java_util_List_java_lang_String__ [ label="org.apache.any23.writer.TripleFormat.checkMimeTypes(java.util.List<java.lang.String>)" ];
  org_apache_any23_writer_TripleFormat_mimeTypeErr_java_lang_String_ [ label="org.apache.any23.writer.TripleFormat.mimeTypeErr(java.lang.String)" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_createLiteral_java_math_BigDecimal_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.createLiteral(java.math.BigDecimal)" ];
  org_apache_any23_Any23Test_testXMLMimeTypeManagementViaURL__ [ label="org.apache.any23.Any23Test.testXMLMimeTypeManagementViaURL()" ];
  org_apache_any23_ExtractionReport_getMatchingExtractors__ [ label="org.apache.any23.ExtractionReport.getMatchingExtractors()" ];
  org_apache_any23_cli_ToolRunner_main_java_lang_String___ [ label="org.apache.any23.cli.ToolRunner.main(java.lang.String[])" ];
  org_apache_any23_extractor_rdf_JsonCleaningInputStream_read__ [ label="org.apache.any23.extractor.rdf.JsonCleaningInputStream.read()" ];
  org_apache_any23_extractor_microdata_MicrodataParserTest_testMicrodataJSONSerialization__ [ label="org.apache.any23.extractor.microdata.MicrodataParserTest.testMicrodataJSONSerialization()" ];
  org_apache_any23_extractor_csv_CSVExtractor_setStopAtFirstError_boolean_ [ label="org.apache.any23.extractor.csv.CSVExtractor.setStopAtFirstError(boolean)" ];
  updateVocabulary_Node_ [ label="updateVocabulary(Node)" ];
  org_apache_any23_servlet_ServletTest_testDefaultBaseIRIinPOST__ [ label="org.apache.any23.servlet.ServletTest.testDefaultBaseIRIinPOST()" ];
  org_apache_any23_extractor_html_TagSoupParser_ElementLocation_getEndColumnNumber__ [ label="org.apache.any23.extractor.html.TagSoupParser.ElementLocation.getEndColumnNumber()" ];
  org_apache_any23_configuration_Setting_create_java_lang_String__java_lang_Double_ [ label="org.apache.any23.configuration.Setting.create(java.lang.String, java.lang.Double)" ];
  org_apache_any23_extractor_rdf_TurtleExtractor_getDescription__ [ label="org.apache.any23.extractor.rdf.TurtleExtractor.getDescription()" ];
  org_apache_any23_rdf_PrefixesTest_testCreateSubset__ [ label="org.apache.any23.rdf.PrefixesTest.testCreateSubset()" ];
  processProperty_Resource__IRI__ItemProp__ParsedIRI__Map__ExtractionResult__IRI_ [ label="processProperty(Resource, IRI, ItemProp, ParsedIRI, Map, ExtractionResult, IRI)" ];
  org_apache_any23_vocab_HEntry_getInstance__ [ label="org.apache.any23.vocab.HEntry.getInstance()" ];
  org_apache_any23_extractor_rdf_FunctionalSyntaxExtractor_getDescription__ [ label="org.apache.any23.extractor.rdf.FunctionalSyntaxExtractor.getDescription()" ];
  org_apache_any23_extractor_ExtractionResultImplTest_setUp__ [ label="org.apache.any23.extractor.ExtractionResultImplTest.setUp()" ];
  org_apache_any23_extractor_rdf_TurtleExtractorTest_tearDown__ [ label="org.apache.any23.extractor.rdf.TurtleExtractorTest.tearDown()" ];
  addLocations_HTMLDocument__Resource_ [ label="addLocations(HTMLDocument, Resource)" ];
  org_apache_any23_vocab_OGPBook_createClass_java_lang_String_ [ label="org.apache.any23.vocab.OGPBook.createClass(java.lang.String)" ];
  org_apache_any23_extractor_csv_CSVReaderBuilderTest_testPositiveCSVDetection__ [ label="org.apache.any23.extractor.csv.CSVReaderBuilderTest.testPositiveCSVDetection()" ];
  org_apache_any23_extractor_html_HeadLinkExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.HeadLinkExtractorTest.getExtractorFactory()" ];
  org_apache_any23_extractor_html_microformats2_HResumeExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.microformats2.HResumeExtractorFactory.getDescriptionInstance()" ];
  findObject_Resource__IRI_ [ label="findObject(Resource, IRI)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectApplicationCSVByMeta__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectApplicationCSVByMeta()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectTextTurtleByMeta__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectTextTurtleByMeta()" ];
  org_apache_any23_servlet_ServletTest_testPOSTBodyWorks__ [ label="org.apache.any23.servlet.ServletTest.testPOSTBodyWorks()" ];
  copyAttributes_org_jsoup_nodes_Node__org_w3c_dom_Element_ [ label="copyAttributes(org.jsoup.nodes.Node, org.w3c.dom.Element)" ];
  org_apache_any23_vocab_WO_getInstance__ [ label="org.apache.any23.vocab.WO.getInstance()" ];
  org_apache_any23_writer_WriterRegistryTest_testHasIdentifier__ [ label="org.apache.any23.writer.WriterRegistryTest.testHasIdentifier()" ];
  org_apache_any23_extractor_rdf_FunctionalSyntaxExtractorTest_testExampleFunctionalSyntax__ [ label="org.apache.any23.extractor.rdf.FunctionalSyntaxExtractorTest.testExampleFunctionalSyntax()" ];
  org_apache_any23_encoding_TikaEncodingDetectorTest_testISO8859XHTML__ [ label="org.apache.any23.encoding.TikaEncodingDetectorTest.testISO8859XHTML()" ];
  readAttribute_Node__String__String_ [ label="readAttribute(Node, String, String)" ];
  org_apache_any23_servlet_ServletTest_testContentNegotiationForUnacceptableFormatReturns406__ [ label="org.apache.any23.servlet.ServletTest.testContentNegotiationForUnacceptableFormatReturns406()" ];
  org_apache_any23_extractor_microdata_ItemScope_toString__ [ label="org.apache.any23.extractor.microdata.ItemScope.toString()" ];
  org_apache_any23_extractor_html_microformats2_HRecipeExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.microformats2.HRecipeExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_configuration_DefaultConfigurationTest_testGetProperty__ [ label="org.apache.any23.configuration.DefaultConfigurationTest.testGetProperty()" ];
  org_apache_any23_rdf_PrefixesTest_testMergePrefixesWithConflictButSameNamespace__ [ label="org.apache.any23.rdf.PrefixesTest.testMergePrefixesWithConflictButSameNamespace()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testRomanianWikipedia__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testRomanianWikipedia()" ];
  org_apache_any23_writer_BaseWriterFactory_getRdfWriter_java_io_OutputStream_ [ label="org.apache.any23.writer.BaseWriterFactory.getRdfWriter(java.io.OutputStream)" ];
  org_apache_any23_extractor_html_microformats2_HRecipeExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.microformats2.HRecipeExtractorFactory.createExtractor()" ];
  org_apache_any23_extractor_html_microformats2_HResumeExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.microformats2.HResumeExtractorTest.getExtractorFactory()" ];
  org_apache_any23_extractor_html_microformats2_HRecipeExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.microformats2.HRecipeExtractorTest.getExtractorFactory()" ];
  org_apache_any23_extractor_TagSoupExtractionResult_PropertyPath_getExtractor__ [ label="org.apache.any23.extractor.TagSoupExtractionResult.PropertyPath.getExtractor()" ];
  handleComment_String_ [ label="handleComment(String)" ];
  org_apache_any23_rdf_PrefixesTest_testIncompatiblePrefixesInMergeAreDetected__ [ label="org.apache.any23.rdf.PrefixesTest.testIncompatiblePrefixesInMergeAreDetected()" ];
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_VariantSpec_addAliasMediaType_java_lang_String_ [ label="org.apache.any23.servlet.conneg.ContentTypeNegotiator.VariantSpec.addAliasMediaType(java.lang.String)" ];
  org_apache_any23_extractor_SimpleExtractorFactory_getPrefixes__ [ label="org.apache.any23.extractor.SimpleExtractorFactory.getPrefixes()" ];
  extractRel_String__BNode__IRI__BNode__IRI_ [ label="extractRel(String, BNode, IRI, BNode, IRI)" ];
  org_apache_any23_cli_MimeDetector_getOut__ [ label="org.apache.any23.cli.MimeDetector.getOut()" ];
  org_apache_any23_extractor_calendar_JCalExtractorTest_testRFC7265example1__ [ label="org.apache.any23.extractor.calendar.JCalExtractorTest.testRFC7265example1()" ];
  org_apache_any23_extractor_html_HCardExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.HCardExtractorFactory.createExtractor()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testBirthDayDateTimeTimeZone__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testBirthDayDateTimeTimeZone()" ];
  assertNotContains_Resource__IRI__Resource_ [ label="assertNotContains(Resource, IRI, Resource)" ];
  extractTextInValue_NodeList__StringBuilder_ [ label="extractTextInValue(NodeList, StringBuilder)" ];
  org_apache_any23_rdf_PrefixesTest_testUndefinedPrefixIsNotVolatile__ [ label="org.apache.any23.rdf.PrefixesTest.testUndefinedPrefixIsNotVolatile()" ];
  org_apache_any23_filter_ExtractionContextBlocker_isDocBlocked__ [ label="org.apache.any23.filter.ExtractionContextBlocker.isDocBlocked()" ];
  org_apache_any23_vocab_Vocabulary_getNamespace__ [ label="org.apache.any23.vocab.Vocabulary.getNamespace()" ];
  org_apache_any23_plugin_Any23PluginManagerTest_decompressJar_java_io_File__java_io_File_ [ label="org.apache.any23.plugin.Any23PluginManagerTest.decompressJar(java.io.File, java.io.File)" ];
  org_apache_any23_extractor_rdf_RDFHandlerAdapter_endRDF__ [ label="org.apache.any23.extractor.rdf.RDFHandlerAdapter.endRDF()" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testDtExpired__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testDtExpired()" ];
  org_apache_any23_extractor_html_microformats2_HEventExtractor_resetExtractor__ [ label="org.apache.any23.extractor.html.microformats2.HEventExtractor.resetExtractor()" ];
  conditionallyAddResourceProperty_Resource__IRI__IRI_ [ label="conditionallyAddResourceProperty(Resource, IRI, IRI)" ];
  org_apache_any23_validator_DOMDocument_getNodesWithAttribute_java_lang_String_ [ label="org.apache.any23.validator.DOMDocument.getNodesWithAttribute(java.lang.String)" ];
  org_apache_any23_vocab_VocabularyTest_setUp__ [ label="org.apache.any23.vocab.VocabularyTest.setUp()" ];
  org_apache_any23_vocab_OGPMusic_getInstance__ [ label="org.apache.any23.vocab.OGPMusic.getInstance()" ];
  org_apache_any23_rdf_RDFUtils_literal_float_ [ label="org.apache.any23.rdf.RDFUtils.literal(float)" ];
  ofModifiable_Map_ [ label="ofModifiable(Map)" ];
  org_apache_any23_mime_purifier_WhiteSpacesPurifierTest_validatePurification_java_lang_String_ [ label="org.apache.any23.mime.purifier.WhiteSpacesPurifierTest.validatePurification(java.lang.String)" ];
  getWriter_String__TripleHandler_ [ label="getWriter(String, TripleHandler)" ];
  org_apache_any23_extractor_rdf_RDFXMLExtractor_getDescription__ [ label="org.apache.any23.extractor.rdf.RDFXMLExtractor.getDescription()" ];
  org_apache_any23_vocab_FOAF_getInstance__ [ label="org.apache.any23.vocab.FOAF.getInstance()" ];
  setCacheFactory_LocalCopyFactory_ [ label="setCacheFactory(LocalCopyFactory)" ];
  org_apache_any23_extractor_html_HCalendarExtractor_getDescription__ [ label="org.apache.any23.extractor.html.HCalendarExtractor.getDescription()" ];
  org_apache_any23_extractor_html_LicenseExtractorTest_testMultipleEmptyHref__ [ label="org.apache.any23.extractor.html.LicenseExtractorTest.testMultipleEmptyHref()" ];
  org_apache_any23_validator_Rule_getHRName__ [ label="org.apache.any23.validator.Rule.getHRName()" ];
  org_apache_any23_vocab_OGPMusic_createClass_java_lang_String_ [ label="org.apache.any23.vocab.OGPMusic.createClass(java.lang.String)" ];
  setOrganizationUnit_TextField_ [ label="setOrganizationUnit(TextField)" ];
  org_apache_any23_rdf_RDFUtils_literal_short_ [ label="org.apache.any23.rdf.RDFUtils.literal(short)" ];
  org_apache_any23_extractor_yaml_YAMLExtractorTest_simpleFileLoading__ [ label="org.apache.any23.extractor.yaml.YAMLExtractorTest.simpleFileLoading()" ];
  org_apache_any23_encoding_TikaEncodingDetector_guessEncoding_java_io_InputStream_ [ label="org.apache.any23.encoding.TikaEncodingDetector.guessEncoding(java.io.InputStream)" ];
  org_apache_any23_validator_Validator_getAllRules__ [ label="org.apache.any23.validator.Validator.getAllRules()" ];
  org_apache_any23_extractor_rdf_FunctionalSyntaxExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.rdf.FunctionalSyntaxExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_extractor_rdfa_SemarglSink_setBaseUri_java_lang_String_ [ label="org.apache.any23.extractor.rdfa.SemarglSink.setBaseUri(java.lang.String)" ];
  org_apache_any23_extractor_calendar_JCalExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.calendar.JCalExtractorFactory.createExtractor()" ];
  assertContent_ExtractionResult__int_ [ label="assertContent(ExtractionResult, int)" ];
  org_apache_any23_vocab_HListing_createProperty_java_lang_String_ [ label="org.apache.any23.vocab.HListing.createProperty(java.lang.String)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testHTMLByContentAndName__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testHTMLByContentAndName()" ];
  org_apache_any23_extractor_rdfa_RDFaExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.rdfa.RDFaExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_validator_rule_MissingItemscopeAttributeValueRule_getHRName__ [ label="org.apache.any23.validator.rule.MissingItemscopeAttributeValueRule.getHRName()" ];
  org_apache_any23_extractor_microdata_MicrodataParserTest_getExpectedResultCount_java_util_Properties_ [ label="org.apache.any23.extractor.microdata.MicrodataParserTest.getExpectedResultCount(java.util.Properties)" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_test0087__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.test0087()" ];
  org_apache_any23_vocab_OGPBook_getInstance__ [ label="org.apache.any23.vocab.OGPBook.getInstance()" ];
  org_apache_any23_extractor_html_RDFMergerTest_test03NoHcardForItem__ [ label="org.apache.any23.extractor.html.RDFMergerTest.test03NoHcardForItem()" ];
  org_apache_any23_rdf_Prefixes_allPrefixes__ [ label="org.apache.any23.rdf.Prefixes.allPrefixes()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectXMLByMeta__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectXMLByMeta()" ];
  addCategories_HTMLDocument__BNode_ [ label="addCategories(HTMLDocument, BNode)" ];
  org_apache_any23_rdf_PopularPrefixes_get__ [ label="org.apache.any23.rdf.PopularPrefixes.get()" ];
  org_apache_any23_writer_URIListWriterFactory_getTripleFormat__ [ label="org.apache.any23.writer.URIListWriterFactory.getTripleFormat()" ];
  org_apache_any23_cli_SimpleRoverTest_litsFiles__ [ label="org.apache.any23.cli.SimpleRoverTest.litsFiles()" ];
  org_apache_any23_writer_TripleFormat_getMimeTypes__ [ label="org.apache.any23.writer.TripleFormat.getMimeTypes()" ];
  org_apache_any23_extractor_html_HTMLDocument_TextField_value__ [ label="org.apache.any23.extractor.html.HTMLDocument.TextField.value()" ];
  org_apache_any23_cli_Tool_run__ [ label="org.apache.any23.cli.Tool.run()" ];
  org_apache_any23_extractor_html_HTMLMetaExtractor_Meta_equals_java_lang_Object_ [ label="org.apache.any23.extractor.html.HTMLMetaExtractor.Meta.equals(java.lang.Object)" ];
  org_apache_any23_extractor_ExampleInputOutput_getExampleIRI__ [ label="org.apache.any23.extractor.ExampleInputOutput.getExampleIRI()" ];
  org_apache_any23_extractor_html_SpeciesExtractor_resetExtractor__ [ label="org.apache.any23.extractor.html.SpeciesExtractor.resetExtractor()" ];
  org_apache_any23_cli_ExtractorsFlowTest_runTestFor396__ [ label="org.apache.any23.cli.ExtractorsFlowTest.runTestFor396()" ];
  org_apache_any23_extractor_html_HResumeExtractor_resetExtractor__ [ label="org.apache.any23.extractor.html.HResumeExtractor.resetExtractor()" ];
  org_apache_any23_writer_CountingTripleHandler_setContentLength_long_ [ label="org.apache.any23.writer.CountingTripleHandler.setContentLength(long)" ];
  org_apache_any23_extractor_ExtractionParameters_setProperty_java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.ExtractionParameters.setProperty(java.lang.String, java.lang.String)" ];
  org_apache_any23_ExtractionReport_getDetectedMimeType__ [ label="org.apache.any23.ExtractionReport.getDetectedMimeType()" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testExample5221__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.testExample5221()" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_testRelWithHref__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.testRelWithHref()" ];
  org_apache_any23_writer_JSONWriter_isAnnotated__ [ label="org.apache.any23.writer.JSONWriter.isAnnotated()" ];
  addGivenName_HTMLDocument__BNode_ [ label="addGivenName(HTMLDocument, BNode)" ];
  findAllByClassName_Node__String_ [ label="findAllByClassName(Node, String)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectTriXByMeta__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectTriXByMeta()" ];
  org_apache_any23_cli_Rover_ArgumentToIRIConverter_convert_java_lang_String_ [ label="org.apache.any23.cli.Rover.ArgumentToIRIConverter.convert(java.lang.String)" ];
  org_apache_any23_validator_RuleContext_getData_java_lang_String_ [ label="org.apache.any23.validator.RuleContext.getData(java.lang.String)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectXHTMLByContent__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectXHTMLByContent()" ];
  org_apache_any23_extractor_ExtractionResultImpl_getPropertyPaths__ [ label="org.apache.any23.extractor.ExtractionResultImpl.getPropertyPaths()" ];
  org_apache_any23_extractor_xpath_QuadTemplate_getSubject__ [ label="org.apache.any23.extractor.xpath.QuadTemplate.getSubject()" ];
  org_apache_any23_extractor_calendar_BaseCalendarExtractor_setStopAtFirstError_boolean_ [ label="org.apache.any23.extractor.calendar.BaseCalendarExtractor.setStopAtFirstError(boolean)" ];
  org_apache_any23_extractor_html_EncodingTest_testEncodingHTML_UTF_8_DeclarationAfterTitle__ [ label="org.apache.any23.extractor.html.EncodingTest.testEncodingHTML_UTF_8_DeclarationAfterTitle()" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_test15__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.test15()" ];
  org_apache_any23_extractor_microdata_MicrodataParserTest_testDeferPropertiesLoopDetection1__ [ label="org.apache.any23.extractor.microdata.MicrodataParserTest.testDeferPropertiesLoopDetection1()" ];
  org_apache_any23_rdf_PrefixesTest_testEmptyPrefixes__ [ label="org.apache.any23.rdf.PrefixesTest.testEmptyPrefixes()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectAtomByContent__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectAtomByContent()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testWSDLByContentAndName__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testWSDLByContentAndName()" ];
  produceRowStatements_IRI__CSVRecord__ExtractionResult_ [ label="produceRowStatements(IRI, CSVRecord, ExtractionResult)" ];
  org_apache_any23_source_DocumentSource_isLocal__ [ label="org.apache.any23.source.DocumentSource.isLocal()" ];
  getTripleWriter_OutputStream__Settings_ [ label="getTripleWriter(OutputStream, Settings)" ];
  org_apache_any23_validator_DefaultValidationReport_getErrors__ [ label="org.apache.any23.validator.DefaultValidationReport.getErrors()" ];
  org_apache_any23_servlet_ServletTest_testGETwithURLEncodingWithFragment__ [ label="org.apache.any23.servlet.ServletTest.testGETwithURLEncodingWithFragment()" ];
  org_apache_any23_extractor_html_microformats2_HResumeExtractorTest_testModelNotEmpty__ [ label="org.apache.any23.extractor.html.microformats2.HResumeExtractorTest.testModelNotEmpty()" ];
  org_apache_any23_validator_EmptyValidationReport_toString__ [ label="org.apache.any23.validator.EmptyValidationReport.toString()" ];
  org_apache_any23_servlet_ServletTest_testContentNegotiationForTurtleAlias__ [ label="org.apache.any23.servlet.ServletTest.testContentNegotiationForTurtleAlias()" ];
  org_apache_any23_extractor_rdfa_ExtractionExceptionTest_testPrintStackTrace__ [ label="org.apache.any23.extractor.rdfa.ExtractionExceptionTest.testPrintStackTrace()" ];
  writeHeaderPropertiesMetadata_CSVRecord__ExtractionResult_ [ label="writeHeaderPropertiesMetadata(CSVRecord, ExtractionResult)" ];
  org_apache_any23_extractor_example_ExampleExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.example.ExampleExtractorFactory.createExtractor()" ];
  org_apache_any23_extractor_yaml_YAMLExtractorTest_simpleTest312__ [ label="org.apache.any23.extractor.yaml.YAMLExtractorTest.simpleTest312()" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_createIRI_java_lang_String__java_lang_String_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.createIRI(java.lang.String, java.lang.String)" ];
  getCompatFactory_WriterFactory_ [ label="getCompatFactory(WriterFactory)" ];
  org_apache_any23_extractor_html_AdrExtractor_resetExtractor__ [ label="org.apache.any23.extractor.html.AdrExtractor.resetExtractor()" ];
  org_apache_any23_extractor_html_XFNExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.XFNExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_extractor_ExtractorFactory_getExampleInput__ [ label="org.apache.any23.extractor.ExtractorFactory.getExampleInput()" ];
  org_apache_any23_extractor_xpath_XPathExtractor_getDescription__ [ label="org.apache.any23.extractor.xpath.XPathExtractor.getDescription()" ];
  org_apache_any23_servlet_ServletTest_tearDown__ [ label="org.apache.any23.servlet.ServletTest.tearDown()" ];
  org_apache_any23_extractor_html_XFNExtractorTest_testDetectPresenceOfXFN__ [ label="org.apache.any23.extractor.html.XFNExtractorTest.testDetectPresenceOfXFN()" ];
  org_apache_any23_extractor_yaml_ElementsProcessorTest_processMap__ [ label="org.apache.any23.extractor.yaml.ElementsProcessorTest.processMap()" ];
  org_apache_any23_cli_MimeDetector_MimeDetectorDocumentSourceConverter_convert_java_lang_String_ [ label="org.apache.any23.cli.MimeDetector.MimeDetectorDocumentSourceConverter.convert(java.lang.String)" ];
  org_apache_any23_extractor_ExampleInputOutput_getExampleOutput__ [ label="org.apache.any23.extractor.ExampleInputOutput.getExampleOutput()" ];
  org_apache_any23_extractor_ExampleInputOutput_getExampleInput__ [ label="org.apache.any23.extractor.ExampleInputOutput.getExampleInput()" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_test06__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.test06()" ];
  org_apache_any23_source_StringDocumentSource_isLocal__ [ label="org.apache.any23.source.StringDocumentSource.isLocal()" ];
  org_apache_any23_writer_BenchmarkTripleHandler_setContentLength_long_ [ label="org.apache.any23.writer.BenchmarkTripleHandler.setContentLength(long)" ];
  org_apache_any23_plugin_crawler_SiteCrawler_setPolitenessDelay_int_ [ label="org.apache.any23.plugin.crawler.SiteCrawler.setPolitenessDelay(int)" ];
  org_apache_any23_vocab_XFN_getExtendedProperty_java_lang_String_ [ label="org.apache.any23.vocab.XFN.getExtendedProperty(java.lang.String)" ];
  addClass_Resource_ [ label="addClass(Resource)" ];
  org_apache_any23_extractor_html_microformats2_HItemExtractor_getDescription__ [ label="org.apache.any23.extractor.html.microformats2.HItemExtractor.getDescription()" ];
  org_apache_any23_extractor_html_LicenseExtractor_getDescription__ [ label="org.apache.any23.extractor.html.LicenseExtractor.getDescription()" ];
  getSheetIRI_IRI__Sheet_ [ label="getSheetIRI(IRI, Sheet)" ];
  org_apache_any23_extractor_ExtractorGroup_iterator__ [ label="org.apache.any23.extractor.ExtractorGroup.iterator()" ];
  org_apache_any23_rdf_Prefixes_add_java_lang_String__java_lang_String_ [ label="org.apache.any23.rdf.Prefixes.add(java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_html_TagSoupParsingConfiguration_JsoupConfig_stripCDATA_java_lang_String_ [ label="org.apache.any23.extractor.html.TagSoupParsingConfiguration.JsoupConfig.stripCDATA(java.lang.String)" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testExampleSchemaOrg2__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.testExampleSchemaOrg2()" ];
  org_apache_any23_cli_ExtractorDocumentation_setOut_java_io_PrintStream_ [ label="org.apache.any23.cli.ExtractorDocumentation.setOut(java.io.PrintStream)" ];
  removeListener_CrawlerListener_ [ label="removeListener(CrawlerListener)" ];
  org_apache_any23_vocab_XHTML_getInstance__ [ label="org.apache.any23.vocab.XHTML.getInstance()" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testMicrodataBasic__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.testMicrodataBasic()" ];
  org_apache_any23_vocab_CSV_getInstance__ [ label="org.apache.any23.vocab.CSV.getInstance()" ];
  org_apache_any23_extractor_html_HListingExtractor_resetExtractor__ [ label="org.apache.any23.extractor.html.HListingExtractor.resetExtractor()" ];
  org_apache_any23_cli_ExtractorDocumentationTest_testExampleInput__ [ label="org.apache.any23.cli.ExtractorDocumentationTest.testExampleInput()" ];
  addRole_HTMLDocument__BNode_ [ label="addRole(HTMLDocument, BNode)" ];
  org_apache_any23_rdf_PrefixesTest_testAsMapEmpty__ [ label="org.apache.any23.rdf.PrefixesTest.testAsMapEmpty()" ];
  addExperience_Resource__HTMLDocument_ [ label="addExperience(Resource, HTMLDocument)" ];
  org_apache_any23_extractor_rdfa_RDFa11ParserTest_testExtractPrefixSections__ [ label="org.apache.any23.extractor.rdfa.RDFa11ParserTest.testExtractPrefixSections()" ];
  org_apache_any23_extractor_calendar_BaseCalendarExtractorTest_TestRDFHandler_endRDF__ [ label="org.apache.any23.extractor.calendar.BaseCalendarExtractorTest.TestRDFHandler.endRDF()" ];
  org_apache_any23_extractor_html_GeoExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.GeoExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_extractor_html_microformats2_HEntryExtractor_resetExtractor__ [ label="org.apache.any23.extractor.html.microformats2.HEntryExtractor.resetExtractor()" ];
  org_apache_any23_extractor_calendar_BaseCalendarExtractor_str_java_lang_Double_ [ label="org.apache.any23.extractor.calendar.BaseCalendarExtractor.str(java.lang.Double)" ];
  org_apache_any23_extractor_html_TagSoupParsingConfiguration_name__ [ label="org.apache.any23.extractor.html.TagSoupParsingConfiguration.name()" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_testBBCNewsScotland__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.testBBCNewsScotland()" ];
  org_apache_any23_extractor_ExtractorRegistry_getExtractorGroup__ [ label="org.apache.any23.extractor.ExtractorRegistry.getExtractorGroup()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectTextNQuadsByMeta__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectTextNQuadsByMeta()" ];
  org_apache_any23_extractor_xpath_XPathExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.xpath.XPathExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_plugin_crawler_SiteCrawler_setNumOfCrawlers_int_ [ label="org.apache.any23.plugin.crawler.SiteCrawler.setNumOfCrawlers(int)" ];
  getCellIRI_IRI__Cell_ [ label="getCellIRI(IRI, Cell)" ];
  org_apache_any23_extractor_rdfa_JsoupScanner_orEmpty_java_lang_String_ [ label="org.apache.any23.extractor.rdfa.JsoupScanner.orEmpty(java.lang.String)" ];
  org_apache_any23_extractor_IssueReport_Issue_toString__ [ label="org.apache.any23.extractor.IssueReport.Issue.toString()" ];
  org_apache_any23_writer_WriterFactoryRegistry_getMimeTypes__ [ label="org.apache.any23.writer.WriterFactoryRegistry.getMimeTypes()" ];
  org_apache_any23_util_StringUtils_isSuffix_java_lang_String__java_lang_String_ [ label="org.apache.any23.util.StringUtils.isSuffix(java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_ExtractionResult_writeNamespace_java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.ExtractionResult.writeNamespace(java.lang.String, java.lang.String)" ];
  org_apache_any23_http_HTTPClient_getContentType__ [ label="org.apache.any23.http.HTTPClient.getContentType()" ];
  org_apache_any23_configuration_DefaultConfiguration_singleton__ [ label="org.apache.any23.configuration.DefaultConfiguration.singleton()" ];
  findObjectAsResource_Resource__IRI_ [ label="findObjectAsResource(Resource, IRI)" ];
  setCurrentExtractionResult_ExtractionResult_ [ label="setCurrentExtractionResult(ExtractionResult)" ];
  org_apache_any23_writer_TripleFormat_toString__ [ label="org.apache.any23.writer.TripleFormat.toString()" ];
  org_apache_any23_Any23Test_testExtractionParametersWithNestingDisabled__ [ label="org.apache.any23.Any23Test.testExtractionParametersWithNestingDisabled()" ];
  assertContains_IRI__String_ [ label="assertContains(IRI, String)" ];
  org_apache_any23_extractor_html_microformats2_HProductExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.microformats2.HProductExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_testObjectResourceConversion__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.testObjectResourceConversion()" ];
  org_apache_any23_vocab_HEvent_getInstance__ [ label="org.apache.any23.vocab.HEvent.getInstance()" ];
  extractCalendar_Node_ [ label="extractCalendar(Node)" ];
  org_apache_any23_rdf_PrefixesTest_testCanExpandOnlyAcceptsCURIEs__ [ label="org.apache.any23.rdf.PrefixesTest.testCanExpandOnlyAcceptsCURIEs()" ];
  org_apache_any23_cli_MicrodataParserTest_testRunOnHTTPResource__ [ label="org.apache.any23.cli.MicrodataParserTest.testRunOnHTTPResource()" ];
  visit_Page_ [ label="visit(Page)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testHonorificAdditionalSingle__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testHonorificAdditionalSingle()" ];
  org_apache_any23_rdf_RDFUtils_literal_boolean_ [ label="org.apache.any23.rdf.RDFUtils.literal(boolean)" ];
  org_apache_any23_extractor_html_LicenseExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.LicenseExtractorTest.getExtractorFactory()" ];
  org_apache_any23_extractor_csv_CSVExtractorTest_testExtractionEmptyValue__ [ label="org.apache.any23.extractor.csv.CSVExtractorTest.testExtractionEmptyValue()" ];
  run_ExtractionParameters__ExtractionContext__InputStream__ExtractionResult_ [ label="run(ExtractionParameters, ExtractionContext, InputStream, ExtractionResult)" ];
  org_apache_any23_extractor_calendar_BaseCalendarExtractor_toString_java_lang_Throwable_ [ label="org.apache.any23.extractor.calendar.BaseCalendarExtractor.toString(java.lang.Throwable)" ];
  org_apache_any23_extractor_rdf_BaseRDFExtractor_toString_java_lang_Throwable_ [ label="org.apache.any23.extractor.rdf.BaseRDFExtractor.toString(java.lang.Throwable)" ];
  org_apache_any23_extractor_IssueReport_Issue_getMessage__ [ label="org.apache.any23.extractor.IssueReport.Issue.getMessage()" ];
  org_apache_any23_extractor_html_HResumeExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.HResumeExtractorTest.getExtractorFactory()" ];
  org_apache_any23_source_HTTPDocumentSource_getDocumentIRI__ [ label="org.apache.any23.source.HTTPDocumentSource.getDocumentIRI()" ];
  org_apache_any23_extractor_yaml_YAMLExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.yaml.YAMLExtractorFactory.createExtractor()" ];
  org_apache_any23_extractor_microdata_ItemPropValue_getAsInteger__ [ label="org.apache.any23.extractor.microdata.ItemPropValue.getAsInteger()" ];
  org_apache_any23_extractor_html_microformats2_HCardExtractor_getBaseClassName__ [ label="org.apache.any23.extractor.html.microformats2.HCardExtractor.getBaseClassName()" ];
  getRowIRI_IRI__Row_ [ label="getRowIRI(IRI, Row)" ];
  org_apache_any23_extractor_html_HResumeExtractor_getDescription__ [ label="org.apache.any23.extractor.html.HResumeExtractor.getDescription()" ];
  org_apache_any23_http_DefaultHTTPClient_getActualDocumentIRI__ [ label="org.apache.any23.http.DefaultHTTPClient.getActualDocumentIRI()" ];
  org_apache_any23_extractor_calendar_ICalExtractorTest_testRFC5545example5__ [ label="org.apache.any23.extractor.calendar.ICalExtractorTest.testRFC5545example5()" ];
  org_apache_any23_util_DiscoveryUtils_findClasses_java_io_File__java_lang_String_ [ label="org.apache.any23.util.DiscoveryUtils.findClasses(java.io.File, java.lang.String)" ];
  serializeVocabularies_RDFFormat__int_ [ label="serializeVocabularies(RDFFormat, int)" ];
  getNodeContent_Node_ [ label="getNodeContent(Node)" ];
  org_apache_any23_http_DefaultHTTPClientConfiguration_getMaxConnections__ [ label="org.apache.any23.http.DefaultHTTPClientConfiguration.getMaxConnections()" ];
  org_apache_any23_extractor_html_HCardExtractor_getBaseClassName__ [ label="org.apache.any23.extractor.html.HCardExtractor.getBaseClassName()" ];
  org_apache_any23_plugin_Any23PluginManager_Anonymous_b8fd663b_889a_47c2_b652_6fb22f8472f1_accept_java_io_File__java_lang_String_ [ label="org.apache.any23.plugin.Any23PluginManager.Anonymous-b8fd663b-889a-47c2-b652-6fb22f8472f1.accept(java.io.File, java.lang.String)" ];
  org_apache_any23_servlet_ServletTest_setUp__ [ label="org.apache.any23.servlet.ServletTest.setUp()" ];
  expectTriple_Resource__IRI__Value__IRI__String__IRI__String_ [ label="expectTriple(Resource, IRI, Value, IRI, String, IRI, String)" ];
  parseRDF_RDFFormat__InputStream__String_ [ label="parseRDF(RDFFormat, InputStream, String)" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testBadTypes__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.testBadTypes()" ];
  org_apache_any23_validator_DefaultValidatorTest_testRegisterRule__ [ label="org.apache.any23.validator.DefaultValidatorTest.testRegisterRule()" ];
  org_apache_any23_mime_purifier_WhiteSpacesPurifierTest_tearDown__ [ label="org.apache.any23.mime.purifier.WhiteSpacesPurifierTest.tearDown()" ];
  org_apache_any23_extractor_html_MicroformatExtractor_includes_java_lang_Class___extends_org_apache_any23_extractor_html_MicroformatExtractor___java_lang_Class___extends_org_apache_any23_extractor_html_MicroformatExtractor__ [ label="org.apache.any23.extractor.html.MicroformatExtractor.includes(java.lang.Class<? extends org.apache.any23.extractor.html.MicroformatExtractor>, java.lang.Class<? extends org.apache.any23.extractor.html.MicroformatExtractor>)" ];
  org_apache_any23_extractor_html_LicenseExtractorTest_testOnlyCc__ [ label="org.apache.any23.extractor.html.LicenseExtractorTest.testOnlyCc()" ];
  assertStatementsSize_IRI__String__int_ [ label="assertStatementsSize(IRI, String, int)" ];
  addContact_HTMLDocument__Resource_ [ label="addContact(HTMLDocument, Resource)" ];
  readTextField_Node_ [ label="readTextField(Node)" ];
  head_Node__int_ [ label="head(Node, int)" ];
  assertStatementsSize_IRI__Value__int_ [ label="assertStatementsSize(IRI, Value, int)" ];
  addYield_HTMLDocument__BNode_ [ label="addYield(HTMLDocument, BNode)" ];
  org_apache_any23_extractor_yaml_YAMLExtractorTest_floatsTest__ [ label="org.apache.any23.extractor.yaml.YAMLExtractorTest.floatsTest()" ];
  org_apache_any23_vocab_OGPMusic_createProperty_java_lang_String_ [ label="org.apache.any23.vocab.OGPMusic.createProperty(java.lang.String)" ];
  addTextProps_HTMLDocument__Resource_ [ label="addTextProps(HTMLDocument, Resource)" ];
  depthFirstChildren_NodeList__ExtractionResult_ [ label="depthFirstChildren(NodeList, ExtractionResult)" ];
  createHTTPDocumentSource_WebResponder__String__boolean_ [ label="createHTTPDocumentSource(WebResponder, String, boolean)" ];
  org_apache_any23_vocab_VocabularyTest_tearDown__ [ label="org.apache.any23.vocab.VocabularyTest.tearDown()" ];
  org_apache_any23_vocab_HResume_getInstance__ [ label="org.apache.any23.vocab.HResume.getInstance()" ];
  org_apache_any23_extractor_html_EmbeddedJSONLDExtractorTest_testJSONLDCommentStripping__ [ label="org.apache.any23.extractor.html.EmbeddedJSONLDExtractorTest.testJSONLDCommentStripping()" ];
  org_apache_any23_validator_DefaultValidationReport_getIssues__ [ label="org.apache.any23.validator.DefaultValidationReport.getIssues()" ];
  org_apache_any23_extractor_rdf_NQuadsExtractor_getDescription__ [ label="org.apache.any23.extractor.rdf.NQuadsExtractor.getDescription()" ];
  setCrawlData_String__Pattern__List_ [ label="setCrawlData(String, Pattern, List)" ];
  org_apache_any23_cli_PluginVerifierTest_testRun__ [ label="org.apache.any23.cli.PluginVerifierTest.testRun()" ];
  org_apache_any23_rdf_Prefixes_createSubset_java_lang_String____ [ label="org.apache.any23.rdf.Prefixes.createSubset(java.lang.String...)" ];
  org_apache_any23_validator_ValidationReport_FixError_getOrigin__ [ label="org.apache.any23.validator.ValidationReport.FixError.getOrigin()" ];
  org_apache_any23_source_StringDocumentSource_getDocumentIRI__ [ label="org.apache.any23.source.StringDocumentSource.getDocumentIRI()" ];
  org_apache_any23_vocab_HProduct_getInstance__ [ label="org.apache.any23.vocab.HProduct.getInstance()" ];
  configureExtractors_ExtractorGroup_ [ label="configureExtractors(ExtractorGroup)" ];
  org_apache_any23_filter_ExtractionContextBlocker_ValvedTriplePipe_close__ [ label="org.apache.any23.filter.ExtractionContextBlocker.ValvedTriplePipe.close()" ];
  addAttendees_HTMLDocument__Resource_ [ label="addAttendees(HTMLDocument, Resource)" ];
  addUid_HTMLDocument__Resource_ [ label="addUid(HTMLDocument, Resource)" ];
  org_apache_any23_extractor_rdfa_AbstractRDFaExtractorTestCase_testIncompleteTripleManagement__ [ label="org.apache.any23.extractor.rdfa.AbstractRDFaExtractorTestCase.testIncompleteTripleManagement()" ];
  run_ExtractionParameters__ExtractionContext__Input__ExtractionResult_ [ label="run(ExtractionParameters, ExtractionContext, Input, ExtractionResult)" ];
  org_apache_any23_rdf_Prefixes_create1_java_lang_String__java_lang_String_ [ label="org.apache.any23.rdf.Prefixes.create1(java.lang.String, java.lang.String)" ];
  addItemName_HTMLDocument__Resource_ [ label="addItemName(HTMLDocument, Resource)" ];
  org_apache_any23_validator_DefaultDOMDocument_getNodes_java_lang_String_ [ label="org.apache.any23.validator.DefaultDOMDocument.getNodes(java.lang.String)" ];
  org_apache_any23_extractor_SingleDocumentExtractionTest_testNestedVCardAdr__ [ label="org.apache.any23.extractor.SingleDocumentExtractionTest.testNestedVCardAdr()" ];
  org_apache_any23_extractor_html_GeoExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.GeoExtractorFactory.createExtractor()" ];
  org_apache_any23_plugin_officescraper_ExcelExtractorFactory_createExtractor__ [ label="org.apache.any23.plugin.officescraper.ExcelExtractorFactory.createExtractor()" ];
  evaluateVariantAlias_MediaRangeSpec__MediaRangeSpec_ [ label="evaluateVariantAlias(MediaRangeSpec, MediaRangeSpec)" ];
  org_apache_any23_extractor_IssueReport_Issue_getRow__ [ label="org.apache.any23.extractor.IssueReport.Issue.getRow()" ];
  org_apache_any23_validator_DefaultValidator_getAllRules__ [ label="org.apache.any23.validator.DefaultValidator.getAllRules()" ];
  org_apache_any23_plugin_officescraper_XSSFWorkbookTest_verifyContent_int__int__int__java_lang_String_ [ label="org.apache.any23.plugin.officescraper.XSSFWorkbookTest.verifyContent(int, int, int, java.lang.String)" ];
  getWriter_OutputStream__String_ [ label="getWriter(OutputStream, String)" ];
  getXPathForNode_Node_ [ label="getXPathForNode(Node)" ];
  addFN_HTMLDocument__BNode_ [ label="addFN(HTMLDocument, BNode)" ];
  org_apache_any23_extractor_ExtractionParameters_equals_java_lang_Object_ [ label="org.apache.any23.extractor.ExtractionParameters.equals(java.lang.Object)" ];
  org_apache_any23_extractor_html_GeoExtractor_resetExtractor__ [ label="org.apache.any23.extractor.html.GeoExtractor.resetExtractor()" ];
  org_apache_any23_plugin_Any23PluginManager_getPlugins_java_lang_Class_T__ [ label="org.apache.any23.plugin.Any23PluginManager.getPlugins(java.lang.Class<T>)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testCategories__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testCategories()" ];
  org_apache_any23_vocab_SINDICE_createProperty_java_lang_String_ [ label="org.apache.any23.vocab.SINDICE.createProperty(java.lang.String)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectApplicationXMLByMeta__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectApplicationXMLByMeta()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testBirthDayDateTime__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testBirthDayDateTime()" ];
  readAttribute_Node__String_ [ label="readAttribute(Node, String)" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_createLiteral_boolean_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.createLiteral(boolean)" ];
  org_apache_any23_extractor_html_HTMLMetaExtractorTest_testNoMeta__ [ label="org.apache.any23.extractor.html.HTMLMetaExtractorTest.testNoMeta()" ];
  org_apache_any23_rdf_Prefixes_add_org_apache_any23_rdf_Prefixes_ [ label="org.apache.any23.rdf.Prefixes.add(org.apache.any23.rdf.Prefixes)" ];
  org_apache_any23_rdf_Prefixes_addVolatile_java_lang_String__java_lang_String_ [ label="org.apache.any23.rdf.Prefixes.addVolatile(java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_microdata_Item_hashCode__ [ label="org.apache.any23.extractor.microdata.Item.hashCode()" ];
  org_apache_any23_rdf_Prefixes_isEmpty__ [ label="org.apache.any23.rdf.Prefixes.isEmpty()" ];
  org_apache_any23_cli_Rover_setOut_java_io_PrintStream_ [ label="org.apache.any23.cli.Rover.setOut(java.io.PrintStream)" ];
  assertCompareModels_Model__File_ [ label="assertCompareModels(Model, File)" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_testFullHCalendarClass__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.testFullHCalendarClass()" ];
  extractJSONLDScript_Document__String__ExtractionParameters__ExtractionContext__ExtractionResult_ [ label="extractJSONLDScript(Document, String, ExtractionParameters, ExtractionContext, ExtractionResult)" ];
  org_apache_any23_extractor_ExtractionResultImpl_close__ [ label="org.apache.any23.extractor.ExtractionResultImpl.close()" ];
  org_apache_any23_extractor_html_HCalendarExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.HCalendarExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_writer_RDFWriterTripleHandler_writeNamespace_java_lang_String__java_lang_String_ [ label="org.apache.any23.writer.RDFWriterTripleHandler.writeNamespace(java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_html_AbstractExtractorTestCase_setUp__ [ label="org.apache.any23.extractor.html.AbstractExtractorTestCase.setUp()" ];
  org_apache_any23_extractor_rdf_JSONLDExtractorTest_testExtractFromJSONLDDocument__ [ label="org.apache.any23.extractor.rdf.JSONLDExtractorTest.testExtractFromJSONLDDocument()" ];
  org_apache_any23_extractor_MockTripleHandler_expectClose__ [ label="org.apache.any23.extractor.MockTripleHandler.expectClose()" ];
  org_apache_any23_rdf_PrefixesTest_testRemovePrefixResultsInEmptyMapping__ [ label="org.apache.any23.rdf.PrefixesTest.testRemovePrefixResultsInEmptyMapping()" ];
  org_apache_any23_cli_ToolRunnerTest_testGetToolsInClasspath__ [ label="org.apache.any23.cli.ToolRunnerTest.testGetToolsInClasspath()" ];
  org_apache_any23_util_ReaderInputStream_markSupported__ [ label="org.apache.any23.util.ReaderInputStream.markSupported()" ];
  org_apache_any23_extractor_html_LicenseExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.LicenseExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_extractor_html_TitleExtractorTest_testNoPageTitle__ [ label="org.apache.any23.extractor.html.TitleExtractorTest.testNoPageTitle()" ];
  org_apache_any23_validator_DOMDocument_getDocumentIRI__ [ label="org.apache.any23.validator.DOMDocument.getDocumentIRI()" ];
  addBest_HTMLDocument__Resource_ [ label="addBest(HTMLDocument, Resource)" ];
  org_apache_any23_configuration_Setting_equals_java_lang_Object_ [ label="org.apache.any23.configuration.Setting.equals(java.lang.Object)" ];
  org_apache_any23_extractor_html_HTMLDocument_getText__ [ label="org.apache.any23.extractor.html.HTMLDocument.getText()" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_testOpenGraphStructuredProperties__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.testOpenGraphStructuredProperties()" ];
  org_apache_any23_extractor_ExtractionParameters_getFlag_java_lang_String_ [ label="org.apache.any23.extractor.ExtractionParameters.getFlag(java.lang.String)" ];
  writeQuad_RDFDataset_Node__RDFDataset_Node__Value__String_ [ label="writeQuad(RDFDataset.Node, RDFDataset.Node, Value, String)" ];
  org_apache_any23_extractor_rdf_RDFParserFactory_ExtendedTurtleParser_parse_java_io_Reader__java_lang_String_ [ label="org.apache.any23.extractor.rdf.RDFParserFactory.ExtendedTurtleParser.parse(java.io.Reader, java.lang.String)" ];
  org_apache_any23_extractor_rdf_RDFParserFactory_InternalParseErrorListener_error_java_lang_String__long__long_ [ label="org.apache.any23.extractor.rdf.RDFParserFactory.InternalParseErrorListener.error(java.lang.String, long, long)" ];
  org_apache_any23_writer_TripleFormat_checkExtensions_java_util_List_java_lang_String__ [ label="org.apache.any23.writer.TripleFormat.checkExtensions(java.util.List<java.lang.String>)" ];
  org_apache_any23_writer_TripleFormat_extensionErr_java_lang_String_ [ label="org.apache.any23.writer.TripleFormat.extensionErr(java.lang.String)" ];
  addTime_HTMLDocument__Resource_ [ label="addTime(HTMLDocument, Resource)" ];
  writeValue_BNode__IRI__JsonValue__String__IRI__TimeZone__ExtractionResult_ [ label="writeValue(BNode, IRI, JsonValue, String, IRI, TimeZone, ExtractionResult)" ];
  org_apache_any23_servlet_ServletTest_testPOSTwithoutContentType__ [ label="org.apache.any23.servlet.ServletTest.testPOSTwithoutContentType()" ];
  hasNoneOf_TextStatistics__int___ [ label="hasNoneOf(TextStatistics, int[])" ];
  org_apache_any23_configuration_ModifiableConfiguration_setProperty_java_lang_String__java_lang_String_ [ label="org.apache.any23.configuration.ModifiableConfiguration.setProperty(java.lang.String, java.lang.String)" ];
  popContext_Node_ [ label="popContext(Node)" ];
  org_apache_any23_configuration_Setting_getValueType__ [ label="org.apache.any23.configuration.Setting.getValueType()" ];
  org_apache_any23_writer_TriXWriterFactory_getTripleFormat__ [ label="org.apache.any23.writer.TriXWriterFactory.getTripleFormat()" ];
  org_apache_any23_configuration_DefaultConfiguration_getProperty_java_lang_String__java_lang_String_ [ label="org.apache.any23.configuration.DefaultConfiguration.getProperty(java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_html_microformats2_HEntryExtractorTest_testModelNotEmpty__ [ label="org.apache.any23.extractor.html.microformats2.HEntryExtractorTest.testModelNotEmpty()" ];
  makeIRI_String__IRI_ [ label="makeIRI(String, IRI)" ];
  org_apache_any23_extractor_html_RDFMergerTest_test02RatedTags__ [ label="org.apache.any23.extractor.html.RDFMergerTest.test02RatedTags()" ];
  org_apache_any23_rdf_PrefixesTest_testCreateSubsetWithUndefinedPrefixThrowsException__ [ label="org.apache.any23.rdf.PrefixesTest.testCreateSubsetWithUndefinedPrefixThrowsException()" ];
  assertContains_IRI__Resource_ [ label="assertContains(IRI, Resource)" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_test01__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.test01()" ];
  org_apache_any23_extractor_html_HListingExtractor_getBaseClassName__ [ label="org.apache.any23.extractor.html.HListingExtractor.getBaseClassName()" ];
  org_apache_any23_extractor_html_DomUtilsTest_testFindAllByTagAndClassName__ [ label="org.apache.any23.extractor.html.DomUtilsTest.testFindAllByTagAndClassName()" ];
  org_apache_any23_configuration_Setting_lookupValueType_java_lang_Class_____java_lang_String_ [ label="org.apache.any23.configuration.Setting.lookupValueType(java.lang.Class<?>, java.lang.String)" ];
  org_apache_any23_cli_ToolRunnerTest_testGetHelp__ [ label="org.apache.any23.cli.ToolRunnerTest.testGetHelp()" ];
  getIdentifier__ [ label="getIdentifier()" ];
  processScriptNodes_IRI__ExtractionContext__ExtractionResult__List_ [ label="processScriptNodes(IRI, ExtractionContext, ExtractionResult, List)" ];
  org_apache_any23_extractor_html_HCardName_getOrganization__ [ label="org.apache.any23.extractor.html.HCardName.getOrganization()" ];
  org_apache_any23_extractor_SingleDocumentExtraction_subPath_java_lang_String____java_lang_String___ [ label="org.apache.any23.extractor.SingleDocumentExtraction.subPath(java.lang.String[], java.lang.String[])" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_testIssue326__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.testIssue326()" ];
  printResponse_ReportingTripleHandler__ExtractionReport__byte____PrintStream_ [ label="printResponse(ReportingTripleHandler, ExtractionReport, byte[], PrintStream)" ];
  org_apache_any23_extractor_html_MicroformatExtractor_fixLink_java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.html.MicroformatExtractor.fixLink(java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_SingleDocumentExtraction_setParserEncoding_java_lang_String_ [ label="org.apache.any23.extractor.SingleDocumentExtraction.setParserEncoding(java.lang.String)" ];
  org_apache_any23_extractor_rdfa_RDFa11ParserTest_testIsCURIEBNodePositive__ [ label="org.apache.any23.extractor.rdfa.RDFa11ParserTest.testIsCURIEBNodePositive()" ];
  org_apache_any23_SesameTest_testCreateBNodeWithNullArgumentWorks__ [ label="org.apache.any23.SesameTest.testCreateBNodeWithNullArgumentWorks()" ];
  guessMIMEType_String__InputStream__MIMEType_ [ label="guessMIMEType(String, InputStream, MIMEType)" ];
  org_apache_any23_mime_TikaMIMETypeDetector_checkNQuadsFormat_java_io_InputStream_ [ label="org.apache.any23.mime.TikaMIMETypeDetector.checkNQuadsFormat(java.io.InputStream)" ];
  org_apache_any23_extractor_rdfa_RDFa11Extractor_getDescription__ [ label="org.apache.any23.extractor.rdfa.RDFa11Extractor.getDescription()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectHTMLByContent__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectHTMLByContent()" ];
  org_apache_any23_extractor_html_HTMLMetaExtractor_Meta_getLang__ [ label="org.apache.any23.extractor.html.HTMLMetaExtractor.Meta.getLang()" ];
  updateIRIMapping_Node_ [ label="updateIRIMapping(Node)" ];
  org_apache_any23_writer_RepositoryWriter_setContentLength_long_ [ label="org.apache.any23.writer.RepositoryWriter.setContentLength(long)" ];
  org_apache_any23_extractor_calendar_XCalExtractorTest_testRFC6321example2__ [ label="org.apache.any23.extractor.calendar.XCalExtractorTest.testRFC6321example2()" ];
  org_apache_any23_extractor_rdf_RDFParserFactory_getInstance__ [ label="org.apache.any23.extractor.rdf.RDFParserFactory.getInstance()" ];
  org_apache_any23_servlet_conneg_MediaRangeSpec_toString__ [ label="org.apache.any23.servlet.conneg.MediaRangeSpec.toString()" ];
  org_apache_any23_vocab_LKIFCoreProcess_getInstance__ [ label="org.apache.any23.vocab.LKIFCoreProcess.getInstance()" ];
  find_Node__String_ [ label="find(Node, String)" ];
  addListener_CrawlerListener_ [ label="addListener(CrawlerListener)" ];
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_VariantSpec_getMediaType__ [ label="org.apache.any23.servlet.conneg.ContentTypeNegotiator.VariantSpec.getMediaType()" ];
  org_apache_any23_extractor_html_microformats2_HRecipeExtractor_resetExtractor__ [ label="org.apache.any23.extractor.html.microformats2.HRecipeExtractor.resetExtractor()" ];
  org_apache_any23_encoding_TikaEncodingDetectorTest_testUTF8AfterTitle__ [ label="org.apache.any23.encoding.TikaEncodingDetectorTest.testUTF8AfterTitle()" ];
  org_apache_any23_configuration_SettingsTest_testCustomValueChecking__ [ label="org.apache.any23.configuration.SettingsTest.testCustomValueChecking()" ];
  org_apache_any23_servlet_conneg_MediaRangeSpec_getType__ [ label="org.apache.any23.servlet.conneg.MediaRangeSpec.getType()" ];
  org_apache_any23_extractor_calendar_ICalExtractorTest_testRFC5545example1__ [ label="org.apache.any23.extractor.calendar.ICalExtractorTest.testRFC5545example1()" ];
  org_apache_any23_extractor_html_HTMLDocument_extractRelTagNodes__ [ label="org.apache.any23.extractor.html.HTMLDocument.extractRelTagNodes()" ];
  org_apache_any23_extractor_html_HReviewAggregateExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.HReviewAggregateExtractorFactory.createExtractor()" ];
  addImpp_HTMLDocument__BNode_ [ label="addImpp(HTMLDocument, BNode)" ];
  org_apache_any23_extractor_html_EmbeddedJSONLDExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.EmbeddedJSONLDExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_extractor_yaml_YAMLExtractor_setStopAtFirstError_boolean_ [ label="org.apache.any23.extractor.yaml.YAMLExtractor.setStopAtFirstError(boolean)" ];
  org_apache_any23_http_DefaultHTTPClient_getConnectionTimeout__ [ label="org.apache.any23.http.DefaultHTTPClient.getConnectionTimeout()" ];
  org_apache_any23_extractor_rdfa_RDFa11ParserTest_testIsCURIENegative__ [ label="org.apache.any23.extractor.rdfa.RDFa11ParserTest.testIsCURIENegative()" ];
  org_apache_any23_extractor_microdata_ItemPropValue_getType__ [ label="org.apache.any23.extractor.microdata.ItemPropValue.getType()" ];
  addEnd_HTMLDocument__BNode_ [ label="addEnd(HTMLDocument, BNode)" ];
  org_apache_any23_validator_rule_MetaNameMisuseRule_getHRName__ [ label="org.apache.any23.validator.rule.MetaNameMisuseRule.getHRName()" ];
  org_apache_any23_rdf_PrefixesTest_testCanContractDeclaredNamespace__ [ label="org.apache.any23.rdf.PrefixesTest.testCanContractDeclaredNamespace()" ];
  org_apache_any23_extractor_rdfa_RDFaExtractorTest_testRDFa11CURIEs__ [ label="org.apache.any23.extractor.rdfa.RDFaExtractorTest.testRDFa11CURIEs()" ];
  setIssueReport_IssueReport_ [ label="setIssueReport(IssueReport)" ];
  org_apache_any23_rdf_PopularPrefixes_createSubset_java_lang_String____ [ label="org.apache.any23.rdf.PopularPrefixes.createSubset(java.lang.String...)" ];
  org_apache_any23_servlet_conneg_MediaRangeSpec_getQuality__ [ label="org.apache.any23.servlet.conneg.MediaRangeSpec.getQuality()" ];
  gerCurrentObjectLiteral_Node_ [ label="gerCurrentObjectLiteral(Node)" ];
  addItem_Resource_ [ label="addItem(Resource)" ];
  org_apache_any23_extractor_yaml_YAMLExtractor_getDescription__ [ label="org.apache.any23.extractor.yaml.YAMLExtractor.getDescription()" ];
  getRDFa11Parser_boolean__boolean__ExtractionContext__ExtractionResult_ [ label="getRDFa11Parser(boolean, boolean, ExtractionContext, ExtractionResult)" ];
  org_apache_any23_configuration_DefaultConfigurationTest_testSingletonAccessor__ [ label="org.apache.any23.configuration.DefaultConfigurationTest.testSingletonAccessor()" ];
  org_apache_any23_writer_TripleFormat_getCapabilities__ [ label="org.apache.any23.writer.TripleFormat.getCapabilities()" ];
  org_apache_any23_util_FileUtils_readFileLines_java_io_File_ [ label="org.apache.any23.util.FileUtils.readFileLines(java.io.File)" ];
  org_apache_any23_extractor_SimpleExtractorFactory_getExtractorName__ [ label="org.apache.any23.extractor.SimpleExtractorFactory.getExtractorName()" ];
  org_apache_any23_writer_DecoratingWriterFactory_getSupportedSettings__ [ label="org.apache.any23.writer.DecoratingWriterFactory.getSupportedSettings()" ];
  org_apache_any23_plugin_officescraper_ExcelExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.plugin.officescraper.ExcelExtractorFactory.getDescriptionInstance()" ];
  newFixInstance_Class_ [ label="newFixInstance(Class)" ];
  org_apache_any23_writer_TriXWriterFactory_getIdentifier__ [ label="org.apache.any23.writer.TriXWriterFactory.getIdentifier()" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testSingleAction__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testSingleAction()" ];
  extractComponent_Node__Resource__String_ [ label="extractComponent(Node, Resource, String)" ];
  addDuration_HTMLDocument__HTMLDocument_TextField_ [ label="addDuration(HTMLDocument, HTMLDocument.TextField)" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_testOpenGraphAlternateObjectTypes__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.testOpenGraphAlternateObjectTypes()" ];
  org_apache_any23_extractor_rdfa_SemarglSink_startStream__ [ label="org.apache.any23.extractor.rdfa.SemarglSink.startStream()" ];
  org_apache_any23_validator_ValidationReport_Issue_getLevel__ [ label="org.apache.any23.validator.ValidationReport.Issue.getLevel()" ];
  org_apache_any23_cli_Crawler_run__ [ label="org.apache.any23.cli.Crawler.run()" ];
  org_apache_any23_extractor_microdata_ItemPropValue_Type_checkClass_java_lang_Object_ [ label="org.apache.any23.extractor.microdata.ItemPropValue.Type.checkClass(java.lang.Object)" ];
  org_apache_any23_rdf_RDFUtils_toXSDDateTime_java_util_Date_ [ label="org.apache.any23.rdf.RDFUtils.toXSDDateTime(java.util.Date)" ];
  org_apache_any23_ExtractionReport_getEncoding__ [ label="org.apache.any23.ExtractionReport.getEncoding()" ];
  org_apache_any23_extractor_html_SpeciesExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.SpeciesExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_configuration_SettingsTest_testGetNullSetting__ [ label="org.apache.any23.configuration.SettingsTest.testGetNullSetting()" ];
  getJSONLDParser_boolean__boolean__ExtractionContext__ExtractionResult_ [ label="getJSONLDParser(boolean, boolean, ExtractionContext, ExtractionResult)" ];
  org_apache_any23_extractor_rdfa_RDFa11ParserTest_testIsRelativePositive1__ [ label="org.apache.any23.extractor.rdfa.RDFa11ParserTest.testIsRelativePositive1()" ];
  expectNamespace_String__String__String__IRI__String_ [ label="expectNamespace(String, String, String, IRI, String)" ];
  org_apache_any23_writer_WriterFactoryRegistry_getWriterInstanceByIdentifier_java_lang_String__java_io_OutputStream_ [ label="org.apache.any23.writer.WriterFactoryRegistry.getWriterInstanceByIdentifier(java.lang.String, java.io.OutputStream)" ];
  org_apache_any23_cli_ExtractorDocumentation_run__ [ label="org.apache.any23.cli.ExtractorDocumentation.run()" ];
  org_apache_any23_encoding_EncodingUtils_stats_java_io_InputStream_ [ label="org.apache.any23.encoding.EncodingUtils.stats(java.io.InputStream)" ];
  org_apache_any23_encoding_EncodingUtils_TextStatisticsOptimizedForUtf8_addData_byte____int__int_ [ label="org.apache.any23.encoding.EncodingUtils.TextStatisticsOptimizedForUtf8.addData(byte[], int, int)" ];
  org_apache_any23_extractor_rdf_RDFParserFactory_InternalParseErrorListener_fatalError_java_lang_String__long__long_ [ label="org.apache.any23.extractor.rdf.RDFParserFactory.InternalParseErrorListener.fatalError(java.lang.String, long, long)" ];
  org_apache_any23_plugin_PluginIT_before__ [ label="org.apache.any23.plugin.PluginIT.before()" ];
  org_apache_any23_rdf_RDFUtils_bnode__ [ label="org.apache.any23.rdf.RDFUtils.bnode()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testTel__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testTel()" ];
  org_apache_any23_servlet_ServletTest_testPOSTonlyFormat__ [ label="org.apache.any23.servlet.ServletTest.testPOSTonlyFormat()" ];
  org_apache_any23_extractor_yaml_YAMLExtractorTest_nullTest__ [ label="org.apache.any23.extractor.yaml.YAMLExtractorTest.nullTest()" ];
  writeSheetMetadata_IRI__Sheet__ExtractionResult_ [ label="writeSheetMetadata(IRI, Sheet, ExtractionResult)" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_createLiteral_javax_xml_datatype_XMLGregorianCalendar_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.createLiteral(javax.xml.datatype.XMLGregorianCalendar)" ];
  org_apache_any23_source_FileDocumentSource_readStream__ [ label="org.apache.any23.source.FileDocumentSource.readStream()" ];
  expectStartDocument_IRI_ [ label="expectStartDocument(IRI)" ];
  addURLs_HTMLDocument__BNode_ [ label="addURLs(HTMLDocument, BNode)" ];
  org_apache_any23_http_HTTPClientConfiguration_getUserAgent__ [ label="org.apache.any23.http.HTTPClientConfiguration.getUserAgent()" ];
  org_apache_any23_writer_RDFWriterTripleHandler_setAnnotated_boolean_ [ label="org.apache.any23.writer.RDFWriterTripleHandler.setAnnotated(boolean)" ];
  assertOutputString_ExtractionResult__String_ [ label="assertOutputString(ExtractionResult, String)" ];
  org_apache_any23_servlet_ServletTest_testGETwithIRIinParam__ [ label="org.apache.any23.servlet.ServletTest.testGETwithIRIinParam()" ];
  addChild_TripleHandler_ [ label="addChild(TripleHandler)" ];
  resolveCIRIeOrIRIList_Node__String__boolean_ [ label="resolveCIRIeOrIRIList(Node, String, boolean)" ];
  org_apache_any23_validator_rule_OpenGraphNamespaceFix_getHRName__ [ label="org.apache.any23.validator.rule.OpenGraphNamespaceFix.getHRName()" ];
  org_apache_any23_extractor_xpath_TemplateXPathExtractorRuleImplTest_testProcess__ [ label="org.apache.any23.extractor.xpath.TemplateXPathExtractorRuleImplTest.testProcess()" ];
  org_apache_any23_vocab_LKIFCoreExpression_getInstance__ [ label="org.apache.any23.vocab.LKIFCoreExpression.getInstance()" ];
  org_apache_any23_rdf_RDFUtils_literal_long_ [ label="org.apache.any23.rdf.RDFUtils.literal(long)" ];
  org_apache_any23_configuration_Setting_getIdentifier__ [ label="org.apache.any23.configuration.Setting.getIdentifier()" ];
  org_apache_any23_extractor_calendar_JCalExtractor_getDescription__ [ label="org.apache.any23.extractor.calendar.JCalExtractor.getDescription()" ];
  org_apache_any23_extractor_html_microformats2_HItemExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.microformats2.HItemExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_vocab_OGP_getInstance__ [ label="org.apache.any23.vocab.OGP.getInstance()" ];
  org_apache_any23_extractor_html_XFNExtractorTest_testNoXFNRel__ [ label="org.apache.any23.extractor.html.XFNExtractorTest.testNoXFNRel()" ];
  org_apache_any23_validator_DefaultValidatorTest_setUp__ [ label="org.apache.any23.validator.DefaultValidatorTest.setUp()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectTriXByContent__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectTriXByContent()" ];
  org_apache_any23_http_AcceptHeaderBuilderTest_testHighestSubtypeWildcardIsChosen__ [ label="org.apache.any23.http.AcceptHeaderBuilderTest.testHighestSubtypeWildcardIsChosen()" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_test10__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.test10()" ];
  org_apache_any23_vocab_GeoNames_getInstance__ [ label="org.apache.any23.vocab.GeoNames.getInstance()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testUidFull__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testUidFull()" ];
  org_apache_any23_validator_EmptyValidationReport_getInstance__ [ label="org.apache.any23.validator.EmptyValidationReport.getInstance()" ];
  remove_QuadTemplate_ [ label="remove(QuadTemplate)" ];
  getLanguage_Node_ [ label="getLanguage(Node)" ];
  org_apache_any23_extractor_html_TagSoupParsingConfiguration_JsoupConfig_parse_java_io_InputStream__java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.html.TagSoupParsingConfiguration.JsoupConfig.parse(java.io.InputStream, java.lang.String, java.lang.String)" ];
  printStatement_Statement_ [ label="printStatement(Statement)" ];
  org_apache_any23_writer_WriterRegistryTest_testGetWriterByIdentifier__ [ label="org.apache.any23.writer.WriterRegistryTest.testGetWriterByIdentifier()" ];
  org_apache_any23_servlet_ServletTest_testGETwithFormatAndIRIinParam__ [ label="org.apache.any23.servlet.ServletTest.testGETwithFormatAndIRIinParam()" ];
  org_apache_any23_extractor_html_AbstractExtractorTestCase_assertExtract_java_lang_String__boolean_ [ label="org.apache.any23.extractor.html.AbstractExtractorTestCase.assertExtract(java.lang.String, boolean)" ];
  org_apache_any23_extractor_microdata_ItemProp_toJSON__ [ label="org.apache.any23.extractor.microdata.ItemProp.toJSON()" ];
  org_apache_any23_extractor_rdfa_RDFa11Extractor_setVerifyDataType_boolean_ [ label="org.apache.any23.extractor.rdfa.RDFa11Extractor.setVerifyDataType(boolean)" ];
  acquireProperty_ItemProp_ [ label="acquireProperty(ItemProp)" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_TestRDFHandler_handleComment_java_lang_String_ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.TestRDFHandler.handleComment(java.lang.String)" ];
  org_apache_any23_writer_NQuadsWriterFactory_getSupportedSettings__ [ label="org.apache.any23.writer.NQuadsWriterFactory.getSupportedSettings()" ];
  org_apache_any23_configuration_Setting_create_java_lang_String__java_lang_Long_ [ label="org.apache.any23.configuration.Setting.create(java.lang.String, java.lang.Long)" ];
  org_apache_any23_writer_WriterFactoryRegistry_getWriters__ [ label="org.apache.any23.writer.WriterFactoryRegistry.getWriters()" ];
  org_apache_any23_extractor_TagSoupExtractionResult_ResourceRoot_toString__ [ label="org.apache.any23.extractor.TagSoupExtractionResult.ResourceRoot.toString()" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_createLiteral_double_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.createLiteral(double)" ];
  org_apache_any23_rdf_RDFUtils_getFormats__ [ label="org.apache.any23.rdf.RDFUtils.getFormats()" ];
  org_apache_any23_extractor_ExtractionContext_hashCode__ [ label="org.apache.any23.extractor.ExtractionContext.hashCode()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRDFN3ByContentAndName__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectRDFN3ByContentAndName()" ];
  reportError_Node__String_ [ label="reportError(Node, String)" ];
  org_apache_any23_validator_DefaultDOMDocument_getNodesWithAttribute_java_lang_String_ [ label="org.apache.any23.validator.DefaultDOMDocument.getNodesWithAttribute(java.lang.String)" ];
  org_apache_any23_configuration_DefaultConfiguration_copy__ [ label="org.apache.any23.configuration.DefaultConfiguration.copy()" ];
  org_apache_any23_extractor_html_microformats2_HRecipeExtractor_getBaseClassName__ [ label="org.apache.any23.extractor.html.microformats2.HRecipeExtractor.getBaseClassName()" ];
  org_apache_any23_cli_PluginVerifier_getOut__ [ label="org.apache.any23.cli.PluginVerifier.getOut()" ];
  org_apache_any23_extractor_microdata_ItemProp_toString__ [ label="org.apache.any23.extractor.microdata.ItemProp.toString()" ];
  getTripleFormat__ [ label="getTripleFormat()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRDFNQuadsByContent__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectRDFNQuadsByContent()" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testListerEmailHref__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testListerEmailHref()" ];
  addPropertyPath_Class__Resource__Resource__BNode__String___ [ label="addPropertyPath(Class, Resource, Resource, BNode, String[])" ];
  org_apache_any23_plugin_Any23PluginManagerTest_before__ [ label="org.apache.any23.plugin.Any23PluginManagerTest.before()" ];
  add_MIMEType_ [ label="add(MIMEType)" ];
  org_apache_any23_vocab_DCTerms_getInstance__ [ label="org.apache.any23.vocab.DCTerms.getInstance()" ];
  org_apache_any23_vocab_OGPProfile_createProperty_java_lang_String_ [ label="org.apache.any23.vocab.OGPProfile.createProperty(java.lang.String)" ];
  org_apache_any23_writer_WriterFactory_getRdfFormat__ [ label="org.apache.any23.writer.WriterFactory.getRdfFormat()" ];
  establishNewSubject_Node__EvaluationContext_ [ label="establishNewSubject(Node, EvaluationContext)" ];
  org_apache_any23_validator_rule_MissingOpenGraphNamespaceRule_getHRName__ [ label="org.apache.any23.validator.rule.MissingOpenGraphNamespaceRule.getHRName()" ];
  org_apache_any23_servlet_ServletTest_testPOSTbodyMissingFormat__ [ label="org.apache.any23.servlet.ServletTest.testPOSTbodyMissingFormat()" ];
  getFixes_Class_ [ label="getFixes(Class)" ];
  org_apache_any23_extractor_html_SpeciesExtractor_resolveClassName_java_lang_String_ [ label="org.apache.any23.extractor.html.SpeciesExtractor.resolveClassName(java.lang.String)" ];
  getAsXMLLiteral_Node_ [ label="getAsXMLLiteral(Node)" ];
  org_apache_any23_extractor_microdata_ItemPropValue_isDate__ [ label="org.apache.any23.extractor.microdata.ItemPropValue.isDate()" ];
  org_apache_any23_http_AcceptHeaderBuilderTest_testSingleHeaderSpecificWithQ__ [ label="org.apache.any23.http.AcceptHeaderBuilderTest.testSingleHeaderSpecificWithQ()" ];
  org_apache_any23_extractor_html_EmbeddedJSONLDExtractorTest_testJSONLDCommaNormalization__ [ label="org.apache.any23.extractor.html.EmbeddedJSONLDExtractorTest.testJSONLDCommaNormalization()" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_testRDFa11Extraction__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.testRDFa11Extraction()" ];
  org_apache_any23_servlet_ServletTest_testGETOnlyFormat__ [ label="org.apache.any23.servlet.ServletTest.testGETOnlyFormat()" ];
  org_apache_any23_extractor_html_TagSoupParserTest_testEmptySpanElements__ [ label="org.apache.any23.extractor.html.TagSoupParserTest.testEmptySpanElements()" ];
  org_apache_any23_vocab_SchemaOrg_getInstance__ [ label="org.apache.any23.vocab.SchemaOrg.getInstance()" ];
  org_apache_any23_extractor_html_XFNExtractorTest_testMultipleFriends__ [ label="org.apache.any23.extractor.html.XFNExtractorTest.testMultipleFriends()" ];
  getMicrodata_Document__ErrorMode_ [ label="getMicrodata(Document, ErrorMode)" ];
  org_apache_any23_extractor_microdata_MicrodataParser_getErrors__ [ label="org.apache.any23.extractor.microdata.MicrodataParser.getErrors()" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_createLiteral_float_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.createLiteral(float)" ];
  org_apache_any23_extractor_SingleDocumentExtraction_run__ [ label="org.apache.any23.extractor.SingleDocumentExtraction.run()" ];
  org_apache_any23_rdf_RDFUtils_makeIRI__ [ label="org.apache.any23.rdf.RDFUtils.makeIRI()" ];
  org_apache_any23_extractor_html_TurtleHTMLExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.TurtleHTMLExtractorFactory.createExtractor()" ];
  process_Document__ExtractionResult_ [ label="process(Document, ExtractionResult)" ];
  org_apache_any23_cli_SimpleRoverTest_ref310ExtendedTest__ [ label="org.apache.any23.cli.SimpleRoverTest.ref310ExtendedTest()" ];
  org_apache_any23_extractor_html_microformats2_HGeoExtractorTest_testModelNotEmpty__ [ label="org.apache.any23.extractor.html.microformats2.HGeoExtractorTest.testModelNotEmpty()" ];
  org_apache_any23_rdf_Prefixes_addVolatile_org_apache_any23_rdf_Prefixes_ [ label="org.apache.any23.rdf.Prefixes.addVolatile(org.apache.any23.rdf.Prefixes)" ];
  org_apache_any23_extractor_xpath_TemplateXPathExtractionRuleImpl_toString__ [ label="org.apache.any23.extractor.xpath.TemplateXPathExtractionRuleImpl.toString()" ];
  literal_String__org_eclipse_rdf4j_model_IRI_ [ label="literal(String, org.eclipse.rdf4j.model.IRI)" ];
  org_apache_any23_extractor_html_microformats2_HEntryExtractor_getDescription__ [ label="org.apache.any23.extractor.html.microformats2.HEntryExtractor.getDescription()" ];
  org_apache_any23_vocab_OGPBook_createProperty_java_lang_String_ [ label="org.apache.any23.vocab.OGPBook.createProperty(java.lang.String)" ];
  org_apache_any23_extractor_xpath_TemplateXPathExtractionRule_getName__ [ label="org.apache.any23.extractor.xpath.TemplateXPathExtractionRule.getName()" ];
  org_apache_any23_extractor_rdf_JSONLDExtractorTest_testWhitespaceCleaning__ [ label="org.apache.any23.extractor.rdf.JSONLDExtractorTest.testWhitespaceCleaning()" ];
  addType_HTMLDocument__Resource_ [ label="addType(HTMLDocument, Resource)" ];
  org_apache_any23_configuration_Configuration_getConfigurationDump__ [ label="org.apache.any23.configuration.Configuration.getConfigurationDump()" ];
  org_apache_any23_extractor_html_microformats2_HEventExtractor_getDescription__ [ label="org.apache.any23.extractor.html.microformats2.HEventExtractor.getDescription()" ];
  org_apache_any23_source_ByteArrayDocumentSource_getDocumentIRI__ [ label="org.apache.any23.source.ByteArrayDocumentSource.getDocumentIRI()" ];
  org_apache_any23_vocab_CSV_createResource_java_lang_String_ [ label="org.apache.any23.vocab.CSV.createResource(java.lang.String)" ];
  org_apache_any23_extractor_SimpleExtractorFactory_getSupportedMIMETypes__ [ label="org.apache.any23.extractor.SimpleExtractorFactory.getSupportedMIMETypes()" ];
  org_apache_any23_validator_Fix_getHRName__ [ label="org.apache.any23.validator.Fix.getHRName()" ];
  org_apache_any23_writer_WriterFactoryRegistry_hasIdentifier_java_lang_String_ [ label="org.apache.any23.writer.WriterFactoryRegistry.hasIdentifier(java.lang.String)" ];
  org_apache_any23_extractor_calendar_ICalExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.calendar.ICalExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_rdf_PrefixesTest_testAddHardOverwritesVolatileMapping__ [ label="org.apache.any23.rdf.PrefixesTest.testAddHardOverwritesVolatileMapping()" ];
  org_apache_any23_rdf_RDFUtilsTest_testGetRDFFormatByExtension__ [ label="org.apache.any23.rdf.RDFUtilsTest.testGetRDFFormatByExtension()" ];
  run_ExtractionParameters__ExtractionContext__IRI__ExtractionResult_ [ label="run(ExtractionParameters, ExtractionContext, IRI, ExtractionResult)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testBirthDayDate__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testBirthDayDate()" ];
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_setDefaultAccept_java_lang_String_ [ label="org.apache.any23.servlet.conneg.ContentTypeNegotiator.setDefaultAccept(java.lang.String)" ];
  org_apache_any23_servlet_WebResponder_sendError_int__java_lang_String__boolean_ [ label="org.apache.any23.servlet.WebResponder.sendError(int, java.lang.String, boolean)" ];
  addValue_TextField_ [ label="addValue(TextField)" ];
  org_apache_any23_writer_ReportingTripleHandler_setContentLength_long_ [ label="org.apache.any23.writer.ReportingTripleHandler.setContentLength(long)" ];
  org_apache_any23_extractor_html_microformats2_HEventExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.microformats2.HEventExtractorFactory.createExtractor()" ];
  org_apache_any23_extractor_html_microformats2_HEventExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.microformats2.HEventExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_validator_DefaultValidatorTest_testAboutNotIRIRule__ [ label="org.apache.any23.validator.DefaultValidatorTest.testAboutNotIRIRule()" ];
  org_apache_any23_writer_TripleFormat_getCharset__ [ label="org.apache.any23.writer.TripleFormat.getCharset()" ];
  org_apache_any23_cli_MimeDetector_run__ [ label="org.apache.any23.cli.MimeDetector.run()" ];
  addUrl_Resource_ [ label="addUrl(Resource)" ];
  org_apache_any23_extractor_ExtractionParameters_isValidate__ [ label="org.apache.any23.extractor.ExtractionParameters.isValidate()" ];
  org_apache_any23_extractor_microdata_MicrodataParserException_getErrorPath__ [ label="org.apache.any23.extractor.microdata.MicrodataParserException.getErrorPath()" ];
  addListerLogo_HTMLDocument__Resource_ [ label="addListerLogo(HTMLDocument, Resource)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testImgAlt__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testImgAlt()" ];
  org_apache_any23_extractor_html_TagSoupParserTest_testParseSimpleHTML__ [ label="org.apache.any23.extractor.html.TagSoupParserTest.testParseSimpleHTML()" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_testAttributeAlreadySpecified__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.testAttributeAlreadySpecified()" ];
  org_apache_any23_cli_MicrodataParserTest_testRunOnFile__ [ label="org.apache.any23.cli.MicrodataParserTest.testRunOnFile()" ];
  org_apache_any23_extractor_xpath_TemplateGraph_toString__ [ label="org.apache.any23.extractor.xpath.TemplateGraph.toString()" ];
  org_apache_any23_extractor_html_HCardExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.HCardExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_extractor_html_microformats2_HGeoExtractor_resetExtractor__ [ label="org.apache.any23.extractor.html.microformats2.HGeoExtractor.resetExtractor()" ];
  setErrorNode_Node_ [ label="setErrorNode(Node)" ];
  org_apache_any23_writer_BenchmarkTripleHandler_report__ [ label="org.apache.any23.writer.BenchmarkTripleHandler.report()" ];
  hasC1Control_TextStatistics_ [ label="hasC1Control(TextStatistics)" ];
  org_apache_any23_vocab_ReviewAggregate_getInstance__ [ label="org.apache.any23.vocab.ReviewAggregate.getInstance()" ];
  org_apache_any23_extractor_html_microformats2_HEntryExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.microformats2.HEntryExtractorFactory.createExtractor()" ];
  unblockContext_ExtractionContext_ [ label="unblockContext(ExtractionContext)" ];
  org_apache_any23_vocab_OGPVideo_createProperty_java_lang_String_ [ label="org.apache.any23.vocab.OGPVideo.createProperty(java.lang.String)" ];
  org_apache_any23_extractor_html_AbstractExtractorTestCase_assertExtract_java_lang_String_ [ label="org.apache.any23.extractor.html.AbstractExtractorTestCase.assertExtract(java.lang.String)" ];
  sendTriple_Resource__IRI__Value__IRI_ [ label="sendTriple(Resource, IRI, Value, IRI)" ];
  org_apache_any23_extractor_html_HRecipeExtractorTest_testNoMicroformats__ [ label="org.apache.any23.extractor.html.HRecipeExtractorTest.testNoMicroformats()" ];
  org_apache_any23_extractor_html_RDFMergerTest_testGeoAbbr__ [ label="org.apache.any23.extractor.html.RDFMergerTest.testGeoAbbr()" ];
  org_apache_any23_extractor_SimpleExtractorFactory_getExampleInput__ [ label="org.apache.any23.extractor.SimpleExtractorFactory.getExampleInput()" ];
  org_apache_any23_cli_BaseTool_run_boolean_ [ label="org.apache.any23.cli.BaseTool.run(boolean)" ];
  org_apache_any23_cli_BaseTool_setOut_java_io_PrintStream_ [ label="org.apache.any23.cli.BaseTool.setOut(java.io.PrintStream)" ];
  org_apache_any23_plugin_officescraper_ExcelExtractorTest_setUp__ [ label="org.apache.any23.plugin.officescraper.ExcelExtractorTest.setUp()" ];
  org_apache_any23_util_LogUtils_setVerboseLogging__ [ label="org.apache.any23.util.LogUtils.setVerboseLogging()" ];
  getRDFXMLParser_boolean__boolean__ExtractionContext__ExtractionResult_ [ label="getRDFXMLParser(boolean, boolean, ExtractionContext, ExtractionResult)" ];
  org_apache_any23_validator_ValidationReport_Issue_getOrigin__ [ label="org.apache.any23.validator.ValidationReport.Issue.getOrigin()" ];
  org_apache_any23_cli_RoverTest_testRunMultiFiles__ [ label="org.apache.any23.cli.RoverTest.testRunMultiFiles()" ];
  org_apache_any23_extractor_html_microformats2_HEventExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.microformats2.HEventExtractorTest.getExtractorFactory()" ];
  org_apache_any23_extractor_calendar_XCalExtractorTest_filePrefix__ [ label="org.apache.any23.extractor.calendar.XCalExtractorTest.filePrefix()" ];
  printNode_Node__PrintStream_ [ label="printNode(Node, PrintStream)" ];
  org_apache_any23_vocab_VCard_getInstance__ [ label="org.apache.any23.vocab.VCard.getInstance()" ];
  org_apache_any23_servlet_ServletTest_testGETwithURLEncodingWithQuery__ [ label="org.apache.any23.servlet.ServletTest.testGETwithURLEncodingWithQuery()" ];
  getManchesterSyntaxParser_boolean__boolean__ExtractionContext__ExtractionResult_ [ label="getManchesterSyntaxParser(boolean, boolean, ExtractionContext, ExtractionResult)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testBasic__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testBasic()" ];
  org_apache_any23_mime_purifier_Purifier_purify_java_io_InputStream_ [ label="org.apache.any23.mime.purifier.Purifier.purify(java.io.InputStream)" ];
  remove_XPathExtractionRule_ [ label="remove(XPathExtractionRule)" ];
  findAllBy_Node__String__String__String_ [ label="findAllBy(Node, String, String, String)" ];
  org_apache_any23_extractor_html_LicenseExtractorTest_testMultipleLicenses__ [ label="org.apache.any23.extractor.html.LicenseExtractorTest.testMultipleLicenses()" ];
  org_apache_any23_extractor_xpath_TemplateObject_getValueInternal_java_lang_String_ [ label="org.apache.any23.extractor.xpath.TemplateObject.getValueInternal(java.lang.String)" ];
  org_apache_any23_mime_TikaMIMETypeDetector_getResourceAsStream__ [ label="org.apache.any23.mime.TikaMIMETypeDetector.getResourceAsStream()" ];
  org_apache_any23_writer_RDFXMLWriterFactory_getSupportedSettings__ [ label="org.apache.any23.writer.RDFXMLWriterFactory.getSupportedSettings()" ];
  org_apache_any23_configuration_DefaultConfigurationTest_testGetPropertyOrFailNok__ [ label="org.apache.any23.configuration.DefaultConfigurationTest.testGetPropertyOrFailNok()" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testMicrodataNestedUrlResolving__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.testMicrodataNestedUrlResolving()" ];
  applyTo_Document__Writer__Map_ [ label="applyTo(Document, Writer, Map)" ];
  addTextExtractor_String__IRI__BoilerpipeExtractor_ [ label="addTextExtractor(String, IRI, BoilerpipeExtractor)" ];
  org_apache_any23_extractor_microdata_ItemScope_hashCode__ [ label="org.apache.any23.extractor.microdata.ItemScope.hashCode()" ];
  startElement_Element_ [ label="startElement(Element)" ];
  org_apache_any23_configuration_DefaultConfigurationTest_testDefineProperty__ [ label="org.apache.any23.configuration.DefaultConfigurationTest.testDefineProperty()" ];
  org_apache_any23_extractor_html_XFNExtractorTest_testLinkWithoutRel__ [ label="org.apache.any23.extractor.html.XFNExtractorTest.testLinkWithoutRel()" ];
  org_apache_any23_cli_Any23PluginManagerToolsTest_testGetTools__ [ label="org.apache.any23.cli.Any23PluginManagerToolsTest.testGetTools()" ];
  org_apache_any23_extractor_microdata_MicrodataParser_getErrorMode__ [ label="org.apache.any23.extractor.microdata.MicrodataParser.getErrorMode()" ];
  org_apache_any23_extractor_ExtractionResultImpl_printReport_java_io_PrintStream_ [ label="org.apache.any23.extractor.ExtractionResultImpl.printReport(java.io.PrintStream)" ];
  org_apache_any23_extractor_ExtractionResultImpl_getIssuesCount__ [ label="org.apache.any23.extractor.ExtractionResultImpl.getIssuesCount()" ];
  addEmail_Resource_ [ label="addEmail(Resource)" ];
  notifyIssue_IssueLevel__String__long__long_ [ label="notifyIssue(IssueLevel, String, long, long)" ];
  org_apache_any23_servlet_ServletTest_testJSONLDResponseFormat__ [ label="org.apache.any23.servlet.ServletTest.testJSONLDResponseFormat()" ];
  org_apache_any23_extractor_html_SpanCloserInputStreamTest_testNestedSpanReplacement__ [ label="org.apache.any23.extractor.html.SpanCloserInputStreamTest.testNestedSpanReplacement()" ];
  org_apache_any23_extractor_xpath_TemplatePredicate_getValueInternal_java_lang_String_ [ label="org.apache.any23.extractor.xpath.TemplatePredicate.getValueInternal(java.lang.String)" ];
  findAllByAttributeName_Node__String_ [ label="findAllByAttributeName(Node, String)" ];
  traceRuleActivation_Rule_ [ label="traceRuleActivation(Rule)" ];
  org_apache_any23_filter_IgnoreTitlesOfEmptyDocuments_setContentLength_long_ [ label="org.apache.any23.filter.IgnoreTitlesOfEmptyDocuments.setContentLength(long)" ];
  org_apache_any23_encoding_TikaEncodingDetectorTest_tearDown__ [ label="org.apache.any23.encoding.TikaEncodingDetectorTest.tearDown()" ];
  extractMetaElement_Document__String_ [ label="extractMetaElement(Document, String)" ];
  org_apache_any23_rdf_RDFUtils_triple_java_lang_String__java_lang_String__java_lang_String_ [ label="org.apache.any23.rdf.RDFUtils.triple(java.lang.String, java.lang.String, java.lang.String)" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_testTolerantParsing__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.testTolerantParsing()" ];
  asModel_IRI__Object__Value_ [ label="asModel(IRI, Object, Value)" ];
  triple_Resource__org_eclipse_rdf4j_model_IRI__Value_ [ label="triple(Resource, org.eclipse.rdf4j.model.IRI, Value)" ];
  org_apache_any23_extractor_html_TagSoupParsingConfiguration_getDefault__ [ label="org.apache.any23.extractor.html.TagSoupParsingConfiguration.getDefault()" ];
  org_apache_any23_extractor_microdata_MicrodataParserTest_testDeferPropertiesStateManagement__ [ label="org.apache.any23.extractor.microdata.MicrodataParserTest.testDeferPropertiesStateManagement()" ];
  org_apache_any23_extractor_html_HReviewExtractor_resetExtractor__ [ label="org.apache.any23.extractor.html.HReviewExtractor.resetExtractor()" ];
  addTableMetadataStatements_IRI__ExtractionResult__int__int_ [ label="addTableMetadataStatements(IRI, ExtractionResult, int, int)" ];
  org_apache_any23_rdf_Prefixes_createFromMap_java_util_Map_java_lang_String__java_lang_String___boolean_ [ label="org.apache.any23.rdf.Prefixes.createFromMap(java.util.Map<java.lang.String, java.lang.String>, boolean)" ];
  addAdditionalName_HTMLDocument__BNode_ [ label="addAdditionalName(HTMLDocument, BNode)" ];
  getCommentFor_IRI_ [ label="getCommentFor(IRI)" ];
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_getBestMatch_java_lang_String_ [ label="org.apache.any23.servlet.conneg.ContentTypeNegotiator.getBestMatch(java.lang.String)" ];
  org_apache_any23_source_FileDocumentSource_getDocumentIRI__ [ label="org.apache.any23.source.FileDocumentSource.getDocumentIRI()" ];
  extractEntity_Node__ExtractionResult_ [ label="extractEntity(Node, ExtractionResult)" ];
  org_apache_any23_extractor_html_TitleExtractorTest_testStripSpacesFromTitle__ [ label="org.apache.any23.extractor.html.TitleExtractorTest.testStripSpacesFromTitle()" ];
  org_apache_any23_extractor_html_HRecipeExtractor_getDescription__ [ label="org.apache.any23.extractor.html.HRecipeExtractor.getDescription()" ];
  addIngredient_HTMLDocument__HTMLDocument_TextField_ [ label="addIngredient(HTMLDocument, HTMLDocument.TextField)" ];
  org_apache_any23_servlet_ServletTest_testContentNegotiationForTurtle__ [ label="org.apache.any23.servlet.ServletTest.testContentNegotiationForTurtle()" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_test09__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.test09()" ];
  org_apache_any23_cli_MimeDetectorTest_testDetectURL__ [ label="org.apache.any23.cli.MimeDetectorTest.testDetectURL()" ];
  org_apache_any23_cli_CrawlerTest_Anonymous_c155bfb1_1c18_4e1d_94fa_2778949e42df_run__ [ label="org.apache.any23.cli.CrawlerTest.Anonymous-c155bfb1-1c18-4e1d-94fa-2778949e42df.run()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testRelativeUrlXmlBase1__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testRelativeUrlXmlBase1()" ];
  org_apache_any23_extractor_html_AbstractExtractorTestCase_dumpAsListOfStatements__ [ label="org.apache.any23.extractor.html.AbstractExtractorTestCase.dumpAsListOfStatements()" ];
  org_apache_any23_vocab_YAML_getInstance__ [ label="org.apache.any23.vocab.YAML.getInstance()" ];
  org_apache_any23_http_DefaultHTTPClient_createInitializedHTTPClient__ [ label="org.apache.any23.http.DefaultHTTPClient.createInitializedHTTPClient()" ];
  org_apache_any23_validator_DOMDocument_getNodes_java_lang_String_ [ label="org.apache.any23.validator.DOMDocument.getNodes(java.lang.String)" ];
  org_apache_any23_extractor_html_HListingExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.HListingExtractorFactory.createExtractor()" ];
  org_apache_any23_cli_MimeDetectorTest_testDetectFile__ [ label="org.apache.any23.cli.MimeDetectorTest.testDetectFile()" ];
  org_apache_any23_vocab_LKIFCoreRole_getInstance__ [ label="org.apache.any23.vocab.LKIFCoreRole.getInstance()" ];
  org_apache_any23_writer_URIListWriterFactory_getIdentifier__ [ label="org.apache.any23.writer.URIListWriterFactory.getIdentifier()" ];
  test_ExtractorFactory__RDFFormat___ [ label="test(ExtractorFactory, RDFFormat[])" ];
  handleNamespace_String__String_ [ label="handleNamespace(String, String)" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectTextPlainByMeta__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectTextPlainByMeta()" ];
  org_apache_any23_extractor_yaml_ElementsProcessorTest_processList__ [ label="org.apache.any23.extractor.yaml.ElementsProcessorTest.processList()" ];
  org_apache_any23_extractor_html_MicroformatExtractor_getDescription__ [ label="org.apache.any23.extractor.html.MicroformatExtractor.getDescription()" ];
  addItem_HTMLDocument__BNode_ [ label="addItem(HTMLDocument, BNode)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testHeader__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testHeader()" ];
  org_apache_any23_extractor_rdf_TurtleExtractorTest_setUp__ [ label="org.apache.any23.extractor.rdf.TurtleExtractorTest.setUp()" ];
  getMicrodataAsJSON_Document__PrintStream_ [ label="getMicrodataAsJSON(Document, PrintStream)" ];
  org_apache_any23_cli_MicrodataParser_getOut__ [ label="org.apache.any23.cli.MicrodataParser.getOut()" ];
  readUrlField_List__Node_ [ label="readUrlField(List, Node)" ];
  org_apache_any23_extractor_microdata_ItemPropValue_hashCode__ [ label="org.apache.any23.extractor.microdata.ItemPropValue.hashCode()" ];
  org_apache_any23_validator_DOMDocument_addAttribute_java_lang_String__java_lang_String__java_lang_String_ [ label="org.apache.any23.validator.DOMDocument.addAttribute(java.lang.String, java.lang.String, java.lang.String)" ];
  addPhoto_Resource_ [ label="addPhoto(Resource)" ];
  org_apache_any23_plugin_officescraper_ExcelExtractorTest_testExtractXLS__ [ label="org.apache.any23.plugin.officescraper.ExcelExtractorTest.testExtractXLS()" ];
  getTripleObject_Resource__IRI_ [ label="getTripleObject(Resource, IRI)" ];
  org_apache_any23_plugin_crawler_SiteCrawler_setMaxDepth_int_ [ label="org.apache.any23.plugin.crawler.SiteCrawler.setMaxDepth(int)" ];
  org_apache_any23_extractor_html_HTMLDocument_TextField_source__ [ label="org.apache.any23.extractor.html.HTMLDocument.TextField.source()" ];
  org_apache_any23_configuration_DefaultConfigurationTest_testGetPropertyIntOrFailNok__ [ label="org.apache.any23.configuration.DefaultConfigurationTest.testGetPropertyIntOrFailNok()" ];
  getSoTimeout__ [ label="getSoTimeout()" ];
  org_apache_any23_extractor_rdf_JSONLDExtractorTest_tearDown__ [ label="org.apache.any23.extractor.rdf.JSONLDExtractorTest.tearDown()" ];
  toAbsoluteIRI_ParsedIRI__String_ [ label="toAbsoluteIRI(ParsedIRI, String)" ];
  org_apache_any23_extractor_yaml_YAMLExtractorTest_treeTest2__ [ label="org.apache.any23.extractor.yaml.YAMLExtractorTest.treeTest2()" ];
  org_apache_any23_extractor_ExtractionResultImpl_hasIssues__ [ label="org.apache.any23.extractor.ExtractionResultImpl.hasIssues()" ];
  run_ExtractionParameters__ExtractionContext__Document__ExtractionResult_ [ label="run(ExtractionParameters, ExtractionContext, Document, ExtractionResult)" ];
  org_apache_any23_plugin_officescraper_ExcelExtractor_getDescription__ [ label="org.apache.any23.plugin.officescraper.ExcelExtractor.getDescription()" ];
  org_apache_any23_vocab_XFN_getPropertyByLocalName_java_lang_String_ [ label="org.apache.any23.vocab.XFN.getPropertyByLocalName(java.lang.String)" ];
  org_apache_any23_extractor_rdf_BaseRDFExtractor_setVerifyDataType_boolean_ [ label="org.apache.any23.extractor.rdf.BaseRDFExtractor.setVerifyDataType(boolean)" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testPermalink__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testPermalink()" ];
  org_apache_any23_extractor_html_GeoExtractor_getBaseClassName__ [ label="org.apache.any23.extractor.html.GeoExtractor.getBaseClassName()" ];
  org_apache_any23_mime_purifier_WhiteSpacesPurifier_purify_java_io_InputStream_ [ label="org.apache.any23.mime.purifier.WhiteSpacesPurifier.purify(java.io.InputStream)" ];
  org_apache_any23_writer_JSONLDWriterFactory_getIdentifier__ [ label="org.apache.any23.writer.JSONLDWriterFactory.getIdentifier()" ];
  org_apache_any23_mime_purifier_WhiteSpacesPurifierTest_testPurification__ [ label="org.apache.any23.mime.purifier.WhiteSpacesPurifierTest.testPurification()" ];
  printPluginData_ExtractorFactory__PrintStream_ [ label="printPluginData(ExtractorFactory, PrintStream)" ];
  put_Map__Setting_ [ label="put(Map, Setting)" ];
  assertStatementsSize_Resource__IRI__Value__int_ [ label="assertStatementsSize(Resource, IRI, Value, int)" ];
  org_apache_any23_extractor_microdata_MicrodataParserTest_testDeferPropertiesLoopDetection2__ [ label="org.apache.any23.extractor.microdata.MicrodataParserTest.testDeferPropertiesLoopDetection2()" ];
  org_apache_any23_plugin_extractor_openie_OpenIEExtractorFactory_createExtractor__ [ label="org.apache.any23.plugin.extractor.openie.OpenIEExtractorFactory.createExtractor()" ];
  org_apache_any23_cli_Any23PluginManagerToolsTest_before__ [ label="org.apache.any23.cli.Any23PluginManagerToolsTest.before()" ];
  assertIssue_IssueReport_IssueLevel__String_ [ label="assertIssue(IssueReport.IssueLevel, String)" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testMultipleActionsNested__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testMultipleActionsNested()" ];
  textContent_Node_ [ label="textContent(Node)" ];
  org_apache_any23_extractor_rdf_ManchesterSyntaxExtractorTest_tearDown__ [ label="org.apache.any23.extractor.rdf.ManchesterSyntaxExtractorTest.tearDown()" ];
  evaluateVariant_MediaRangeSpec_ [ label="evaluateVariant(MediaRangeSpec)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testExtractionPerformance__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testExtractionPerformance()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testObjectDataDataUri__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testObjectDataDataUri()" ];
  add_QuadTemplate_ [ label="add(QuadTemplate)" ];
  org_apache_any23_validator_ValidationReport_getErrors__ [ label="org.apache.any23.validator.ValidationReport.getErrors()" ];
  org_apache_any23_extractor_html_HResumeExtractorTest_testNoMicroformats__ [ label="org.apache.any23.extractor.html.HResumeExtractorTest.testNoMicroformats()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRDFaByContent__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testDetectRDFaByContent()" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorFactory.getDescriptionInstance()" ];
  org_apache_any23_extractor_microdata_ItemPropValue_getAsFloat__ [ label="org.apache.any23.extractor.microdata.ItemPropValue.getAsFloat()" ];
  getNodeLocation_Node_ [ label="getNodeLocation(Node)" ];
  org_apache_any23_extractor_html_AbstractExtractorTestCase_getReport__ [ label="org.apache.any23.extractor.html.AbstractExtractorTestCase.getReport()" ];
  org_apache_any23_mime_purifier_WhiteSpacesPurifierTest_setUp__ [ label="org.apache.any23.mime.purifier.WhiteSpacesPurifierTest.setUp()" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_resolveIRI_java_lang_String__java_net_URI_ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.resolveIRI(java.lang.String, java.net.URI)" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_testVocabSupport__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.testVocabSupport()" ];
  findAllByAttributeContains_Node__String__String_ [ label="findAllByAttributeContains(Node, String, String)" ];
  org_apache_any23_extractor_rdfa_JsoupScanner_handleText_java_lang_String_ [ label="org.apache.any23.extractor.rdfa.JsoupScanner.handleText(java.lang.String)" ];
  org_apache_any23_extractor_rdf_RDFHandlerAdapter_handleNamespace_java_lang_String__java_lang_String_ [ label="org.apache.any23.extractor.rdf.RDFHandlerAdapter.handleNamespace(java.lang.String, java.lang.String)" ];
  getApplicableExtractors_ExtractorRegistry__File___ [ label="getApplicableExtractors(ExtractorRegistry, File[])" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testPriceAndDt__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testPriceAndDt()" ];
  org_apache_any23_extractor_html_microformats2_HItemExtractorTest_testModelNotEmpty__ [ label="org.apache.any23.extractor.html.microformats2.HItemExtractorTest.testModelNotEmpty()" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testSchemaOrgNestedProps__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.testSchemaOrgNestedProps()" ];
  org_apache_any23_validator_DefaultValidatorTest_FakeRule_getHRName__ [ label="org.apache.any23.validator.DefaultValidatorTest.FakeRule.getHRName()" ];
  getNTriplesParser_boolean__boolean__ExtractionContext__ExtractionResult_ [ label="getNTriplesParser(boolean, boolean, ExtractionContext, ExtractionResult)" ];
  org_apache_any23_openie_OpenIEExtractorTest_testExtractFromHTMLDocument__ [ label="org.apache.any23.openie.OpenIEExtractorTest.testExtractFromHTMLDocument()" ];
  org_apache_any23_servlet_ServletTest_testContentNegotiationForRDFXML__ [ label="org.apache.any23.servlet.ServletTest.testContentNegotiationForRDFXML()" ];
  addClasses_HTMLDocument__Resource_ [ label="addClasses(HTMLDocument, Resource)" ];
  org_apache_any23_extractor_xpath_TemplateXPathExtractionRuleImpl_checkVariableNameNotDeclared_java_lang_String_ [ label="org.apache.any23.extractor.xpath.TemplateXPathExtractionRuleImpl.checkVariableNameNotDeclared(java.lang.String)" ];
  org_apache_any23_extractor_xpath_Term_isVar__ [ label="org.apache.any23.extractor.xpath.Term.isVar()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testCSVByContentAndName__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testCSVByContentAndName()" ];
  removeRule_Class_ [ label="removeRule(Class)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testfnOrg__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testfnOrg()" ];
  org_apache_any23_plugin_Any23PluginManager_loadJARs_java_io_File____ [ label="org.apache.any23.plugin.Any23PluginManager.loadJARs(java.io.File...)" ];
  getConnectionTimeout__ [ label="getConnectionTimeout()" ];
  org_apache_any23_rdf_PrefixesTest_testAddVolatileDoesNotOverwriteHardMapping__ [ label="org.apache.any23.rdf.PrefixesTest.testAddVolatileDoesNotOverwriteHardMapping()" ];
  addOrganizationName_Resource_ [ label="addOrganizationName(Resource)" ];
  org_apache_any23_vocab_OGP_createProperty_java_lang_String_ [ label="org.apache.any23.vocab.OGP.createProperty(java.lang.String)" ];
  endElement_Element_ [ label="endElement(Element)" ];
  assertContains_Resource__IRI__String__String_ [ label="assertContains(Resource, IRI, String, String)" ];
  org_apache_any23_extractor_rdf_ManchesterSyntaxExtractor_getDescription__ [ label="org.apache.any23.extractor.rdf.ManchesterSyntaxExtractor.getDescription()" ];
  org_apache_any23_util_ReaderInputStream_read__ [ label="org.apache.any23.util.ReaderInputStream.read()" ];
  org_apache_any23_extractor_MockTripleHandler_verify__ [ label="org.apache.any23.extractor.MockTripleHandler.verify()" ];
  org_apache_any23_rdf_Prefixes_abbreviate_java_lang_String_ [ label="org.apache.any23.rdf.Prefixes.abbreviate(java.lang.String)" ];
  org_apache_any23_extractor_ExtractionResultImpl_toString__ [ label="org.apache.any23.extractor.ExtractionResultImpl.toString()" ];
  correctVariant_TextStatistics__Charset_ [ label="correctVariant(TextStatistics, Charset)" ];
  getType_ExtractorFactory_ [ label="getType(ExtractorFactory)" ];
  org_apache_any23_extractor_html_microformats2_HAdrExtractorFactory_createExtractor__ [ label="org.apache.any23.extractor.html.microformats2.HAdrExtractorFactory.createExtractor()" ];
  org_apache_any23_Any23Test_testN3Detection2__ [ label="org.apache.any23.Any23Test.testN3Detection2()" ];
  org_apache_any23_extractor_html_SpanCloserInputStreamTest_testRealSpanReplacement__ [ label="org.apache.any23.extractor.html.SpanCloserInputStreamTest.testRealSpanReplacement()" ];
  org_apache_any23_validator_EmptyValidationReport_getRuleActivations__ [ label="org.apache.any23.validator.EmptyValidationReport.getRuleActivations()" ];
  org_apache_any23_extractor_html_microformats2_HProductExtractor_getDescription__ [ label="org.apache.any23.extractor.html.microformats2.HProductExtractor.getDescription()" ];
  org_apache_any23_rdf_PrefixesTest_testAddVolatileDoesNotOverwriteVolatileMapping__ [ label="org.apache.any23.rdf.PrefixesTest.testAddVolatileDoesNotOverwriteVolatileMapping()" ];
  org_apache_any23_vocab_LKIFCoreRules_getInstance__ [ label="org.apache.any23.vocab.LKIFCoreRules.getInstance()" ];
  org_apache_any23_source_DocumentSource_getContentLength__ [ label="org.apache.any23.source.DocumentSource.getContentLength()" ];
  org_apache_any23_extractor_xpath_QuadTemplate_getGraph__ [ label="org.apache.any23.extractor.xpath.QuadTemplate.getGraph()" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testItemFnUrl__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testItemFnUrl()" ];
  getItemPropNodes_Node_ [ label="getItemPropNodes(Node)" ];
  org_apache_any23_http_HTTPClientConfiguration_getMaxConnections__ [ label="org.apache.any23.http.HTTPClientConfiguration.getMaxConnections()" ];
  org_apache_any23_vocab_Programme_getInstance__ [ label="org.apache.any23.vocab.Programme.getInstance()" ];
  org_apache_any23_extractor_html_SpeciesExtractor_getDescription__ [ label="org.apache.any23.extractor.html.SpeciesExtractor.getDescription()" ];
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testAtomByContentAndName__ [ label="org.apache.any23.mime.TikaMIMETypeDetectorTest.testAtomByContentAndName()" ];
  addRule_Class__Class_ [ label="addRule(Class, Class)" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testKelkooFull__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testKelkooFull()" ];
  org_apache_any23_extractor_rdfa_RDFaExtractorTest_testTolerantParsing__ [ label="org.apache.any23.extractor.rdfa.RDFaExtractorTest.testTolerantParsing()" ];
  addNickname_HTMLDocument__BNode_ [ label="addNickname(HTMLDocument, BNode)" ];
  addEmails_HTMLDocument__BNode_ [ label="addEmails(HTMLDocument, BNode)" ];
  org_apache_any23_plugin_PluginIT_testDetectExtractorPlugins__ [ label="org.apache.any23.plugin.PluginIT.testDetectExtractorPlugins()" ];
  org_apache_any23_extractor_csv_CSVExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.csv.CSVExtractorTest.getExtractorFactory()" ];
  org_apache_any23_extractor_ExtractorDescription_getPrefixes__ [ label="org.apache.any23.extractor.ExtractorDescription.getPrefixes()" ];
  org_apache_any23_rdf_Any23ValueFactoryWrapper_createBNode__ [ label="org.apache.any23.rdf.Any23ValueFactoryWrapper.createBNode()" ];
  org_apache_any23_extractor_html_LicenseExtractorTest_testOnlyApache__ [ label="org.apache.any23.extractor.html.LicenseExtractorTest.testOnlyApache()" ];
  checkTemplateVariablesDeclared_QuadTemplate_ [ label="checkTemplateVariablesDeclared(QuadTemplate)" ];
  org_apache_any23_extractor_csv_CSVExtractor_getDescription__ [ label="org.apache.any23.extractor.csv.CSVExtractor.getDescription()" ];
  org_apache_any23_cli_ExtractorDocumentationTest_testAll__ [ label="org.apache.any23.cli.ExtractorDocumentationTest.testAll()" ];
  org_apache_any23_extractor_xpath_Term_toString__ [ label="org.apache.any23.extractor.xpath.Term.toString()" ];
  getRels_Node_ [ label="getRels(Node)" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_test18__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.test18()" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testImpliedNames__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testImpliedNames()" ];
  org_apache_any23_plugin_crawler_SiteCrawler_getPolitenessDelay__ [ label="org.apache.any23.plugin.crawler.SiteCrawler.getPolitenessDelay()" ];
  org_apache_any23_writer_URIListWriter_isAnnotated__ [ label="org.apache.any23.writer.URIListWriter.isAnnotated()" ];
  org_apache_any23_configuration_DefaultConfiguration_loadDefaultProperties__ [ label="org.apache.any23.configuration.DefaultConfiguration.loadDefaultProperties()" ];
  org_apache_any23_extractor_html_microformats2_HResumeExtractor_resetExtractor__ [ label="org.apache.any23.extractor.html.microformats2.HResumeExtractor.resetExtractor()" ];
  addNames_HTMLDocument__Resource_ [ label="addNames(HTMLDocument, Resource)" ];
  org_apache_any23_extractor_html_microformats2_HCardExtractorTest_testModelNotEmpty__ [ label="org.apache.any23.extractor.html.microformats2.HCardExtractorTest.testModelNotEmpty()" ];
  org_apache_any23_extractor_html_HListingExtractorTest_testKelkoo__ [ label="org.apache.any23.extractor.html.HListingExtractorTest.testKelkoo()" ];
  org_apache_any23_configuration_Setting_create_java_lang_String__java_lang_Integer_ [ label="org.apache.any23.configuration.Setting.create(java.lang.String, java.lang.Integer)" ];
  org_apache_any23_extractor_rdfa_JsoupScanner_handleComment_java_lang_String_ [ label="org.apache.any23.extractor.rdfa.JsoupScanner.handleComment(java.lang.String)" ];
  newRuleInstance_Class_ [ label="newRuleInstance(Class)" ];
  org_apache_any23_servlet_WebResponder_initRdfWriter_java_lang_String__boolean__boolean_ [ label="org.apache.any23.servlet.WebResponder.initRdfWriter(java.lang.String, boolean, boolean)" ];
  org_apache_any23_extractor_rdfa_RDFa11ExtractorTest_testIssue273__ [ label="org.apache.any23.extractor.rdfa.RDFa11ExtractorTest.testIssue273()" ];
  org_apache_any23_writer_LoggingTripleHandler_close__ [ label="org.apache.any23.writer.LoggingTripleHandler.close()" ];
  org_apache_any23_rdf_RDFUtils_literal_int_ [ label="org.apache.any23.rdf.RDFUtils.literal(int)" ];
  isAncestorOf_Node__Node__boolean_ [ label="isAncestorOf(Node, Node, boolean)" ];
  org_apache_any23_AbstractAny23TestBase_getDocumentSourceFromResource_java_lang_String_ [ label="org.apache.any23.AbstractAny23TestBase.getDocumentSourceFromResource(java.lang.String)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testHonorificAdditionalMultiple__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testHonorificAdditionalMultiple()" ];
  org_apache_any23_extractor_html_EmbeddedJSONLDExtractorTest_testJSONLDUnescapedCharacters__ [ label="org.apache.any23.extractor.html.EmbeddedJSONLDExtractorTest.testJSONLDUnescapedCharacters()" ];
  org_apache_any23_extractor_html_HCalendarExtractorTest_test05__ [ label="org.apache.any23.extractor.html.HCalendarExtractorTest.test05()" ];
  org_apache_any23_extractor_html_TitleExtractorTest_testMixedCaseTitleTag__ [ label="org.apache.any23.extractor.html.TitleExtractorTest.testMixedCaseTitleTag()" ];
  org_apache_any23_extractor_ExtractionParametersTest_testReadOverridenConfig__ [ label="org.apache.any23.extractor.ExtractionParametersTest.testReadOverridenConfig()" ];
  addSubMicroformat_String__Resource__IRI_ [ label="addSubMicroformat(String, Resource, IRI)" ];
  org_apache_any23_source_HTTPDocumentSource_getContentLength__ [ label="org.apache.any23.source.HTTPDocumentSource.getContentLength()" ];
  org_apache_any23_vocab_LKIFCoreLegalAction_getInstance__ [ label="org.apache.any23.vocab.LKIFCoreLegalAction.getInstance()" ];
  org_apache_any23_configuration_SettingsTest_testGetPresentSetting__ [ label="org.apache.any23.configuration.SettingsTest.testGetPresentSetting()" ];
  org_apache_any23_extractor_html_EmbeddedJSONLDExtractor_JSONLDScript_hashCode__ [ label="org.apache.any23.extractor.html.EmbeddedJSONLDExtractor.JSONLDScript.hashCode()" ];
  org_apache_any23_extractor_ExtractorDescription_getExtractorLabel__ [ label="org.apache.any23.extractor.ExtractorDescription.getExtractorLabel()" ];
  org_apache_any23_extractor_html_HeadLinkExtractorFactory_getDescriptionInstance__ [ label="org.apache.any23.extractor.html.HeadLinkExtractorFactory.getDescriptionInstance()" ];
  purgeIncompleteTriples_Node_ [ label="purgeIncompleteTriples(Node)" ];
  org_apache_any23_writer_NTriplesWriterFactory_getIdentifier__ [ label="org.apache.any23.writer.NTriplesWriterFactory.getIdentifier()" ];
  runExtraction_DocumentSource__ExtractionParameters__String__boolean__boolean_ [ label="runExtraction(DocumentSource, ExtractionParameters, String, boolean, boolean)" ];
  org_apache_any23_extractor_html_HCardExtractorTest_testAdr__ [ label="org.apache.any23.extractor.html.HCardExtractorTest.testAdr()" ];
  org_apache_any23_extractor_html_HReviewExtractorTest_getExtractorFactory__ [ label="org.apache.any23.extractor.html.HReviewExtractorTest.getExtractorFactory()" ];
  org_apache_any23_configuration_SettingsTest_testBadSetting__ [ label="org.apache.any23.configuration.SettingsTest.testBadSetting()" ];
  org_apache_any23_rdf_PrefixesTest_testMergePrefixesWithoutConflict__ [ label="org.apache.any23.rdf.PrefixesTest.testMergePrefixesWithoutConflict()" ];
  extractPrefixes_Node__List_ [ label="extractPrefixes(Node, List)" ];
  org_apache_any23_validator_rule_AboutNotURIRule_getHRName__ [ label="org.apache.any23.validator.rule.AboutNotURIRule.getHRName()" ];
  org_apache_any23_writer_RepositoryWriter_close__ [ label="org.apache.any23.writer.RepositoryWriter.close()" ];
  addReviewer_HTMLDocument__Resource_ [ label="addReviewer(HTMLDocument, Resource)" ];
  addAdr_HTMLDocument__Resource_ [ label="addAdr(HTMLDocument, Resource)" ];
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testExampleSchemaOrg1__ [ label="org.apache.any23.extractor.microdata.MicrodataExtractorTest.testExampleSchemaOrg1()" ];
  receiveTriple_Resource__IRI__Value__IRI_ [ label="receiveTriple(Resource, IRI, Value, IRI)" ];
  org_apache_any23_configuration_Settings_size__ [ label="org.apache.any23.configuration.Settings.size()" ];
  org_apache_any23_configuration_Settings_contains_java_lang_Object_ [ label="org.apache.any23.configuration.Settings.contains(java.lang.Object)" ];
  org_apache_any23_writer_TripleFormat_getDisplayName__ [ label="org.apache.any23.writer.TripleFormat.getDisplayName()" ];
  org_apache_any23_http_HTTPClientConfiguration_getAcceptHeader__ [ label="org.apache.any23.http.HTTPClientConfiguration.getAcceptHeader()" ];
  extractDocumentLanguage_ExtractionParameters_ -> org_apache_any23_extractor_SingleDocumentExtraction_isHTMLDocument__;
  org_apache_any23_extractor_MockTripleHandler_setContentLength_long_ -> org_apache_any23_extractor_MockTripleHandler_assertNextExpectation_java_lang_String_;
  openContext_ExtractionContext_ -> org_apache_any23_writer_BenchmarkTripleHandler_StatObject_interimStart__;
  org_apache_any23_util_FileUtils_readResourceContent_java_lang_String_ -> org_apache_any23_util_FileUtils_readResourceContent_java_lang_Class__java_lang_String_;
  org_apache_any23_extractor_microdata_MicrodataParserTest_testGetContentAsDate__ -> org_apache_any23_extractor_microdata_MicrodataParserTest_extractItems_java_lang_String_;
  org_apache_any23_http_AcceptHeaderBuilder_getAcceptHeader__ -> org_apache_any23_http_AcceptHeaderBuilder_removeSpecificTypesCoveredByWildcard__;
  org_apache_any23_http_AcceptHeaderBuilder_getAcceptHeader__ -> org_apache_any23_http_AcceptHeaderBuilder_removeTypesCoveredByWildcard__;
  org_apache_any23_extractor_html_HTMLDocument_findAllByClassName_java_lang_String_ -> org_apache_any23_extractor_html_HTMLDocument_getDocument__;
  org_apache_any23_servlet_ServletTest_testContentNegotiationForNTriples__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  findExactlyOneObject_Resource__IRI_ -> org_apache_any23_extractor_html_AbstractExtractorTestCase_getFailedExtractionMessage__;
  org_apache_any23_encoding_TikaEncodingDetectorTest_testUTF8HTML__ -> org_apache_any23_encoding_TikaEncodingDetectorTest_assertEncoding_java_lang_String__java_lang_String_;
  org_apache_any23_servlet_ServletTest_testTriXResponseFormat__ -> org_apache_any23_servlet_ServletTest_doPostRequest_java_lang_String__java_lang_String__java_lang_String_;
  org_apache_any23_servlet_ServletTest_testTriXResponseFormat__ -> org_apache_any23_servlet_ServletTest_assertContainsTag_java_lang_String__boolean__int__java_lang_String_;
  iso_8859_1_or_15_TextStatistics_ -> org_apache_any23_encoding_EncodingUtils_forName_java_lang_String_;
  org_apache_any23_extractor_rdfa_RDFa11Parser_resolveCURIEOrIRI_java_lang_String__boolean_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_isCURIE_java_lang_String_;
  org_apache_any23_extractor_rdfa_RDFa11Parser_resolveCURIEOrIRI_java_lang_String__boolean_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_resolveNamespacedIRI_java_lang_String__org_apache_any23_extractor_rdfa_RDFa11Parser_ResolutionPolicy_;
  org_apache_any23_extractor_rdfa_RDFa11Parser_resolveCURIEOrIRI_java_lang_String__boolean_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_isAbsoluteIRI_java_lang_String_;
  org_apache_any23_extractor_rdfa_RDFa11Parser_resolveCURIEOrIRI_java_lang_String__boolean_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_resolveIRI_java_lang_String_;
  org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_ -> org_apache_any23_servlet_ServletTest_doRequest_java_lang_String__java_lang_String_;
  org_apache_any23_extractor_microdata_MicrodataParserException_toString__ -> org_apache_any23_extractor_microdata_MicrodataParserException_toJSON__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectTextRDFByMeta__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByMimeTypeHint_java_lang_String__java_lang_String_;
  org_apache_any23_mime_MIMEType_toString__ -> org_apache_any23_mime_MIMEType_getFullType__;
  org_apache_any23_mime_TikaMIMETypeDetector_checkTurtleFormat_java_io_InputStream_ -> org_apache_any23_mime_TikaMIMETypeDetector_extractDataSample_java_io_InputStream__char_;
  org_apache_any23_servlet_conneg_MediaRangeSpec_buildMediaType__ -> org_apache_any23_servlet_conneg_MediaRangeSpec_escape_java_lang_String_;
  org_apache_any23_http_AcceptHeaderBuilderTest_testSingleHeaderSubtypeWildcard__ -> org_apache_any23_http_AcceptHeaderBuilderTest_buildHeader_java_util_Collection_java_lang_String__;
  org_apache_any23_rdf_RDFUtils_fixAbsoluteIRI_java_lang_String_ -> org_apache_any23_rdf_RDFUtils_fixIRIWithException_java_lang_String_;
  runExtractor_ExtractionParameters__String__Extractor_ -> org_apache_any23_extractor_SingleDocumentExtraction_ensureHasLocalCopy__;
  org_apache_any23_AbstractAny23TestBase_getDocumentSourceFromResource_java_lang_String__java_lang_String_ -> org_apache_any23_AbstractAny23TestBase_copyResourceToTempFile_java_lang_String_;
  startDocument_IRI_ -> org_apache_any23_writer_JSONWriter_start_boolean_;
  org_apache_any23_extractor_rdfa_RDFa11ParserTest_testUpdateIRIMapping__ -> org_apache_any23_extractor_rdfa_RDFa11ParserTest_getRootDocument__;
  org_apache_any23_cli_ToolRunner_printVersionInfo__ -> org_apache_any23_cli_ToolRunner_getOsFamily__;
  org_apache_any23_util_DiscoveryUtils_getClassesInPackage_java_lang_String__java_lang_Class_ -> org_apache_any23_util_DiscoveryUtils_getClassesInPackage_java_lang_String_;
  org_apache_any23_util_DiscoveryUtils_getClassesInPackage_java_lang_String__java_lang_Class_ -> org_apache_any23_util_DiscoveryUtils_contains_java_lang_Object____java_lang_Object_;
  org_apache_any23_extractor_SingleDocumentExtraction_filterExtractorsByMIMEType__ -> org_apache_any23_extractor_SingleDocumentExtraction_ensureHasLocalCopy__;
  org_apache_any23_extractor_html_HCardExtractorTest_testEMailNotUriReal__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  org_apache_any23_extractor_html_HCardExtractorTest_testEMailNotUriReal__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertJohn__;
  org_apache_any23_extractor_SingleDocumentExtractionTest_testNestedMicroformatsManaged__ -> org_apache_any23_extractor_SingleDocumentExtractionTest_getInstance_java_lang_String_;
  org_apache_any23_extractor_SingleDocumentExtractionTest_testNestedMicroformatsManaged__ -> org_apache_any23_extractor_SingleDocumentExtractionTest_logStorageContent__;
  org_apache_any23_encoding_TikaEncodingDetectorTest_testUtf8Simple__ -> org_apache_any23_encoding_TikaEncodingDetectorTest_bytes_java_lang_String__java_nio_charset_Charset_;
  conditionallyAddLiteralProperty_Node__Resource__IRI__Literal_ -> org_apache_any23_extractor_html_MicroformatExtractor_containsScriptBlock_java_lang_String_;
  org_apache_any23_extractor_html_EntityBasedMicroformatExtractor_extract__ -> org_apache_any23_extractor_html_EntityBasedMicroformatExtractor_getBaseClassName__;
  org_apache_any23_extractor_html_EntityBasedMicroformatExtractor_extract__ -> org_apache_any23_extractor_html_EntityBasedMicroformatExtractor_resetExtractor__;
  org_apache_any23_extractor_csv_CSVReaderBuilder_build_java_io_InputStream_ -> org_apache_any23_extractor_csv_CSVReaderBuilder_getBestStrategy_java_io_InputStream_;
  org_apache_any23_extractor_csv_CSVReaderBuilder_build_java_io_InputStream_ -> org_apache_any23_extractor_csv_CSVReaderBuilder_getCSVStrategyFromConfiguration__;
  writeProperty_BNode__ICalPropertyScribe__ICalProperty__WriteContext__ExtractionResult_ -> org_apache_any23_extractor_calendar_BaseCalendarExtractor_parseTimeZoneId_java_lang_String_;
  org_apache_any23_extractor_html_HCalendarExtractorTest_test13__ -> org_apache_any23_extractor_html_HCalendarExtractorTest_assertDefault_java_lang_String_;
  org_apache_any23_util_StreamUtils_asLines_java_io_InputStream_ -> org_apache_any23_util_StreamUtils_closeGracefully_java_io_Closeable_;
  org_apache_any23_util_FileUtils_visitFilesRecursively_java_io_File__java_io_FilenameFilter__java_util_List_java_io_File__ -> org_apache_any23_util_FileUtils_visitFilesRecursively_java_io_File__java_io_FilenameFilter__java_util_List_java_io_File__;
  run_ExtractionParameters_ -> org_apache_any23_extractor_SingleDocumentExtraction_ensureHasLocalCopy__;
  run_ExtractionParameters_ -> org_apache_any23_extractor_SingleDocumentExtraction_filterExtractorsByMIMEType__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRDFXMLByMeta__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByMimeTypeHint_java_lang_String__java_lang_String_;
  org_apache_any23_Any23Test_testNTriplesDetectionAndExtraction__ -> org_apache_any23_Any23Test_assertDetectionAndExtraction_java_lang_String_;
  org_apache_any23_extractor_MockTripleHandler_close__ -> org_apache_any23_extractor_MockTripleHandler_assertNextExpectation_java_lang_String_;
  org_apache_any23_util_FileUtils_dumpContent_java_io_File__java_lang_Throwable_ -> org_apache_any23_util_FileUtils_dumpContent_java_io_File__java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testRDFXMLByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByContentAndName_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testRDFXMLByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestRdfXml__;
  org_apache_any23_extractor_html_HCardExtractorTest_testMailto2__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  org_apache_any23_vocab_Vocabulary_getComments__ -> org_apache_any23_vocab_Vocabulary_fillResourceToCommentMap__;
  org_apache_any23_http_AcceptHeaderBuilderTest_testSingleHeaderTypeWildcard__ -> org_apache_any23_http_AcceptHeaderBuilderTest_buildHeader_java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRDFXMLByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMEtypeByContent_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRDFXMLByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestRdfXml__;
  org_apache_any23_cli_ToolRunner_execute_java_lang_String____ -> org_apache_any23_cli_ToolRunner_execute_boolean__java_lang_String____;
  org_apache_any23_plugin_Any23PluginManager_getApplicableTools_java_io_File____ -> org_apache_any23_plugin_Any23PluginManager_loadPlugins_java_io_File____;
  org_apache_any23_plugin_Any23PluginManager_getApplicableTools_java_io_File____ -> org_apache_any23_plugin_Any23PluginManager_getTools__;
  org_apache_any23_util_DiscoveryUtils_findClassesInDir_java_io_File__java_lang_String_ -> org_apache_any23_util_DiscoveryUtils_findClassesInDir_java_io_File__java_lang_String_;
  findExactlyOneBlankSubject_IRI__Value_ -> org_apache_any23_extractor_html_AbstractExtractorTestCase_getFailedExtractionMessage__;
  sendError_int__String__Exception__ExtractionReport__boolean_ -> org_apache_any23_servlet_WebResponder_printData_byte____java_io_PrintStream_;
  sendError_int__String__Exception__ExtractionReport__boolean_ -> org_apache_any23_servlet_WebResponder_printHeader_java_io_PrintStream_;
  org_apache_any23_extractor_html_HCardExtractorTest_testObjectDataHttpUri__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  org_apache_any23_extractor_html_HCardExtractorTest_testObjectDataHttpUri__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertJohn__;
  org_apache_any23_extractor_calendar_BaseCalendarExtractorTest_extractAndVerifyAgainstNQuads_java_lang_String__java_lang_String_ -> org_apache_any23_extractor_calendar_BaseCalendarExtractorTest_filePrefix__;
  org_apache_any23_extractor_calendar_BaseCalendarExtractorTest_extractAndVerifyAgainstNQuads_java_lang_String__java_lang_String_ -> org_apache_any23_extractor_calendar_BaseCalendarExtractorTest_loadResultStatement_java_lang_String_;
  org_apache_any23_extractor_microdata_MicrodataParserTest_Anonymous_f98128bc_38f0_44e7_aa68_2300f8eda976_run__ -> org_apache_any23_extractor_microdata_MicrodataParserTest_getDom_byte___;
  org_apache_any23_configuration_DefaultConfiguration_getConfigurationDump__ -> org_apache_any23_configuration_DefaultConfiguration_getProperties__;
  org_apache_any23_configuration_DefaultConfiguration_getConfigurationDump__ -> org_apache_any23_configuration_DefaultConfiguration_getPropertyValue_java_lang_String_;
  org_apache_any23_extractor_html_HCalendarExtractorTest_test08__ -> org_apache_any23_extractor_html_HCalendarExtractorTest_assertDefault_java_lang_String_;
  org_apache_any23_extractor_html_HCardExtractorTest_testRelativeUrlXmlBase2__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  org_apache_any23_extractor_html_HCardExtractorTest_testRelativeUrlXmlBase2__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertJohn__;
  org_apache_any23_servlet_ServletTest_testGETIncludesQueryString__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  org_apache_any23_servlet_ServletTest_assertContainsTag_java_lang_String__java_lang_String_ -> org_apache_any23_servlet_ServletTest_assertContainsTag_java_lang_String__boolean__int__java_lang_String_;
  org_apache_any23_validator_DefaultValidatorTest_testMissingItemscopeAttributeValue__ -> org_apache_any23_validator_DefaultValidatorTest_loadDocument_java_lang_String_;
  xmlCharset_TextStatistics__CharSequence_ -> org_apache_any23_encoding_EncodingUtils_charset_java_lang_String_;
  org_apache_any23_encoding_TikaEncodingDetectorTest_testTikaIssue771__ -> org_apache_any23_encoding_TikaEncodingDetectorTest_bytes_java_lang_String__java_nio_charset_Charset_;
  org_apache_any23_extractor_html_HTMLDocument_getSingularTextField_java_lang_String_ -> org_apache_any23_extractor_html_HTMLDocument_getPluralTextField_java_lang_String_;
  org_apache_any23_extractor_html_HCardExtractorTest_testPhotoLogo__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  org_apache_any23_extractor_html_HCardExtractorTest_testPhotoLogo__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertJohn__;
  org_apache_any23_servlet_ServletTest_testPOSTonlyIRI__ -> org_apache_any23_servlet_ServletTest_doPostRequest_java_lang_String__java_lang_String__java_lang_String_;
  org_apache_any23_servlet_ServletTest_testPOSTonlyIRI__ -> org_apache_any23_servlet_ServletTest_assertContains_java_lang_String__java_lang_String_;
  org_apache_any23_plugin_Any23PluginManager_configureExtractors_java_io_File____ -> org_apache_any23_plugin_Any23PluginManager_loadPlugins_java_io_File____;
  org_apache_any23_plugin_Any23PluginManager_configureExtractors_java_io_File____ -> org_apache_any23_plugin_Any23PluginManager_getExtractors__;
  makeIRI_String__IRI__boolean_ -> org_apache_any23_rdf_RDFUtils_iri_java_lang_String_;
  org_apache_any23_validator_DefaultValidatorTest_testMetaNameMisuse__ -> org_apache_any23_validator_DefaultValidatorTest_loadDocument_java_lang_String_;
  org_apache_any23_extractor_html_HCardExtractorTest_testMailto1__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  org_apache_any23_configuration_Setting_clone_S__V_ -> org_apache_any23_configuration_Setting_checkValue_V_;
  org_apache_any23_configuration_Setting_clone_S__V_ -> org_apache_any23_configuration_Setting_clone__;
  org_apache_any23_servlet_ServletTest_testPOSTBodyInParamWorks__ -> org_apache_any23_servlet_ServletTest_doPostRequest_java_lang_String__java_lang_String__java_lang_String_;
  org_apache_any23_servlet_ServletTest_testPOSTBodyInParamWorks__ -> org_apache_any23_servlet_ServletTest_assertContains_java_lang_String__java_lang_String_;
  org_apache_any23_writer_TripleWriterFactory_getRdfFormat__ -> org_apache_any23_writer_TripleWriterFactory_getTripleFormat__;
  org_apache_any23_extractor_html_HTMLDocument_find_java_lang_String_ -> org_apache_any23_extractor_html_HTMLDocument_getDocument__;
  org_apache_any23_validator_DefaultDOMDocument_addAttribute_java_lang_String__java_lang_String__java_lang_String_ -> org_apache_any23_validator_DefaultDOMDocument_getNode_java_lang_String_;
  org_apache_any23_validator_DefaultValidatorTest_testMissingOGNamespace__ -> org_apache_any23_validator_DefaultValidatorTest_loadDocument_java_lang_String_;
  org_apache_any23_servlet_ServletTest_testGETwithURLDecodingInParam__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  org_apache_any23_plugin_crawler_SiteCrawler_start_java_net_URL__boolean_ -> org_apache_any23_plugin_crawler_SiteCrawler_start_java_net_URL__java_util_regex_Pattern__boolean_;
  org_apache_any23_extractor_rdfa_RDFa11ParserTest_testIsRelativePositive2__ -> org_apache_any23_extractor_rdfa_RDFa11ParserTest_getRootDocument__;
  org_apache_any23_rdf_Prefixes_expand_java_lang_String_ -> org_apache_any23_rdf_Prefixes_parsePrefix_java_lang_String_;
  org_apache_any23_rdf_Prefixes_expand_java_lang_String_ -> org_apache_any23_rdf_Prefixes_hasPrefix_java_lang_String_;
  org_apache_any23_rdf_Prefixes_expand_java_lang_String_ -> org_apache_any23_rdf_Prefixes_getNamespaceIRIFor_java_lang_String_;
  org_apache_any23_rdf_Prefixes_expand_java_lang_String_ -> org_apache_any23_rdf_Prefixes_parseLocalName_java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetector_isGenericMIMEType_java_lang_String_ -> org_apache_any23_mime_TikaMIMETypeDetector_isPlainMIMEType_java_lang_String_;
  org_apache_any23_cli_YAMLRoverTest_simpleTest__ -> org_apache_any23_cli_YAMLRoverTest_assertFileContainsString_java_io_File__java_lang_String_;
  org_apache_any23_validator_XMLValidationReportSerializer_serializeGetterValue_java_lang_Object__java_lang_reflect_Method__java_io_PrintStream_ -> org_apache_any23_validator_XMLValidationReportSerializer_getPropertyFromMethodName_java_lang_String_;
  org_apache_any23_validator_XMLValidationReportSerializer_serializeGetterValue_java_lang_Object__java_lang_reflect_Method__java_io_PrintStream_ -> org_apache_any23_validator_XMLValidationReportSerializer_isManaged_java_lang_Object_;
  org_apache_any23_validator_XMLValidationReportSerializer_serializeGetterValue_java_lang_Object__java_lang_reflect_Method__java_io_PrintStream_ -> org_apache_any23_validator_XMLValidationReportSerializer_filterGetters_java_lang_Class___extends_java_lang_Object__;
  org_apache_any23_validator_XMLValidationReportSerializer_serializeGetterValue_java_lang_Object__java_lang_reflect_Method__java_io_PrintStream_ -> org_apache_any23_validator_XMLValidationReportSerializer_serializeGetterValue_java_lang_Object__java_lang_reflect_Method__java_io_PrintStream_;
  org_apache_any23_validator_XMLValidationReportSerializer_serializeGetterValue_java_lang_Object__java_lang_reflect_Method__java_io_PrintStream_ -> org_apache_any23_validator_XMLValidationReportSerializer_printObject_java_lang_Object__java_io_PrintStream_;
  endDocument_IRI_ -> org_apache_any23_filter_ExtractionContextBlocker_closeDocument__;
  endDocument_IRI_ -> org_apache_any23_writer_JSONWriter_validateDocumentStarted__;
  org_apache_any23_extractor_SingleDocumentExtraction_getParserEncoding__ -> org_apache_any23_extractor_SingleDocumentExtraction_detectEncoding__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectApplicationYAMLByMeta__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByMimeTypeHint_java_lang_String__java_lang_String_;
  org_apache_any23_cli_RoverTest_testRunMultiURLs__ -> org_apache_any23_cli_RoverTest_runWithMultiSourcesAndVerify_java_lang_String____int_;
  org_apache_any23_extractor_html_HCardName_getFullName__ -> org_apache_any23_extractor_html_HCardName_hasField_java_lang_String_;
  org_apache_any23_extractor_html_HCardName_getFullName__ -> org_apache_any23_extractor_html_HCardName_getField_java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testN3Detection__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_assertN3Detection_java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testN3Detection__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_assertN3DetectionFail_java_lang_String_;
  extractLink_Node__BNode__IRI_ -> org_apache_any23_extractor_html_XFNExtractor_containsRelMe_java_lang_String___;
  extractLink_Node__BNode__IRI_ -> org_apache_any23_extractor_html_XFNExtractor_containsXFNRelExceptMe_java_lang_String___;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRDFN3ByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMEtypeByContent_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRDFN3ByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestN3__;
  assertNotContains_Resource__IRI__String_ -> org_apache_any23_extractor_html_AbstractExtractorTestCase_getFailedExtractionMessage__;
  org_apache_any23_extractor_html_HCalendarExtractorTest_test04__ -> org_apache_any23_extractor_html_HCalendarExtractorTest_assertDefault_java_lang_String_;
  org_apache_any23_extractor_html_ICBMExtractor_expand_java_lang_String_ -> org_apache_any23_extractor_html_ICBMExtractor_getDescription__;
  org_apache_any23_configuration_DefaultConfiguration_getFlagProperty_java_lang_String_ -> org_apache_any23_configuration_DefaultConfiguration_getPropertyOrFail_java_lang_String_;
  org_apache_any23_cli_ToolTestBase_runToolCheckExit0_java_lang_String____ -> org_apache_any23_cli_ToolTestBase_runTool_java_lang_String____;
  org_apache_any23_Any23Test_testN3Detection1__ -> org_apache_any23_Any23Test_assertDetection_java_lang_String__java_lang_String____;
  getAsTypedLiteral_Node_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_resolveCURIEOrIRI_java_lang_String__boolean_;
  org_apache_any23_extractor_microdata_MicrodataParserTest_getExpectedErrorsCount_java_util_Properties_ -> org_apache_any23_extractor_microdata_MicrodataParserTest_countKeysWithPrefix_java_util_Properties__java_lang_String_;
  org_apache_any23_util_FileUtils_listFilesRecursively_java_io_File__java_io_FilenameFilter_ -> org_apache_any23_util_FileUtils_visitFilesRecursively_java_io_File__java_io_FilenameFilter__java_util_List_java_io_File__;
  org_apache_any23_cli_ToolTestBase_runTool_java_lang_String_ -> org_apache_any23_cli_ToolTestBase_runTool_java_lang_String____;
  org_apache_any23_servlet_conneg_MediaRangeSpec_getPrecedence_org_apache_any23_servlet_conneg_MediaRangeSpec_ -> org_apache_any23_servlet_conneg_MediaRangeSpec_isWildcardType__;
  org_apache_any23_servlet_conneg_MediaRangeSpec_getPrecedence_org_apache_any23_servlet_conneg_MediaRangeSpec_ -> org_apache_any23_servlet_conneg_MediaRangeSpec_isWildcardSubtype__;
  org_apache_any23_servlet_conneg_MediaRangeSpec_getPrecedence_org_apache_any23_servlet_conneg_MediaRangeSpec_ -> org_apache_any23_servlet_conneg_MediaRangeSpec_getParameterNames__;
  org_apache_any23_servlet_conneg_MediaRangeSpec_getPrecedence_org_apache_any23_servlet_conneg_MediaRangeSpec_ -> org_apache_any23_servlet_conneg_MediaRangeSpec_getParameter_java_lang_String_;
  org_apache_any23_encoding_TikaEncodingDetector_guessEncoding_java_io_InputStream__java_nio_charset_Charset_ -> org_apache_any23_encoding_TikaEncodingDetector_computeAndReset_java_io_InputStream__org_apache_any23_encoding_TikaEncodingDetector_InputStreamFunction_E__;
  org_apache_any23_servlet_ServletTest_testContentNegotiationForWildcardReturnsTurtle__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  org_apache_any23_plugin_officescraper_XSSFWorkbookTest_testXLSFormatAccess__ -> org_apache_any23_plugin_officescraper_XSSFWorkbookTest_verifyResource_java_lang_String_;
  org_apache_any23_extractor_csv_CSVExtractor_getObjectFromCell_java_lang_String_ -> org_apache_any23_extractor_csv_CSVExtractor_isInteger_java_lang_String_;
  org_apache_any23_extractor_csv_CSVExtractor_getObjectFromCell_java_lang_String_ -> org_apache_any23_extractor_csv_CSVExtractor_isFloat_java_lang_String_;
  org_apache_any23_validator_ValidationReport_FixError_toString__ -> org_apache_any23_validator_ValidationReport_Error_toString__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectWSDLByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMEtypeByContent_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectWSDLByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestWsdl__;
  org_apache_any23_extractor_ExtractorRegistryImpl_getExtractorGroup__ -> org_apache_any23_extractor_ExtractorRegistryImpl_getExtractorGroup_java_util_List_java_lang_String__;
  org_apache_any23_extractor_ExtractorRegistryImpl_getExtractorGroup__ -> org_apache_any23_extractor_ExtractorRegistryImpl_getAllNames__;
  org_apache_any23_extractor_html_HCardName_hasField_java_lang_String_ -> org_apache_any23_extractor_html_HCardName_getField_java_lang_String_;
  org_apache_any23_extractor_html_HCalendarExtractorTest_test17__ -> org_apache_any23_extractor_html_HCalendarExtractorTest_assertDefault_java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetector_checkN3Format_java_io_InputStream_ -> org_apache_any23_mime_TikaMIMETypeDetector_findPattern_java_util_regex_Pattern____char__java_io_InputStream_;
  org_apache_any23_extractor_html_HCardExtractorTest_testImgSrcDataUrl__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  org_apache_any23_extractor_html_HCardExtractorTest_testImgSrcDataUrl__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertJohn__;
  org_apache_any23_extractor_html_RDFMergerTest_test01Basic__ -> org_apache_any23_extractor_html_RDFMergerTest_extractHRevAndRelated_java_lang_String_;
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_loadResultStatement_java_lang_String_ -> org_apache_any23_extractor_microdata_MicrodataExtractorTest_TestRDFHandler_getStatements__;
  org_apache_any23_extractor_html_AbstractExtractorTestCase_assertContainsModel_java_lang_String_ -> org_apache_any23_extractor_html_AbstractExtractorTestCase_getConnection__;
  org_apache_any23_extractor_html_HCalendarExtractorTest_test12__ -> org_apache_any23_extractor_html_HCalendarExtractorTest_assertDefault_java_lang_String_;
  org_apache_any23_source_HTTPDocumentSource_openInputStream__ -> org_apache_any23_source_HTTPDocumentSource_ensureOpen__;
  org_apache_any23_extractor_calendar_BaseCalendarExtractor_localNameOfProperty_java_lang_String_ -> org_apache_any23_extractor_calendar_BaseCalendarExtractor_camelCase_java_lang_String__boolean_;
  org_apache_any23_http_AcceptHeaderBuilderTest_testSingleHeaderSpecific__ -> org_apache_any23_http_AcceptHeaderBuilderTest_buildHeader_java_util_Collection_java_lang_String__;
  consolidateResources_List__boolean__TripleHandler__String_ -> org_apache_any23_extractor_SingleDocumentExtraction_createExtractionContext_java_lang_String_;
  org_apache_any23_extractor_rdfa_RDFa11Parser_isCURIEBNode_java_lang_String_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_isCURIE_java_lang_String_;
  org_apache_any23_extractor_html_HCardExtractorTest_testMultipleUrls__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  org_apache_any23_extractor_html_HCardExtractorTest_testMultipleUrls__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertJohn__;
  org_apache_any23_extractor_html_DomUtilsTest_testGetXPathForNode__ -> org_apache_any23_extractor_html_DomUtilsTest_check_java_lang_String__java_lang_String__java_lang_String_;
  org_apache_any23_extractor_html_HTMLDocument_resolveIRI_java_lang_String_ -> org_apache_any23_extractor_html_HTMLDocument_getBaseIRI__;
  org_apache_any23_validator_ValidationReport_RuleError_toString__ -> org_apache_any23_validator_ValidationReport_Error_toString__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectXHTMLByMeta__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByMimeTypeHint_java_lang_String__java_lang_String_;
  writeTriple_Resource__IRI__Value__Resource_ -> org_apache_any23_writer_JSONWriter_start_boolean_;
  writeTriple_Resource__IRI__Value__Resource_ -> org_apache_any23_writer_JSONWriter_printIRI_java_lang_String_;
  writeTriple_Resource__IRI__Value__Resource_ -> org_apache_any23_writer_RDFWriterTripleHandler_writer__;
  org_apache_any23_extractor_html_EncodingTest_testEncodingXHTML_ISO_8859_1__ -> org_apache_any23_extractor_html_EncodingTest_parseHTML_java_lang_String_;
  org_apache_any23_Any23Test_assertDetectionAndExtraction_java_lang_String_ -> org_apache_any23_Any23Test_detectAndExtract_java_lang_String_;
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testMicrodataGoogleRichSnippet__ -> org_apache_any23_extractor_microdata_MicrodataExtractorTest_extractAndVerifyAgainstNQuads_java_lang_String__java_lang_String_;
  org_apache_any23_rdf_Any23ValueFactoryWrapper_fixLink_java_lang_String__java_lang_String_ -> org_apache_any23_rdf_Any23ValueFactoryWrapper_fixWhiteSpace_java_lang_String_;
  org_apache_any23_rdf_Any23ValueFactoryWrapper_fixLink_java_lang_String__java_lang_String_ -> org_apache_any23_rdf_Any23ValueFactoryWrapper_fixIRI_java_lang_String_;
  org_apache_any23_validator_XMLValidationReportSerializer_serializeObject_java_lang_Object__java_io_PrintStream_ -> org_apache_any23_validator_XMLValidationReportSerializer_getClassName_java_lang_Class___extends_java_lang_Object__;
  org_apache_any23_validator_XMLValidationReportSerializer_serializeObject_java_lang_Object__java_io_PrintStream_ -> org_apache_any23_validator_XMLValidationReportSerializer_filterGetters_java_lang_Class___extends_java_lang_Object__;
  org_apache_any23_validator_XMLValidationReportSerializer_serializeObject_java_lang_Object__java_io_PrintStream_ -> org_apache_any23_validator_XMLValidationReportSerializer_serializeGetterValue_java_lang_Object__java_lang_reflect_Method__java_io_PrintStream_;
  org_apache_any23_plugin_officescraper_ExcelExtractorTest_testExtractXLSX__ -> org_apache_any23_plugin_officescraper_ExcelExtractorTest_processFile_java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testTriXByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByContentAndName_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testTriXByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestTrix__;
  org_apache_any23_servlet_conneg_MediaRangeSpec_parseType_java_lang_String_ -> org_apache_any23_servlet_conneg_MediaRangeSpec_parseRange_java_lang_String_;
  org_apache_any23_servlet_conneg_MediaRangeSpec_parseType_java_lang_String_ -> org_apache_any23_servlet_conneg_MediaRangeSpec_isWildcardType__;
  org_apache_any23_servlet_conneg_MediaRangeSpec_parseType_java_lang_String_ -> org_apache_any23_servlet_conneg_MediaRangeSpec_isWildcardSubtype__;
  org_apache_any23_http_AcceptHeaderBuilderTest_testMultipleIndependentHeaders__ -> org_apache_any23_http_AcceptHeaderBuilderTest_buildHeader_java_util_Collection_java_lang_String__;
  org_apache_any23_vocab_Vocabulary_createClass_java_lang_String__java_lang_String_ -> org_apache_any23_vocab_Vocabulary_createIRI_java_lang_String__java_lang_String_;
  org_apache_any23_extractor_microdata_MicrodataParserTest_testAdvancedItemrefManagement__ -> org_apache_any23_extractor_microdata_MicrodataParserTest_extractItemsAndVerifyJSONSerialization_java_lang_String__java_lang_String_;
  org_apache_any23_Any23Test_testRDFXMLDetectionAndExtraction__ -> org_apache_any23_Any23Test_assertDetectionAndExtraction_java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRSS2ByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMEtypeByContent_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRSS2ByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestRss2__;
  org_apache_any23_rdf_RDFUtils_makeIRI_java_lang_String_ -> org_apache_any23_rdf_RDFUtils_isAbsoluteIRI_java_lang_String_;
  org_apache_any23_rdf_RDFUtils_makeIRI_java_lang_String_ -> org_apache_any23_rdf_RDFUtils_iri_java_lang_String_;
  org_apache_any23_plugin_Any23PluginManager_loadJARDir_java_io_File_ -> org_apache_any23_plugin_Any23PluginManager_loadJAR_java_io_File_;
  org_apache_any23_extractor_html_HTMLDocument_getPluralUrlField_java_lang_String_ -> org_apache_any23_extractor_html_HTMLDocument_getDocument__;
  getTagSoupDOM_ExtractionParameters_ -> org_apache_any23_extractor_SingleDocumentExtraction_ensureHasLocalCopy__;
  getTagSoupDOM_ExtractionParameters_ -> org_apache_any23_extractor_SingleDocumentExtraction_getParserEncoding__;
  org_apache_any23_http_AcceptHeaderBuilderTest_testEmpty__ -> org_apache_any23_http_AcceptHeaderBuilderTest_buildHeader_java_util_Collection_java_lang_String__;
  processDocument_URL__Document__ExtractionResult_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_reset__;
  org_apache_any23_extractor_ExtractionParameters_setFlag_java_lang_String__boolean_ -> org_apache_any23_extractor_ExtractionParameters_checkPropertyExists_java_lang_String_;
  org_apache_any23_extractor_ExtractionParameters_setFlag_java_lang_String__boolean_ -> org_apache_any23_extractor_ExtractionParameters_validateValue_java_lang_String__java_lang_String_;
  org_apache_any23_plugin_officescraper_XSSFWorkbookTest_testXLSXFormatAccess__ -> org_apache_any23_plugin_officescraper_XSSFWorkbookTest_verifyResource_java_lang_String_;
  org_apache_any23_servlet_ServletTest_testGETAddsHTTPScheme__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  org_apache_any23_servlet_ServletTest_testResponseWithReport__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  org_apache_any23_servlet_ServletTest_testResponseWithReport__ -> org_apache_any23_servlet_ServletTest_assertContainsTag_java_lang_String__java_lang_String_;
  org_apache_any23_servlet_ServletTest_testResponseWithReport__ -> org_apache_any23_servlet_ServletTest_assertContainsTag_java_lang_String__boolean__int__java_lang_String_;
  org_apache_any23_http_AcceptHeaderBuilderTest_testHighestSpecificValueIsChosen__ -> org_apache_any23_http_AcceptHeaderBuilderTest_buildHeader_java_util_Collection_java_lang_String__;
  org_apache_any23_extractor_xpath_TemplateXPathExtractionRuleImpl_checkVariableNameDeclared_java_lang_String_ -> org_apache_any23_extractor_xpath_TemplateXPathExtractionRuleImpl_variableNameDeclared_java_lang_String_;
  org_apache_any23_plugin_Any23PluginManager_loadFiles_java_io_File____ -> org_apache_any23_plugin_Any23PluginManager_loadJARDir_java_io_File_;
  org_apache_any23_plugin_Any23PluginManager_loadFiles_java_io_File____ -> org_apache_any23_plugin_Any23PluginManager_loadClassDir_java_io_File_;
  org_apache_any23_plugin_Any23PluginManager_loadFiles_java_io_File____ -> org_apache_any23_plugin_Any23PluginManager_loadJAR_java_io_File_;
  org_apache_any23_extractor_html_HTMLDocument_findMicroformattedObjectNode_java_lang_String__java_lang_String_ -> org_apache_any23_extractor_html_HTMLDocument_getDocument__;
  org_apache_any23_extractor_csv_CSVReaderBuilder_getCSVStrategyFromConfiguration__ -> org_apache_any23_extractor_csv_CSVReaderBuilder_getCharValueFromConfiguration_java_lang_String__java_lang_String_;
  org_apache_any23_writer_RDFWriterTripleHandler_handleComment_java_lang_String_ -> org_apache_any23_writer_RDFWriterTripleHandler_writer__;
  org_apache_any23_validator_XMLValidationReportSerializer_printObject_java_lang_Object__java_io_PrintStream_ -> org_apache_any23_validator_XMLValidationReportSerializer_serializeObject_java_lang_Object__java_io_PrintStream_;
  establishNewSubjectCurrentObjectResource_Node__EvaluationContext_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_resolveIRI_java_lang_String_;
  establishNewSubjectCurrentObjectResource_Node__EvaluationContext_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_resolveCURIEOrIRI_java_lang_String__boolean_;
  org_apache_any23_encoding_TikaEncodingDetectorTest_testIso88591Simple__ -> org_apache_any23_encoding_TikaEncodingDetectorTest_bytes_java_lang_String__java_nio_charset_Charset_;
  org_apache_any23_extractor_html_HTMLDocument_findNodeById_java_lang_String_ -> org_apache_any23_extractor_html_HTMLDocument_getDocument__;
  getItemScope_Node_ -> org_apache_any23_extractor_microdata_MicrodataParser_deferProperties_java_lang_String____;
  org_apache_any23_Any23Test_testImplicitEncoding__ -> org_apache_any23_Any23Test_assertEncodingDetection_java_lang_String__java_lang_String__java_lang_String_;
  org_apache_any23_writer_TripleFormat_toRDFFormat__ -> org_apache_any23_writer_TripleFormat_Capabilities_has_org_apache_any23_writer_TripleFormat_Capabilities_;
  org_apache_any23_extractor_microdata_MicrodataParserTest_extractItems_java_lang_String_ -> org_apache_any23_extractor_microdata_MicrodataParserTest_getMicrodataDom_java_lang_String_;
  org_apache_any23_extractor_rdfa_SemarglSink_addNonLiteral_java_lang_String__java_lang_String__java_lang_String_ -> org_apache_any23_extractor_rdfa_SemarglSink_createResource_java_lang_String_;
  org_apache_any23_extractor_html_RDFMergerTest_testNoMicroformats__ -> org_apache_any23_extractor_html_RDFMergerTest_extract_java_lang_String_;
  org_apache_any23_encoding_TikaEncodingDetectorTest_testISO8859HTML__ -> org_apache_any23_encoding_TikaEncodingDetectorTest_assertEncoding_java_lang_String__java_lang_String_;
  org_apache_any23_extractor_html_HTMLFixture_getDOM__ -> org_apache_any23_extractor_html_HTMLFixture_getFile__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testNQuadsDetection__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_assertNQuadsDetection_java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testNQuadsDetection__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_assertNQuadsDetectionFail_java_lang_String_;
  org_apache_any23_filter_ExtractionContextBlocker_close__ -> org_apache_any23_filter_ExtractionContextBlocker_closeDocument__;
  org_apache_any23_extractor_html_RDFMergerTest_extractHRevAndRelated_java_lang_String_ -> org_apache_any23_extractor_html_RDFMergerTest_extractHCardAndRelated_java_lang_String_;
  org_apache_any23_rdf_RDFUtils_quad_java_lang_String__java_lang_String__java_lang_String__java_lang_String_ -> org_apache_any23_rdf_RDFUtils_toValue_java_lang_String_;
  processNode_Node__ExtractionResult_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_getContext__;
  org_apache_any23_extractor_xpath_Term_getValue_java_util_Map_java_lang_String__java_lang_String__ -> org_apache_any23_extractor_xpath_Term_getValueInternal_java_lang_String_;
  org_apache_any23_encoding_TikaEncodingDetector_computeAndReset_java_io_InputStream__org_apache_any23_encoding_TikaEncodingDetector_InputStreamFunction_E__ -> org_apache_any23_encoding_TikaEncodingDetector_InputStreamFunction_compute_java_io_InputStream_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testXHTMLByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByContentAndName_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testXHTMLByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestXHtml__;
  org_apache_any23_extractor_ExtractionException_printStackTrace_java_io_PrintStream_ -> org_apache_any23_extractor_ExtractionException_printExceptionResult_java_io_PrintWriter_;
  org_apache_any23_servlet_ServletTest_testPOSTWorks__ -> org_apache_any23_servlet_ServletTest_doPostRequest_java_lang_String__java_lang_String__java_lang_String_;
  org_apache_any23_servlet_ServletTest_testPOSTWorks__ -> org_apache_any23_servlet_ServletTest_assertContains_java_lang_String__java_lang_String_;
  org_apache_any23_extractor_rdfa_RDFa11ParserTest_testGetAsPlainLiteral__ -> org_apache_any23_extractor_rdfa_RDFa11ParserTest_getRootDocument__;
  org_apache_any23_http_AcceptHeaderBuilderTest_testTypeWildcardSuppressesLowerValues__ -> org_apache_any23_http_AcceptHeaderBuilderTest_buildHeader_java_util_Collection_java_lang_String__;
  org_apache_any23_extractor_html_SpanCloserInputStreamTest_testSpanNegativeReplacement__ -> org_apache_any23_extractor_html_SpanCloserInputStreamTest_processInput_java_lang_String__java_lang_String_;
  org_apache_any23_extractor_microdata_ItemPropValue_parseDateTime_java_lang_String_ -> org_apache_any23_extractor_microdata_ItemPropValue_getSdf__;
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_getBestMatch_java_lang_String__java_lang_String_ -> org_apache_any23_servlet_conneg_ContentTypeNegotiator_AcceptHeaderOverride_matches_java_lang_String__java_lang_String_;
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_getBestMatch_java_lang_String__java_lang_String_ -> org_apache_any23_servlet_conneg_ContentTypeNegotiator_AcceptHeaderOverride_getReplacement__;
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_getBestMatch_java_lang_String__java_lang_String_ -> org_apache_any23_servlet_conneg_ContentTypeNegotiator_Negotiation_negotiate__;
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_getBestMatch_java_lang_String__java_lang_String_ -> org_apache_any23_servlet_conneg_ContentTypeNegotiator_toAcceptRanges_java_lang_String_;
  org_apache_any23_extractor_html_HCalendarExtractorTest_test07__ -> org_apache_any23_extractor_html_HCalendarExtractorTest_assertDefault_java_lang_String_;
  org_apache_any23_extractor_microdata_ItemPropValue_isNumber__ -> org_apache_any23_extractor_microdata_ItemPropValue_isInteger__;
  org_apache_any23_extractor_microdata_ItemPropValue_isNumber__ -> org_apache_any23_extractor_microdata_ItemPropValue_isFloat__;
  org_apache_any23_servlet_ServletTest_testGETInvalidIRI__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  writeTriple_String__String__Value_ -> org_apache_any23_extractor_rdfa_SemarglSink_createResource_java_lang_String_;
  org_apache_any23_extractor_html_AbstractExtractorTestCase_assertModelNotEmpty__ -> org_apache_any23_extractor_html_AbstractExtractorTestCase_getFailedExtractionMessage__;
  org_apache_any23_extractor_html_RDFMergerTest_testSingleton__ -> org_apache_any23_extractor_html_RDFMergerTest_extractHCardAndRelated_java_lang_String_;
  org_apache_any23_encoding_TikaEncodingDetector_guessEncoding_java_io_InputStream__java_lang_String_ -> org_apache_any23_encoding_TikaEncodingDetector_guessEncoding_java_io_InputStream__java_nio_charset_Charset_;
  org_apache_any23_extractor_microdata_ItemScope_toJSON__ -> org_apache_any23_extractor_microdata_ItemScope_toJSON_java_lang_String___;
  assertContains_Resource__IRI__Value_ -> org_apache_any23_extractor_html_AbstractExtractorTestCase_getFailedExtractionMessage__;
  org_apache_any23_encoding_TikaEncodingDetectorTest_testTikaIssue2771__ -> org_apache_any23_encoding_TikaEncodingDetectorTest_bytes_java_lang_String__java_nio_charset_Charset_;
  org_apache_any23_extractor_html_SpanCloserInputStream_read__ -> org_apache_any23_extractor_html_SpanCloserInputStream_resetDetector__;
  org_apache_any23_extractor_html_SpanCloserInputStream_read__ -> org_apache_any23_extractor_html_SpanCloserInputStream_checkOpenTrailingSequence_int_;
  org_apache_any23_filter_ExtractionContextBlocker_ValvedTriplePipe_receiveNamespace_java_lang_String__java_lang_String_ -> org_apache_any23_filter_ExtractionContextBlocker_ValvedTriplePipe_sendNamespace_java_lang_String__java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectExtensionN3ByMeta__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByMimeTypeHint_java_lang_String__java_lang_String_;
  org_apache_any23_writer_JSONWriter_printExplicitIRI_java_lang_String_ -> org_apache_any23_writer_JSONWriter_printValue_java_lang_String__java_lang_String_;
  getInputIRIFromRequest_HttpServletRequest_ -> org_apache_any23_servlet_Servlet_hasScheme_java_lang_String_;
  getInputIRIFromRequest_HttpServletRequest_ -> org_apache_any23_servlet_Servlet_hasOnlySingleSlashAfterScheme_java_lang_String_;
  org_apache_any23_writer_JSONWriter_close__ -> org_apache_any23_writer_JSONWriter_start_boolean_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testYAMLByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByContentAndName_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testYAMLByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestYAML__;
  org_apache_any23_Any23_getHTTPClient__ -> org_apache_any23_Any23_getAcceptHeader__;
  org_apache_any23_rdf_PopularPrefixes_getPrefixes__ -> org_apache_any23_rdf_PopularPrefixes_getResourceAsStream__;
  org_apache_any23_rdf_PopularPrefixes_getPrefixes__ -> org_apache_any23_rdf_PopularPrefixes_testIRICompliance_java_lang_String_;
  org_apache_any23_writer_JSONWriter_printIRI_java_lang_String_ -> org_apache_any23_writer_JSONWriter_printValue_java_lang_String_;
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_extractAndVerifyAgainstNQuads_java_lang_String__java_lang_String_ -> org_apache_any23_extractor_microdata_MicrodataExtractorTest_extractAndVerifyAgainstNQuads_java_lang_String__java_lang_String__boolean_;
  predicate_String__ExtractionResult_ -> org_apache_any23_extractor_calendar_BaseCalendarExtractor_localNameOfProperty_java_lang_String_;
  org_apache_any23_extractor_html_HCardName_hasAnyField__ -> org_apache_any23_extractor_html_HCardName_hasField_java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectTextHTMLByMeta__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByMimeTypeHint_java_lang_String__java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testRDFaByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByContentAndName_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testRDFaByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestRdfa__;
  org_apache_any23_extractor_html_RDFMergerTest_testAbbrTitleEverything__ -> org_apache_any23_extractor_html_RDFMergerTest_extractHCardAndRelated_java_lang_String_;
  org_apache_any23_servlet_ServletTest_testGETWorks__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  org_apache_any23_servlet_ServletTest_testGETWorks__ -> org_apache_any23_servlet_ServletTest_assertContains_java_lang_String__java_lang_String_;
  org_apache_any23_servlet_ServletTest_testPOSTWorksWithParametersOnContentType__ -> org_apache_any23_servlet_ServletTest_doPostRequest_java_lang_String__java_lang_String__java_lang_String_;
  org_apache_any23_servlet_ServletTest_testPOSTWorksWithParametersOnContentType__ -> org_apache_any23_servlet_ServletTest_assertContains_java_lang_String__java_lang_String_;
  org_apache_any23_servlet_ServletTest_testPOSTwithContentTypeParam__ -> org_apache_any23_servlet_ServletTest_doPostRequest_java_lang_String__java_lang_String__java_lang_String_;
  org_apache_any23_cli_BaseTool_ConcisePrintStream_Anonymous_d7a2a5c0_0370_4426_b0e6_e939029dfcbf_close__ -> org_apache_any23_cli_BaseTool_close_java_io_PrintStream_;
  guessMimeTypeByInputAndMeta_InputStream__Metadata_ -> org_apache_any23_mime_TikaMIMETypeDetector_isGenericMIMEType_java_lang_String_;
  guessMimeTypeByInputAndMeta_InputStream__Metadata_ -> org_apache_any23_mime_TikaMIMETypeDetector_isPlainMIMEType_java_lang_String_;
  org_apache_any23_extractor_html_HTMLDocument_findAll_java_lang_String_ -> org_apache_any23_extractor_html_HTMLDocument_getDocument__;
  org_apache_any23_http_AcceptHeaderBuilderTest_testSubtypeWildcardSuppressesLowerValues__ -> org_apache_any23_http_AcceptHeaderBuilderTest_buildHeader_java_util_Collection_java_lang_String__;
  org_apache_any23_extractor_rdfa_RDFa11Parser_resolveNamespacedIRI_java_lang_String__org_apache_any23_extractor_rdfa_RDFa11Parser_ResolutionPolicy_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_getVocabulary__;
  org_apache_any23_extractor_rdfa_RDFa11Parser_resolveNamespacedIRI_java_lang_String__org_apache_any23_extractor_rdfa_RDFa11Parser_ResolutionPolicy_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_resolveIRI_java_lang_String_;
  org_apache_any23_extractor_rdfa_RDFa11Parser_resolveNamespacedIRI_java_lang_String__org_apache_any23_extractor_rdfa_RDFa11Parser_ResolutionPolicy_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_getMapping_java_lang_String_;
  org_apache_any23_extractor_html_HCardExtractorTest_testAbbrTitleEverything__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  org_apache_any23_extractor_html_HCalendarExtractorTest_test16__ -> org_apache_any23_extractor_html_HCalendarExtractorTest_assertDefault_java_lang_String_;
  org_apache_any23_rdf_Any23ValueFactoryWrapper_createIRI_java_lang_String_ -> org_apache_any23_rdf_Any23ValueFactoryWrapper_reportError_java_lang_Exception_;
  org_apache_any23_filter_ExtractionContextBlocker_ValvedTriplePipe_unblock__ -> org_apache_any23_filter_ExtractionContextBlocker_ValvedTriplePipe_sendNamespace_java_lang_String__java_lang_String_;
  org_apache_any23_util_FileUtils_cp_java_io_File__java_io_File_ -> org_apache_any23_util_FileUtils_cp_java_io_InputStream__java_io_File_;
  org_apache_any23_extractor_SingleDocumentExtraction_isHTMLDocument__ -> org_apache_any23_extractor_SingleDocumentExtraction_filterExtractorsByMIMEType__;
  org_apache_any23_plugin_crawler_SiteCrawler_start_java_net_URL__java_util_regex_Pattern__boolean_ -> org_apache_any23_plugin_crawler_SiteCrawler_getWebCrawler__;
  org_apache_any23_plugin_crawler_SiteCrawler_start_java_net_URL__java_util_regex_Pattern__boolean_ -> org_apache_any23_plugin_crawler_SiteCrawler_getNumOfCrawlers__;
  org_apache_any23_extractor_SingleDocumentExtractionTest_testNestedMicroformats__ -> org_apache_any23_extractor_SingleDocumentExtractionTest_getInstance_java_lang_String_;
  org_apache_any23_extractor_SingleDocumentExtractionTest_testNestedMicroformats__ -> org_apache_any23_extractor_SingleDocumentExtractionTest_logStorageContent__;
  org_apache_any23_encoding_EncodingDetector_guessEncoding_java_io_InputStream__java_lang_String_ -> org_apache_any23_encoding_EncodingDetector_guessEncoding_java_io_InputStream_;
  org_apache_any23_configuration_DefaultConfiguration_getPropertyIntOrFail_java_lang_String_ -> org_apache_any23_configuration_DefaultConfiguration_getPropertyOrFail_java_lang_String_;
  openSubResult_ExtractionContext_ -> org_apache_any23_extractor_ExtractionResultImpl_checkOpen__;
  org_apache_any23_extractor_html_HCalendarExtractorTest_test03__ -> org_apache_any23_extractor_html_HCalendarExtractorTest_assertDefault_java_lang_String_;
  org_apache_any23_extractor_html_HTMLDocument_getSingularUrlField_java_lang_String_ -> org_apache_any23_extractor_html_HTMLDocument_getPluralUrlField_java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testRSS1ByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByContentAndName_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testRSS1ByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestRss1__;
  org_apache_any23_extractor_SingleDocumentExtractionTest_testNestedMicroformatsInduced__ -> org_apache_any23_extractor_SingleDocumentExtractionTest_getInstance_java_lang_String_;
  org_apache_any23_extractor_SingleDocumentExtractionTest_testNestedMicroformatsInduced__ -> org_apache_any23_extractor_SingleDocumentExtractionTest_logStorageContent__;
  org_apache_any23_http_DefaultHTTPClient_openInputStream_java_lang_String_ -> org_apache_any23_http_DefaultHTTPClient_ensureClientInitialized__;
  org_apache_any23_extractor_SingleDocumentExtraction_getDetectedMIMEType__ -> org_apache_any23_extractor_SingleDocumentExtraction_filterExtractorsByMIMEType__;
  org_apache_any23_encoding_EncodingUtils_contentTypeCharset_java_lang_CharSequence_ -> org_apache_any23_encoding_EncodingUtils_forName_java_lang_String_;
  org_apache_any23_extractor_html_HCardExtractorTest_testRelativeUrl__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  org_apache_any23_extractor_html_HCardExtractorTest_testRelativeUrl__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertJohn__;
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_extractAndVerifyAgainstNQuads_java_lang_String__java_lang_String__boolean_ -> org_apache_any23_extractor_microdata_MicrodataExtractorTest_loadResultStatement_java_lang_String_;
  org_apache_any23_extractor_html_SpanCloserInputStreamTest_testSpanPositiveReplacement__ -> org_apache_any23_extractor_html_SpanCloserInputStreamTest_processInput_java_lang_String__java_lang_String_;
  org_apache_any23_extractor_html_SpanCloserInputStreamTest_testMixedReplacement__ -> org_apache_any23_extractor_html_SpanCloserInputStreamTest_processInput_java_lang_String__java_lang_String_;
  org_apache_any23_rdf_RDFUtils_parseRDF_java_lang_String_ -> org_apache_any23_rdf_RDFUtils_getFormatByExtension_java_lang_String_;
  org_apache_any23_util_StringUtils_escapeAsJSONString_java_lang_String_ -> org_apache_any23_util_StringUtils_escapeDoubleQuotes_java_lang_String_;
  org_apache_any23_configuration_DefaultConfiguration_getPropertyValue_java_lang_String_ -> org_apache_any23_configuration_DefaultConfiguration_defineProperty_java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testRSS2ByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByContentAndName_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testRSS2ByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestRss2__;
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testExample5222__ -> org_apache_any23_extractor_microdata_MicrodataExtractorTest_extractAndVerifyAgainstNQuads_java_lang_String__java_lang_String_;
  org_apache_any23_Any23Test_testTTLDetection__ -> org_apache_any23_Any23Test_assertDetection_java_lang_String__java_lang_String____;
  org_apache_any23_encoding_TikaEncodingDetectorTest_testTikaIssue868__ -> org_apache_any23_encoding_TikaEncodingDetectorTest_bytes_java_lang_String__java_nio_charset_Charset_;
  org_apache_any23_filter_ExtractionContextBlocker_unblockDocument__ -> org_apache_any23_filter_ExtractionContextBlocker_ValvedTriplePipe_unblock__;
  org_apache_any23_extractor_html_HTMLFixture_getHTMLDocument__ -> org_apache_any23_extractor_html_HTMLFixture_getDOM__;
  org_apache_any23_extractor_microdata_MicrodataParserTest_testBasicFeatures__ -> org_apache_any23_extractor_microdata_MicrodataParserTest_extractItemsAndVerifyJSONSerialization_java_lang_String__java_lang_String_;
  org_apache_any23_extractor_html_HCardExtractorTest_testIgnoreUnknowns__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  org_apache_any23_http_AcceptHeaderBuilderTest_testSuppressQIfEquals1__ -> org_apache_any23_http_AcceptHeaderBuilderTest_buildHeader_java_util_Collection_java_lang_String__;
  org_apache_any23_extractor_html_AbstractExtractorTestCase_getIssues__ -> org_apache_any23_extractor_html_AbstractExtractorTestCase_getExtractorFactory__;
  org_apache_any23_http_AcceptHeaderBuilderTest_testHighestTypeWildcardIsChosen__ -> org_apache_any23_http_AcceptHeaderBuilderTest_buildHeader_java_util_Collection_java_lang_String__;
  org_apache_any23_extractor_SingleDocumentExtractionTest_testMicroformatDomains__ -> org_apache_any23_extractor_SingleDocumentExtractionTest_getInstance_java_lang_String_;
  org_apache_any23_extractor_SingleDocumentExtractionTest_testMicroformatDomains__ -> org_apache_any23_extractor_SingleDocumentExtractionTest_logStorageContent__;
  org_apache_any23_extractor_html_HCardExtractorTest_testEMailNotUri__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  org_apache_any23_extractor_html_HCardExtractorTest_testEMailNotUri__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertJohn__;
  org_apache_any23_servlet_ServletTest_testJSONResponseFormat__ -> org_apache_any23_servlet_ServletTest_doPostRequest_java_lang_String__java_lang_String__java_lang_String_;
  extract_ExtractionParameters__String__TripleHandler_ -> org_apache_any23_Any23_createDocumentSource_java_lang_String_;
  org_apache_any23_Any23Test_testExplicitEncoding__ -> org_apache_any23_Any23Test_assertEncodingDetection_java_lang_String__java_lang_String__java_lang_String_;
  org_apache_any23_plugin_crawler_SiteCrawler_Anonymous_f14a2991_fe4c_445c_937a_e8858e8ac07b_run__ -> org_apache_any23_plugin_crawler_SiteCrawler_getWebCrawler__;
  org_apache_any23_plugin_crawler_SiteCrawler_Anonymous_f14a2991_fe4c_445c_937a_e8858e8ac07b_run__ -> org_apache_any23_plugin_crawler_SiteCrawler_getNumOfCrawlers__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectCSVByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMEtypeByContent_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectCSVByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestCsv__;
  org_apache_any23_vocab_Vocabulary_createProperty_java_lang_String__java_lang_String_ -> org_apache_any23_vocab_Vocabulary_createIRI_java_lang_String__java_lang_String_;
  org_apache_any23_extractor_microdata_MicrodataParserTest_testDeferProperties__ -> org_apache_any23_extractor_microdata_MicrodataParserTest_getMicrodataDom_java_lang_String_;
  addItemAddresses_HTMLDocument__Resource_ -> org_apache_any23_extractor_html_HListingExtractor_getDescription__;
  aboutIsValid_Node_ -> org_apache_any23_validator_rule_AboutNotURIRule_isURL_java_lang_String_;
  org_apache_any23_extractor_calendar_BaseCalendarExtractor_type_java_lang_String_ -> org_apache_any23_extractor_calendar_BaseCalendarExtractor_localNameOfType_java_lang_String_;
  org_apache_any23_plugin_Any23PluginManager_DynamicClassLoader_addJAR_java_io_File_ -> org_apache_any23_plugin_Any23PluginManager_DynamicClassLoader_addURL_java_lang_String_;
  org_apache_any23_extractor_microdata_ItemPropValue_formatDateTime_java_util_Date_ -> org_apache_any23_extractor_microdata_ItemPropValue_getSdf__;
  org_apache_any23_Any23Test_testNturtleDetectionAndExtraction__ -> org_apache_any23_Any23Test_assertDetectionAndExtraction_java_lang_String_;
  org_apache_any23_util_StringUtils_countNL_java_lang_String_ -> org_apache_any23_util_StringUtils_countOccurrences_java_lang_String__java_lang_String_;
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testBadPropertyNames__ -> org_apache_any23_extractor_microdata_MicrodataExtractorTest_extractAndVerifyAgainstNQuads_java_lang_String__java_lang_String__boolean_;
  org_apache_any23_extractor_html_HCardExtractorTest_testRelativeUrlBase__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  org_apache_any23_extractor_html_HCardExtractorTest_testRelativeUrlBase__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertJohn__;
  org_apache_any23_plugin_Any23PluginManager_loadClassDir_java_io_File_ -> org_apache_any23_plugin_Any23PluginManager_DynamicClassLoader_addClassDir_java_io_File_;
  org_apache_any23_extractor_ExtractionException_printStackTrace_java_io_PrintWriter_ -> org_apache_any23_extractor_ExtractionException_printExceptionResult_java_io_PrintWriter_;
  org_apache_any23_extractor_html_HCalendarExtractorTest_test11__ -> org_apache_any23_extractor_html_HCalendarExtractorTest_assertDefault_java_lang_String_;
  org_apache_any23_extractor_html_EncodingTest_testEncodingHTML_ISO_8859_1__ -> org_apache_any23_extractor_html_EncodingTest_parseHTML_java_lang_String_;
  org_apache_any23_servlet_conneg_MediaRangeSpec_isWildcardSubtype__ -> org_apache_any23_servlet_conneg_MediaRangeSpec_isWildcardType__;
  closeContext_ExtractionContext_ -> org_apache_any23_cli_flows_PeopleExtractor_createPerson_java_lang_String_;
  closeContext_ExtractionContext_ -> org_apache_any23_writer_BenchmarkTripleHandler_StatObject_interimStop__;
  getCurrentObject_Node_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_resolveIRI_java_lang_String_;
  org_apache_any23_extractor_rdf_RDFParserFactory_InternalParseErrorListener_warning_java_lang_String__long__long_ -> org_apache_any23_extractor_rdf_RDFParserFactory_InternalParseErrorListener_notifyExceptionInNotification_java_lang_Exception_;
  org_apache_any23_extractor_html_HCalendarExtractorTest_test02__ -> org_apache_any23_extractor_html_HCalendarExtractorTest_assertDefault_java_lang_String_;
  assertNotContains_Resource__IRI__Literal_ -> org_apache_any23_extractor_html_AbstractExtractorTestCase_getFailedExtractionMessage__;
  org_apache_any23_extractor_html_HTMLDocument_readAttribute_java_lang_String_ -> org_apache_any23_extractor_html_HTMLDocument_getDocument__;
  org_apache_any23_extractor_html_EncodingTest_testEncodingXHTML_UTF_8__ -> org_apache_any23_extractor_html_EncodingTest_parseHTML_java_lang_String_;
  org_apache_any23_extractor_microdata_MicrodataParserTest_testNestedMicrodata__ -> org_apache_any23_extractor_microdata_MicrodataParserTest_extractItemsAndVerifyJSONSerialization_java_lang_String__java_lang_String_;
  org_apache_any23_encoding_TikaEncodingDetectorTest_testUTF8XHTML__ -> org_apache_any23_encoding_TikaEncodingDetectorTest_assertEncoding_java_lang_String__java_lang_String_;
  org_apache_any23_extractor_microdata_ItemPropValue_toJSON__ -> org_apache_any23_extractor_microdata_ItemPropValue_getSdf__;
  org_apache_any23_mime_MIMEType_compareTo_org_apache_any23_mime_MIMEType_ -> org_apache_any23_mime_MIMEType_getFullType__;
  org_apache_any23_extractor_ExtractionResultImpl_writeNamespace_java_lang_String__java_lang_String_ -> org_apache_any23_extractor_ExtractionResultImpl_checkOpen__;
  org_apache_any23_servlet_ServletTest_testGETWrongFormat__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  org_apache_any23_extractor_html_HCardExtractorTest_testImageSrc__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  org_apache_any23_extractor_html_HCardExtractorTest_testImageSrc__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertJohn__;
  org_apache_any23_writer_TripleWriterFactory_getMimeType__ -> org_apache_any23_writer_TripleWriterFactory_getTripleFormat__;
  org_apache_any23_servlet_conneg_MediaRangeSpec_parseRange_java_lang_String_ -> org_apache_any23_servlet_conneg_MediaRangeSpec_unescape_java_lang_String_;
  org_apache_any23_extractor_microdata_ItemPropValue_toString__ -> org_apache_any23_extractor_microdata_ItemPropValue_toJSON__;
  org_apache_any23_servlet_ServletTest_testPOSTNothing__ -> org_apache_any23_servlet_ServletTest_doPostRequest_java_lang_String__java_lang_String__java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRSS1ByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMEtypeByContent_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRSS1ByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestRss1__;
  org_apache_any23_extractor_html_RDFMergerTest_testAncestors__ -> org_apache_any23_extractor_html_RDFMergerTest_extractHCardAndRelated_java_lang_String_;
  org_apache_any23_rdf_Prefixes_canExpand_java_lang_String_ -> org_apache_any23_rdf_Prefixes_parsePrefix_java_lang_String_;
  org_apache_any23_rdf_Prefixes_canExpand_java_lang_String_ -> org_apache_any23_rdf_Prefixes_hasPrefix_java_lang_String_;
  org_apache_any23_servlet_ServletTest_testContentNegotiationDefaultsToTurtle__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  org_apache_any23_extractor_html_AbstractExtractorTestCase_extract_java_lang_String_ -> org_apache_any23_extractor_html_AbstractExtractorTestCase_getExtractorFactory__;
  org_apache_any23_Any23Test_testHTMLBruteForceDetection__ -> org_apache_any23_Any23Test_assertDetection_java_lang_String__java_lang_String____;
  org_apache_any23_extractor_rdf_JsonCleaningInputStream_isNextOrUnread_java_io_PushbackInputStream__int____ -> org_apache_any23_extractor_rdf_JsonCleaningInputStream_unread_java_io_PushbackInputStream__int_;
  org_apache_any23_encoding_TikaEncodingDetectorTest_testEncodingHTML__ -> org_apache_any23_encoding_TikaEncodingDetectorTest_assertEncoding_java_lang_String__java_lang_String_;
  org_apache_any23_extractor_microdata_MicrodataParserTest_testGetDateConcurrent__ -> org_apache_any23_extractor_microdata_MicrodataParserTest_getDom_byte___;
  org_apache_any23_extractor_rdfa_RDFa11ParserTest_testGetAsXMLLiteral__ -> org_apache_any23_extractor_rdfa_RDFa11ParserTest_getRootDocument__;
  org_apache_any23_configuration_Setting_withValue_V_ -> org_apache_any23_configuration_Setting_clone_S__V_;
  org_apache_any23_cli_Rover_run__ -> org_apache_any23_cli_Rover_configure__;
  org_apache_any23_cli_Rover_run__ -> org_apache_any23_cli_Rover_close__;
  org_apache_any23_encoding_EncodingUtils_charset_java_lang_String_ -> org_apache_any23_encoding_EncodingUtils_forName_java_lang_String_;
  org_apache_any23_servlet_conneg_MediaRangeSpec_parseAccept_java_lang_String_ -> org_apache_any23_servlet_conneg_MediaRangeSpec_parseRange_java_lang_String_;
  org_apache_any23_extractor_html_HCardName_getFields_java_lang_String_ -> org_apache_any23_extractor_html_HCardName_FieldValue_getValues__;
  org_apache_any23_extractor_ExtractionContext_copy_java_lang_String_ -> org_apache_any23_extractor_ExtractionContext_getExtractorName__;
  org_apache_any23_extractor_ExtractionContext_copy_java_lang_String_ -> org_apache_any23_extractor_ExtractionContext_getDocumentIRI__;
  org_apache_any23_extractor_ExtractionContext_copy_java_lang_String_ -> org_apache_any23_extractor_ExtractionContext_getDefaultLanguage__;
  writeTriple_Resource__IRI__Value__IRI_ -> org_apache_any23_extractor_ExtractionResultImpl_checkOpen__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRDFNQuadsByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByContentAndName_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRDFNQuadsByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestNQuads__;
  org_apache_any23_extractor_html_SpanCloserInputStreamTest_testSubsequentSpanReplacement__ -> org_apache_any23_extractor_html_SpanCloserInputStreamTest_processInput_java_lang_String__java_lang_String_;
  org_apache_any23_extractor_html_TagSoupParser_getValidatedDOM_boolean_ -> org_apache_any23_extractor_html_TagSoupParser_getDOM__;
  extract_ScribeIndex__WriteContext__BNode__ICalComponent__ExtractionResult__boolean_ -> org_apache_any23_extractor_calendar_BaseCalendarExtractor_type_java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectContentPlainByMeta__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByMimeTypeHint_java_lang_String__java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectTextN3ByMeta__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByMimeTypeHint_java_lang_String__java_lang_String_;
  org_apache_any23_servlet_ServletTest_testGETwithURLDecoding__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  org_apache_any23_extractor_microdata_MicrodataParserTest_getMicrodataDom_java_lang_String_ -> org_apache_any23_extractor_microdata_MicrodataParserTest_getDom_java_lang_String_;
  org_apache_any23_extractor_html_EncodingTest_testEncodingHTML_UTF_8__ -> org_apache_any23_extractor_html_EncodingTest_parseHTML_java_lang_String_;
  org_apache_any23_extractor_html_HCardName_isMultiField_java_lang_String_ -> org_apache_any23_extractor_html_HCardName_FieldValue_isMultiField__;
  org_apache_any23_plugin_Any23PluginManager_loadClassDirs_java_io_File____ -> org_apache_any23_plugin_Any23PluginManager_loadClassDir_java_io_File_;
  org_apache_any23_writer_JSONWriter_printBNode_java_lang_String_ -> org_apache_any23_writer_JSONWriter_printValue_java_lang_String__java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testZipByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByContentAndName_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testZipByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestZip__;
  org_apache_any23_extractor_html_RDFMergerTest_testAdr__ -> org_apache_any23_extractor_html_RDFMergerTest_extractHRevAndRelated_java_lang_String_;
  org_apache_any23_writer_ReportingTripleHandler_printReport__ -> org_apache_any23_writer_ReportingTripleHandler_getTotalDocuments__;
  org_apache_any23_writer_ReportingTripleHandler_printReport__ -> org_apache_any23_writer_ReportingTripleHandler_getTotalTriples__;
  org_apache_any23_extractor_csv_CSVReaderBuilder_isCSV_java_io_InputStream_ -> org_apache_any23_extractor_csv_CSVReaderBuilder_getBestStrategy_java_io_InputStream_;
  org_apache_any23_extractor_html_HTMLDocument_findMicroformattedValue_java_lang_String__java_lang_String__java_lang_String__java_lang_String__java_lang_String_ -> org_apache_any23_extractor_html_HTMLDocument_findMicroformattedObjectNode_java_lang_String__java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectZIPByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMEtypeByContent_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectZIPByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestZip__;
  org_apache_any23_extractor_html_HTMLFixture_getOpener_java_lang_String_ -> org_apache_any23_extractor_html_HTMLFixture_getFile__;
  org_apache_any23_extractor_html_HCardName_getFullNamePart_java_lang_String__int_ -> org_apache_any23_extractor_html_HCardName_FieldValue_getValue__;
  org_apache_any23_extractor_html_AbstractExtractorTestCase_assertModelEmpty__ -> org_apache_any23_extractor_html_AbstractExtractorTestCase_getFailedExtractionMessage__;
  org_apache_any23_extractor_SingleDocumentExtraction_hasMatchingExtractors__ -> org_apache_any23_extractor_SingleDocumentExtraction_filterExtractorsByMIMEType__;
  org_apache_any23_servlet_ServletTest_testGETwithURLEncoding__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  org_apache_any23_servlet_conneg_MediaRangeSpec_getBestMatch_java_util_List_org_apache_any23_servlet_conneg_MediaRangeSpec__ -> org_apache_any23_servlet_conneg_MediaRangeSpec_getPrecedence_org_apache_any23_servlet_conneg_MediaRangeSpec_;
  consolidateResources_List__List__boolean__TripleHandler__String_ -> org_apache_any23_extractor_SingleDocumentExtraction_createExtractionContext_java_lang_String_;
  assertExtractorActivation_String__Class___extends_Extractor____ -> org_apache_any23_Any23Test_detectAndExtract_java_lang_String_;
  org_apache_any23_util_StreamUtils_asString_java_io_InputStream_ -> org_apache_any23_util_StreamUtils_asString_java_io_InputStream__boolean_;
  addClassesName_HTMLDocument__Resource_ -> org_apache_any23_extractor_html_SpeciesExtractor_resolvePropertyName_java_lang_String_;
  of_Collection_ -> org_apache_any23_configuration_Settings_mapForSize_int_;
  org_apache_any23_writer_WriterRegistryTest_testGetIdentifiers__ -> org_apache_any23_writer_WriterRegistryTest_assertUnique_java_util_List_java_lang_String__;
  org_apache_any23_servlet_ServletTest_testCorrectBaseIRI__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  org_apache_any23_writer_TripleFormat_checkMimeTypes_java_util_List_java_lang_String__ -> org_apache_any23_writer_TripleFormat_checkNonNull_E__java_lang_String_;
  org_apache_any23_writer_TripleFormat_checkMimeTypes_java_util_List_java_lang_String__ -> org_apache_any23_writer_TripleFormat_mimeTypeErr_java_lang_String_;
  org_apache_any23_cli_ToolRunner_main_java_lang_String___ -> org_apache_any23_cli_ToolRunner_execute_java_lang_String____;
  org_apache_any23_extractor_rdf_JsonCleaningInputStream_read__ -> org_apache_any23_extractor_rdf_JsonCleaningInputStream_unread_java_io_PushbackInputStream__int_;
  org_apache_any23_extractor_rdf_JsonCleaningInputStream_read__ -> org_apache_any23_extractor_rdf_JsonCleaningInputStream_isNextOrUnread_java_io_PushbackInputStream__int____;
  org_apache_any23_extractor_microdata_MicrodataParserTest_testMicrodataJSONSerialization__ -> org_apache_any23_extractor_microdata_MicrodataParserTest_getMicrodataDom_java_lang_String_;
  org_apache_any23_servlet_ServletTest_testDefaultBaseIRIinPOST__ -> org_apache_any23_servlet_ServletTest_doPostRequest_java_lang_String__java_lang_String__java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectApplicationCSVByMeta__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByMimeTypeHint_java_lang_String__java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectTextTurtleByMeta__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByMimeTypeHint_java_lang_String__java_lang_String_;
  org_apache_any23_servlet_ServletTest_testPOSTBodyWorks__ -> org_apache_any23_servlet_ServletTest_doPostRequest_java_lang_String__java_lang_String__java_lang_String_;
  org_apache_any23_servlet_ServletTest_testPOSTBodyWorks__ -> org_apache_any23_servlet_ServletTest_assertContains_java_lang_String__java_lang_String_;
  org_apache_any23_encoding_TikaEncodingDetectorTest_testISO8859XHTML__ -> org_apache_any23_encoding_TikaEncodingDetectorTest_assertEncoding_java_lang_String__java_lang_String_;
  org_apache_any23_servlet_ServletTest_testContentNegotiationForUnacceptableFormatReturns406__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  org_apache_any23_extractor_microdata_ItemScope_toString__ -> org_apache_any23_extractor_microdata_ItemScope_toJSON__;
  assertNotContains_Resource__IRI__Resource_ -> org_apache_any23_extractor_html_AbstractExtractorTestCase_getFailedExtractionMessage__;
  org_apache_any23_extractor_calendar_BaseCalendarExtractor_localNameOfType_java_lang_String_ -> org_apache_any23_extractor_calendar_BaseCalendarExtractor_camelCase_java_lang_String__boolean_;
  org_apache_any23_encoding_TikaEncodingDetector_guessEncoding_java_io_InputStream_ -> org_apache_any23_encoding_TikaEncodingDetector_guessEncoding_java_io_InputStream__java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testHTMLByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByContentAndName_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testHTMLByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestHtml__;
  org_apache_any23_extractor_microdata_MicrodataParserTest_extractItemsAndVerifyJSONSerialization_java_lang_String__java_lang_String_ -> org_apache_any23_extractor_microdata_MicrodataParserTest_extractItems_java_lang_String_;
  org_apache_any23_extractor_microdata_MicrodataParserTest_extractItemsAndVerifyJSONSerialization_java_lang_String__java_lang_String_ -> org_apache_any23_extractor_microdata_MicrodataParserTest_getExpectedResultCount_java_util_Properties_;
  org_apache_any23_extractor_microdata_MicrodataParserTest_extractItemsAndVerifyJSONSerialization_java_lang_String__java_lang_String_ -> org_apache_any23_extractor_microdata_MicrodataParserTest_getExpectedErrorsCount_java_util_Properties_;
  org_apache_any23_extractor_html_RDFMergerTest_test03NoHcardForItem__ -> org_apache_any23_extractor_html_RDFMergerTest_extractHRevAndRelated_java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectXMLByMeta__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByMimeTypeHint_java_lang_String__java_lang_String_;
  org_apache_any23_extractor_ExampleInputOutput_getExampleIRI__ -> org_apache_any23_extractor_ExampleInputOutput_isBlindExtractor__;
  org_apache_any23_extractor_ExtractionParameters_setProperty_java_lang_String__java_lang_String_ -> org_apache_any23_extractor_ExtractionParameters_checkPropertyExists_java_lang_String_;
  org_apache_any23_extractor_ExtractionParameters_setProperty_java_lang_String__java_lang_String_ -> org_apache_any23_extractor_ExtractionParameters_validateValue_java_lang_String__java_lang_String_;
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testExample5221__ -> org_apache_any23_extractor_microdata_MicrodataExtractorTest_extractAndVerifyAgainstNQuads_java_lang_String__java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectTriXByMeta__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByMimeTypeHint_java_lang_String__java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectXHTMLByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMEtypeByContent_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectXHTMLByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestXHtml__;
  org_apache_any23_extractor_html_EncodingTest_testEncodingHTML_UTF_8_DeclarationAfterTitle__ -> org_apache_any23_extractor_html_EncodingTest_parseHTML_java_lang_String_;
  org_apache_any23_extractor_html_HCalendarExtractorTest_test15__ -> org_apache_any23_extractor_html_HCalendarExtractorTest_assertDefault_java_lang_String_;
  org_apache_any23_extractor_microdata_MicrodataParserTest_testDeferPropertiesLoopDetection1__ -> org_apache_any23_extractor_microdata_MicrodataParserTest_getMicrodataDom_java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectAtomByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMEtypeByContent_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectAtomByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestAtom__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testWSDLByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByContentAndName_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testWSDLByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestWsdl__;
  produceRowStatements_IRI__CSVRecord__ExtractionResult_ -> org_apache_any23_extractor_csv_CSVExtractor_getObjectFromCell_java_lang_String_;
  org_apache_any23_servlet_ServletTest_testGETwithURLEncodingWithFragment__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  org_apache_any23_servlet_ServletTest_testContentNegotiationForTurtleAlias__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  org_apache_any23_extractor_ExampleInputOutput_getExampleOutput__ -> org_apache_any23_extractor_ExampleInputOutput_getExampleInput__;
  org_apache_any23_extractor_ExampleInputOutput_getExampleOutput__ -> org_apache_any23_extractor_ExampleInputOutput_getExampleIRI__;
  org_apache_any23_extractor_html_HCalendarExtractorTest_test06__ -> org_apache_any23_extractor_html_HCalendarExtractorTest_assertDefault_java_lang_String_;
  org_apache_any23_extractor_html_AbstractExtractorTestCase_getFailedExtractionMessage__ -> org_apache_any23_extractor_html_AbstractExtractorTestCase_dumpModelToNQuads__;
  org_apache_any23_rdf_Prefixes_add_java_lang_String__java_lang_String_ -> org_apache_any23_rdf_Prefixes_isVolatile_java_lang_String_;
  org_apache_any23_rdf_Prefixes_add_java_lang_String__java_lang_String_ -> org_apache_any23_rdf_Prefixes_hasPrefix_java_lang_String_;
  org_apache_any23_rdf_Prefixes_add_java_lang_String__java_lang_String_ -> org_apache_any23_rdf_Prefixes_getNamespaceIRIFor_java_lang_String_;
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testExampleSchemaOrg2__ -> org_apache_any23_extractor_microdata_MicrodataExtractorTest_extractAndVerifyAgainstNQuads_java_lang_String__java_lang_String_;
  org_apache_any23_plugin_Any23PluginManager_loadPlugins_java_io_File____ -> org_apache_any23_plugin_Any23PluginManager_loadFiles_java_io_File____;
  org_apache_any23_mime_MIMEType_getFullType__ -> org_apache_any23_mime_MIMEType_getMajorType__;
  org_apache_any23_mime_MIMEType_getFullType__ -> org_apache_any23_mime_MIMEType_getSubtype__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectTextNQuadsByMeta__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByMimeTypeHint_java_lang_String__java_lang_String_;
  org_apache_any23_extractor_html_HCardExtractorTest_testHonorificAdditionalSingle__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  run_ExtractionParameters__ExtractionContext__InputStream__ExtractionResult_ -> org_apache_any23_extractor_calendar_BaseCalendarExtractor_toString_java_lang_Throwable_;
  run_ExtractionParameters__ExtractionContext__InputStream__ExtractionResult_ -> org_apache_any23_extractor_calendar_BaseCalendarExtractor_reader_java_io_InputStream_;
  run_ExtractionParameters__ExtractionContext__InputStream__ExtractionResult_ -> org_apache_any23_extractor_rdf_BaseRDFExtractor_toString_java_lang_Throwable_;
  run_ExtractionParameters__ExtractionContext__InputStream__ExtractionResult_ -> org_apache_any23_extractor_rdfa_BaseRDFaExtractor_toString_java_lang_Throwable_;
  org_apache_any23_util_DiscoveryUtils_getClassesInPackage_java_lang_String_ -> org_apache_any23_util_DiscoveryUtils_findClasses_java_io_File__java_lang_String_;
  org_apache_any23_rdf_Any23ValueFactoryWrapper_fixIRI_java_lang_String_ -> org_apache_any23_rdf_Any23ValueFactoryWrapper_reportError_java_lang_Exception_;
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testBadTypes__ -> org_apache_any23_extractor_microdata_MicrodataExtractorTest_extractAndVerifyAgainstNQuads_java_lang_String__java_lang_String_;
  createHTTPDocumentSource_WebResponder__String__boolean_ -> org_apache_any23_servlet_Servlet_isValidIRI_java_lang_String_;
  org_apache_any23_rdf_Prefixes_createSubset_java_lang_String____ -> org_apache_any23_rdf_Prefixes_hasPrefix_java_lang_String_;
  org_apache_any23_rdf_Prefixes_createSubset_java_lang_String____ -> org_apache_any23_rdf_Prefixes_add_java_lang_String__java_lang_String_;
  org_apache_any23_rdf_Prefixes_createSubset_java_lang_String____ -> org_apache_any23_rdf_Prefixes_getNamespaceIRIFor_java_lang_String_;
  configureExtractors_ExtractorGroup_ -> org_apache_any23_plugin_Any23PluginManager_getPluginLocations_java_lang_String_;
  org_apache_any23_extractor_calendar_BaseCalendarExtractorTest_loadResultStatement_java_lang_String_ -> org_apache_any23_extractor_calendar_BaseCalendarExtractorTest_TestRDFHandler_getStatements__;
  org_apache_any23_rdf_Prefixes_create1_java_lang_String__java_lang_String_ -> org_apache_any23_rdf_Prefixes_add_java_lang_String__java_lang_String_;
  org_apache_any23_extractor_html_HTMLDocument_getPluralTextField_java_lang_String_ -> org_apache_any23_extractor_html_HTMLDocument_getDocument__;
  org_apache_any23_extractor_SingleDocumentExtractionTest_testNestedVCardAdr__ -> org_apache_any23_extractor_SingleDocumentExtractionTest_getInstance_java_lang_String_;
  org_apache_any23_extractor_SingleDocumentExtractionTest_testNestedVCardAdr__ -> org_apache_any23_extractor_SingleDocumentExtractionTest_logStorageContent__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectApplicationXMLByMeta__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByMimeTypeHint_java_lang_String__java_lang_String_;
  org_apache_any23_rdf_Prefixes_add_org_apache_any23_rdf_Prefixes_ -> org_apache_any23_rdf_Prefixes_isVolatile_java_lang_String_;
  org_apache_any23_rdf_Prefixes_add_org_apache_any23_rdf_Prefixes_ -> org_apache_any23_rdf_Prefixes_add_java_lang_String__java_lang_String_;
  org_apache_any23_rdf_Prefixes_add_org_apache_any23_rdf_Prefixes_ -> org_apache_any23_rdf_Prefixes_getNamespaceIRIFor_java_lang_String_;
  org_apache_any23_rdf_Prefixes_add_org_apache_any23_rdf_Prefixes_ -> org_apache_any23_rdf_Prefixes_addVolatile_java_lang_String__java_lang_String_;
  org_apache_any23_rdf_Prefixes_add_org_apache_any23_rdf_Prefixes_ -> org_apache_any23_rdf_Prefixes_allPrefixes__;
  org_apache_any23_rdf_Prefixes_addVolatile_java_lang_String__java_lang_String_ -> org_apache_any23_rdf_Prefixes_hasPrefix_java_lang_String_;
  extractJSONLDScript_Document__String__ExtractionParameters__ExtractionContext__ExtractionResult_ -> org_apache_any23_extractor_html_EmbeddedJSONLDExtractor_getPrefixIfExists_java_lang_String_;
  org_apache_any23_writer_RDFWriterTripleHandler_writeNamespace_java_lang_String__java_lang_String_ -> org_apache_any23_writer_RDFWriterTripleHandler_writer__;
  org_apache_any23_extractor_html_HTMLDocument_getText__ -> org_apache_any23_extractor_html_HTMLDocument_getDocument__;
  org_apache_any23_extractor_rdf_RDFParserFactory_InternalParseErrorListener_error_java_lang_String__long__long_ -> org_apache_any23_extractor_rdf_RDFParserFactory_InternalParseErrorListener_notifyExceptionInNotification_java_lang_Exception_;
  org_apache_any23_writer_TripleFormat_checkExtensions_java_util_List_java_lang_String__ -> org_apache_any23_writer_TripleFormat_extensionErr_java_lang_String_;
  org_apache_any23_writer_TripleFormat_checkExtensions_java_util_List_java_lang_String__ -> org_apache_any23_writer_TripleFormat_checkNonNull_E__java_lang_String_;
  org_apache_any23_servlet_ServletTest_testPOSTwithoutContentType__ -> org_apache_any23_servlet_ServletTest_doPostRequest_java_lang_String__java_lang_String__java_lang_String_;
  org_apache_any23_configuration_DefaultConfiguration_getProperty_java_lang_String__java_lang_String_ -> org_apache_any23_configuration_DefaultConfiguration_getPropertyValue_java_lang_String_;
  org_apache_any23_extractor_html_RDFMergerTest_test02RatedTags__ -> org_apache_any23_extractor_html_RDFMergerTest_extractHRevAndRelated_java_lang_String_;
  org_apache_any23_extractor_rdfa_RDFa11Parser_resolveIRI_java_lang_String_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_isAbsoluteIRI_java_lang_String_;
  org_apache_any23_extractor_html_HCalendarExtractorTest_test01__ -> org_apache_any23_extractor_html_HCalendarExtractorTest_assertDefault_java_lang_String_;
  printResponse_ReportingTripleHandler__ExtractionReport__byte____PrintStream_ -> org_apache_any23_servlet_WebResponder_printData_byte____java_io_PrintStream_;
  guessMIMEType_String__InputStream__MIMEType_ -> org_apache_any23_mime_NaiveMIMETypeDetector_getExtension_java_lang_String_;
  guessMIMEType_String__InputStream__MIMEType_ -> org_apache_any23_mime_TikaMIMETypeDetector_checkN3Format_java_io_InputStream_;
  guessMIMEType_String__InputStream__MIMEType_ -> org_apache_any23_mime_TikaMIMETypeDetector_checkNQuadsFormat_java_io_InputStream_;
  guessMIMEType_String__InputStream__MIMEType_ -> org_apache_any23_mime_TikaMIMETypeDetector_checkTurtleFormat_java_io_InputStream_;
  guessMIMEType_String__InputStream__MIMEType_ -> org_apache_any23_mime_TikaMIMETypeDetector_checkCSVFormat_java_io_InputStream_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectHTMLByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMEtypeByContent_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectHTMLByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestHtml__;
  org_apache_any23_encoding_TikaEncodingDetectorTest_testUTF8AfterTitle__ -> org_apache_any23_encoding_TikaEncodingDetectorTest_assertEncoding_java_lang_String__java_lang_String_;
  org_apache_any23_extractor_html_HTMLDocument_extractRelTagNodes__ -> org_apache_any23_extractor_html_HTMLDocument_getDocument__;
  org_apache_any23_util_StreamUtils_asString_java_io_InputStream__boolean_ -> org_apache_any23_util_StreamUtils_closeGracefully_java_io_Closeable_;
  org_apache_any23_http_DefaultHTTPClient_ensureClientInitialized__ -> org_apache_any23_http_DefaultHTTPClient_getSoTimeout__;
  org_apache_any23_http_DefaultHTTPClient_ensureClientInitialized__ -> org_apache_any23_http_DefaultHTTPClient_getConnectionTimeout__;
  org_apache_any23_configuration_DefaultConfiguration_getPropertyOrFail_java_lang_String_ -> org_apache_any23_configuration_DefaultConfiguration_getPropertyValue_java_lang_String_;
  gerCurrentObjectLiteral_Node_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_getContext__;
  org_apache_any23_extractor_rdfa_RDFa11ParserTest_testIsRelativePositive1__ -> org_apache_any23_extractor_rdfa_RDFa11ParserTest_getRootDocument__;
  org_apache_any23_writer_WriterFactoryRegistry_getWriterInstanceByIdentifier_java_lang_String__java_io_OutputStream_ -> org_apache_any23_writer_WriterFactoryRegistry_getWriterByIdentifier_java_lang_String_;
  org_apache_any23_encoding_EncodingUtils_stats_java_io_InputStream_ -> org_apache_any23_encoding_EncodingUtils_TextStatisticsOptimizedForUtf8_addData_byte____int__int_;
  org_apache_any23_extractor_rdf_RDFParserFactory_InternalParseErrorListener_fatalError_java_lang_String__long__long_ -> org_apache_any23_extractor_rdf_RDFParserFactory_InternalParseErrorListener_notifyExceptionInNotification_java_lang_Exception_;
  org_apache_any23_extractor_html_HCardExtractorTest_testTel__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  org_apache_any23_extractor_html_HCardExtractorTest_testTel__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertJohn__;
  org_apache_any23_servlet_ServletTest_testPOSTonlyFormat__ -> org_apache_any23_servlet_ServletTest_doPostRequest_java_lang_String__java_lang_String__java_lang_String_;
  org_apache_any23_source_FileDocumentSource_readStream__ -> org_apache_any23_source_FileDocumentSource_openInputStream__;
  org_apache_any23_servlet_ServletTest_testGETwithIRIinParam__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_Negotiation_negotiate__ -> org_apache_any23_servlet_conneg_ContentTypeNegotiator_VariantSpec_getMediaType__;
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_Negotiation_negotiate__ -> org_apache_any23_servlet_conneg_ContentTypeNegotiator_VariantSpec_getAliases__;
  resolveCIRIeOrIRIList_Node__String__boolean_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_resolveCURIEOrIRI_java_lang_String__boolean_;
  org_apache_any23_plugin_Any23PluginManager_loadJAR_java_io_File_ -> org_apache_any23_plugin_Any23PluginManager_DynamicClassLoader_addJAR_java_io_File_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectTriXByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMEtypeByContent_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectTriXByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestTrix__;
  org_apache_any23_http_AcceptHeaderBuilderTest_testHighestSubtypeWildcardIsChosen__ -> org_apache_any23_http_AcceptHeaderBuilderTest_buildHeader_java_util_Collection_java_lang_String__;
  org_apache_any23_extractor_html_HCalendarExtractorTest_test10__ -> org_apache_any23_extractor_html_HCalendarExtractorTest_assertDefault_java_lang_String_;
  org_apache_any23_servlet_ServletTest_testGETwithFormatAndIRIinParam__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  org_apache_any23_extractor_html_AbstractExtractorTestCase_assertExtract_java_lang_String__boolean_ -> org_apache_any23_extractor_html_AbstractExtractorTestCase_extract_java_lang_String_;
  org_apache_any23_extractor_html_AbstractExtractorTestCase_assertExtract_java_lang_String__boolean_ -> org_apache_any23_extractor_html_AbstractExtractorTestCase_assertNoIssues__;
  org_apache_any23_extractor_SingleDocumentExtraction_detectEncoding__ -> org_apache_any23_extractor_SingleDocumentExtraction_ensureHasLocalCopy__;
  org_apache_any23_mime_TikaMIMETypeDetector_checkNQuadsFormat_java_io_InputStream_ -> org_apache_any23_mime_TikaMIMETypeDetector_findPattern_java_util_regex_Pattern____char__java_io_InputStream_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRDFN3ByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByContentAndName_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRDFN3ByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestN3__;
  org_apache_any23_extractor_microdata_ItemProp_toString__ -> org_apache_any23_extractor_microdata_ItemProp_toJSON__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRDFNQuadsByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMEtypeByContent_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRDFNQuadsByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestNQuads__;
  org_apache_any23_mime_TikaMIMETypeDetector_findPattern_java_util_regex_Pattern____char__java_io_InputStream_ -> org_apache_any23_mime_TikaMIMETypeDetector_extractDataSample_java_io_InputStream__char_;
  org_apache_any23_cli_ToolRunner_execute_boolean__java_lang_String____ -> org_apache_any23_cli_ToolRunner_parsePluginDirOption_java_lang_String___;
  org_apache_any23_cli_ToolRunner_execute_boolean__java_lang_String____ -> org_apache_any23_cli_ToolRunner_getToolsInClasspath__;
  org_apache_any23_cli_ToolRunner_execute_boolean__java_lang_String____ -> org_apache_any23_cli_ToolRunner_printVersionInfo__;
  establishNewSubject_Node__EvaluationContext_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_resolveCURIEOrIRI_java_lang_String__boolean_;
  establishNewSubject_Node__EvaluationContext_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_resolveIRI_java_lang_String_;
  org_apache_any23_servlet_ServletTest_testPOSTbodyMissingFormat__ -> org_apache_any23_servlet_ServletTest_doPostRequest_java_lang_String__java_lang_String__java_lang_String_;
  org_apache_any23_servlet_ServletTest_testPOSTbodyMissingFormat__ -> org_apache_any23_servlet_ServletTest_assertContains_java_lang_String__java_lang_String_;
  org_apache_any23_http_AcceptHeaderBuilderTest_testSingleHeaderSpecificWithQ__ -> org_apache_any23_http_AcceptHeaderBuilderTest_buildHeader_java_util_Collection_java_lang_String__;
  org_apache_any23_servlet_ServletTest_testGETOnlyFormat__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  getMicrodata_Document__ErrorMode_ -> org_apache_any23_extractor_microdata_MicrodataParser_setErrorMode_org_apache_any23_extractor_microdata_MicrodataParser_ErrorMode_;
  getMicrodata_Document__ErrorMode_ -> org_apache_any23_extractor_microdata_MicrodataParser_getErrors__;
  org_apache_any23_rdf_RDFUtils_makeIRI__ -> org_apache_any23_rdf_RDFUtils_bnode_java_lang_String_;
  org_apache_any23_rdf_Prefixes_addVolatile_org_apache_any23_rdf_Prefixes_ -> org_apache_any23_rdf_Prefixes_addVolatile_java_lang_String__java_lang_String_;
  org_apache_any23_rdf_Prefixes_addVolatile_org_apache_any23_rdf_Prefixes_ -> org_apache_any23_rdf_Prefixes_getNamespaceIRIFor_java_lang_String_;
  org_apache_any23_rdf_Prefixes_addVolatile_org_apache_any23_rdf_Prefixes_ -> org_apache_any23_rdf_Prefixes_allPrefixes__;
  org_apache_any23_extractor_ExampleInputOutput_getExampleInput__ -> org_apache_any23_extractor_ExampleInputOutput_isBlindExtractor__;
  org_apache_any23_filter_ExtractionContextBlocker_closeDocument__ -> org_apache_any23_filter_ExtractionContextBlocker_ValvedTriplePipe_close__;
  org_apache_any23_validator_DefaultValidatorTest_testAboutNotIRIRule__ -> org_apache_any23_validator_DefaultValidatorTest_loadDocument_java_lang_String_;
  org_apache_any23_extractor_html_HCardExtractorTest_testImgAlt__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  org_apache_any23_extractor_html_HCardExtractorTest_testImgAlt__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertJohn__;
  org_apache_any23_extractor_html_HCardName_getField_java_lang_String_ -> org_apache_any23_extractor_html_HCardName_getFullNamePart_java_lang_String__int_;
  org_apache_any23_extractor_html_HCardName_getField_java_lang_String_ -> org_apache_any23_extractor_html_HCardName_FieldValue_getValue__;
  org_apache_any23_extractor_html_AbstractExtractorTestCase_assertExtract_java_lang_String_ -> org_apache_any23_extractor_html_AbstractExtractorTestCase_assertExtract_java_lang_String__boolean_;
  org_apache_any23_Any23_createDocumentSource_java_lang_String_ -> org_apache_any23_Any23_getHTTPClient__;
  org_apache_any23_extractor_html_RDFMergerTest_testGeoAbbr__ -> org_apache_any23_extractor_html_RDFMergerTest_extractHCardAndRelated_java_lang_String_;
  org_apache_any23_cli_BaseTool_run_boolean_ -> org_apache_any23_cli_BaseTool_concise_java_io_PrintStream__boolean_;
  org_apache_any23_cli_BaseTool_run_boolean_ -> org_apache_any23_cli_BaseTool_getOut__;
  org_apache_any23_cli_BaseTool_run_boolean_ -> org_apache_any23_cli_BaseTool_setOut_java_io_PrintStream_;
  org_apache_any23_cli_BaseTool_run_boolean_ -> org_apache_any23_cli_BaseTool_close_java_io_PrintStream_;
  org_apache_any23_cli_RoverTest_testRunMultiFiles__ -> org_apache_any23_cli_RoverTest_runWithMultiSourcesAndVerify_java_lang_String____int_;
  org_apache_any23_extractor_microdata_MicrodataParserException_toJSON__ -> org_apache_any23_extractor_microdata_MicrodataParserException_getErrorPath__;
  org_apache_any23_extractor_microdata_MicrodataParserException_toJSON__ -> org_apache_any23_extractor_microdata_MicrodataParserException_getErrorLocationBeginRow__;
  org_apache_any23_extractor_microdata_MicrodataParserException_toJSON__ -> org_apache_any23_extractor_microdata_MicrodataParserException_getErrorLocationBeginCol__;
  org_apache_any23_extractor_microdata_MicrodataParserException_toJSON__ -> org_apache_any23_extractor_microdata_MicrodataParserException_getErrorLocationEndRow__;
  org_apache_any23_extractor_microdata_MicrodataParserException_toJSON__ -> org_apache_any23_extractor_microdata_MicrodataParserException_getErrorLocationEndCol__;
  org_apache_any23_servlet_ServletTest_testGETwithURLEncodingWithQuery__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  org_apache_any23_extractor_xpath_TemplateObject_getValueInternal_java_lang_String_ -> org_apache_any23_extractor_xpath_TemplateObject_createIRI_java_lang_String_;
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testMicrodataNestedUrlResolving__ -> org_apache_any23_extractor_microdata_MicrodataExtractorTest_extractAndVerifyAgainstNQuads_java_lang_String__java_lang_String_;
  startElement_Element_ -> org_apache_any23_extractor_rdfa_JsoupScanner_orEmpty_java_lang_String_;
  org_apache_any23_extractor_ExtractionResultImpl_printReport_java_io_PrintStream_ -> org_apache_any23_extractor_ExtractionResultImpl_getIssuesCount__;
  org_apache_any23_servlet_ServletTest_testJSONLDResponseFormat__ -> org_apache_any23_servlet_ServletTest_doPostRequest_java_lang_String__java_lang_String__java_lang_String_;
  org_apache_any23_extractor_html_SpanCloserInputStreamTest_testNestedSpanReplacement__ -> org_apache_any23_extractor_html_SpanCloserInputStreamTest_processInput_java_lang_String__java_lang_String_;
  extractMetaElement_Document__String_ -> org_apache_any23_extractor_html_HTMLMetaExtractor_getPrefixIfExists_java_lang_String_;
  org_apache_any23_rdf_RDFUtils_triple_java_lang_String__java_lang_String__java_lang_String_ -> org_apache_any23_rdf_RDFUtils_toValue_java_lang_String_;
  org_apache_any23_extractor_microdata_MicrodataParserTest_testDeferPropertiesStateManagement__ -> org_apache_any23_extractor_microdata_MicrodataParserTest_getMicrodataDom_java_lang_String_;
  org_apache_any23_rdf_Prefixes_createFromMap_java_util_Map_java_lang_String__java_lang_String___boolean_ -> org_apache_any23_rdf_Prefixes_add_java_lang_String__java_lang_String_;
  org_apache_any23_rdf_Prefixes_createFromMap_java_util_Map_java_lang_String__java_lang_String___boolean_ -> org_apache_any23_rdf_Prefixes_addVolatile_java_lang_String__java_lang_String_;
  getCommentFor_IRI_ -> org_apache_any23_vocab_Vocabulary_fillResourceToCommentMap__;
  org_apache_any23_servlet_conneg_ContentTypeNegotiator_getBestMatch_java_lang_String_ -> org_apache_any23_servlet_conneg_ContentTypeNegotiator_getBestMatch_java_lang_String__java_lang_String_;
  extractEntity_Node__ExtractionResult_ -> org_apache_any23_extractor_html_AdrExtractor_getDescription__;
  extractEntity_Node__ExtractionResult_ -> org_apache_any23_extractor_html_HCardExtractor_readFn__;
  extractEntity_Node__ExtractionResult_ -> org_apache_any23_extractor_html_HCardExtractor_readNames__;
  extractEntity_Node__ExtractionResult_ -> org_apache_any23_extractor_html_HCardExtractor_readOrganization__;
  extractEntity_Node__ExtractionResult_ -> org_apache_any23_extractor_html_HListingExtractor_addLister__;
  extractEntity_Node__ExtractionResult_ -> org_apache_any23_extractor_html_microformats2_HAdrExtractor_getDescription__;
  extractEntity_Node__ExtractionResult_ -> org_apache_any23_extractor_html_microformats2_HGeoExtractor_getDescription__;
  extractEntity_Node__ExtractionResult_ -> org_apache_any23_extractor_html_microformats2_HItemExtractor_getDescription__;
  org_apache_any23_servlet_ServletTest_testContentNegotiationForTurtle__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  org_apache_any23_extractor_html_HCalendarExtractorTest_test09__ -> org_apache_any23_extractor_html_HCalendarExtractorTest_assertDefault_java_lang_String_;
  org_apache_any23_extractor_ExtractorRegistryImpl_getExtractorGroup_java_util_List_java_lang_String__ -> org_apache_any23_extractor_ExtractorRegistryImpl_getFactory_java_lang_String_;
  org_apache_any23_extractor_html_HCardExtractorTest_testRelativeUrlXmlBase1__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  org_apache_any23_extractor_html_HCardExtractorTest_testRelativeUrlXmlBase1__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertJohn__;
  org_apache_any23_extractor_microdata_MicrodataParserTest_getExpectedResultCount_java_util_Properties_ -> org_apache_any23_extractor_microdata_MicrodataParserTest_countKeysWithPrefix_java_util_Properties__java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectTextPlainByMeta__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByMimeTypeHint_java_lang_String__java_lang_String_;
  org_apache_any23_util_DiscoveryUtils_findClasses_java_io_File__java_lang_String_ -> org_apache_any23_util_DiscoveryUtils_findClassesInJAR_java_lang_String_;
  org_apache_any23_util_DiscoveryUtils_findClasses_java_io_File__java_lang_String_ -> org_apache_any23_util_DiscoveryUtils_findClassesInDir_java_io_File__java_lang_String_;
  org_apache_any23_extractor_html_HCardExtractorTest_testHeader__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertJohn__;
  org_apache_any23_plugin_Any23PluginManager_DynamicClassLoader_addClassDir_java_io_File_ -> org_apache_any23_plugin_Any23PluginManager_DynamicClassLoader_addURL_java_lang_String_;
  org_apache_any23_plugin_officescraper_ExcelExtractorTest_testExtractXLS__ -> org_apache_any23_plugin_officescraper_ExcelExtractorTest_processFile_java_lang_String_;
  run_ExtractionParameters__ExtractionContext__Document__ExtractionResult_ -> org_apache_any23_extractor_html_HeadLinkExtractor_getDescription__;
  run_ExtractionParameters__ExtractionContext__Document__ExtractionResult_ -> org_apache_any23_extractor_html_HTMLMetaExtractor_Meta_getLang__;
  run_ExtractionParameters__ExtractionContext__Document__ExtractionResult_ -> org_apache_any23_extractor_html_HTMLMetaExtractor_Meta_getName__;
  run_ExtractionParameters__ExtractionContext__Document__ExtractionResult_ -> org_apache_any23_extractor_html_HTMLMetaExtractor_Meta_getContent__;
  run_ExtractionParameters__ExtractionContext__Document__ExtractionResult_ -> org_apache_any23_extractor_html_HTMLMetaExtractor_Meta_getHttpEquiv__;
  run_ExtractionParameters__ExtractionContext__Document__ExtractionResult_ -> org_apache_any23_extractor_html_ICBMExtractor_expand_java_lang_String_;
  run_ExtractionParameters__ExtractionContext__Document__ExtractionResult_ -> org_apache_any23_extractor_html_MicroformatExtractor_extract__;
  org_apache_any23_mime_purifier_WhiteSpacesPurifier_purify_java_io_InputStream_ -> org_apache_any23_mime_purifier_WhiteSpacesPurifier_isBlank_char_;
  assertStatementsSize_Resource__IRI__Value__int_ -> org_apache_any23_extractor_html_AbstractExtractorTestCase_getConnection__;
  org_apache_any23_extractor_microdata_MicrodataParserTest_testDeferPropertiesLoopDetection2__ -> org_apache_any23_extractor_microdata_MicrodataParserTest_getMicrodataDom_java_lang_String_;
  assertIssue_IssueReport_IssueLevel__String_ -> org_apache_any23_extractor_html_AbstractExtractorTestCase_getExtractorFactory__;
  org_apache_any23_extractor_html_HCardExtractorTest_testObjectDataDataUri__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  org_apache_any23_extractor_html_HCardExtractorTest_testObjectDataDataUri__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertJohn__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRDFaByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMEtypeByContent_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testDetectRDFaByContent__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestRdfa__;
  org_apache_any23_rdf_Any23ValueFactoryWrapper_resolveIRI_java_lang_String__java_net_URI_ -> org_apache_any23_rdf_Any23ValueFactoryWrapper_reportError_java_lang_Exception_;
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testSchemaOrgNestedProps__ -> org_apache_any23_extractor_microdata_MicrodataExtractorTest_extractAndVerifyAgainstNQuads_java_lang_String__java_lang_String_;
  org_apache_any23_servlet_ServletTest_testContentNegotiationForRDFXML__ -> org_apache_any23_servlet_ServletTest_doGetRequest_java_lang_String_;
  addClasses_HTMLDocument__Resource_ -> org_apache_any23_extractor_html_SpeciesExtractor_resolveClassName_java_lang_String_;
  org_apache_any23_extractor_xpath_TemplateXPathExtractionRuleImpl_checkVariableNameNotDeclared_java_lang_String_ -> org_apache_any23_extractor_xpath_TemplateXPathExtractionRuleImpl_variableNameDeclared_java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testCSVByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByContentAndName_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testCSVByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestCsv__;
  org_apache_any23_plugin_Any23PluginManager_loadJARs_java_io_File____ -> org_apache_any23_plugin_Any23PluginManager_loadJAR_java_io_File_;
  endElement_Element_ -> org_apache_any23_extractor_rdfa_JsoupScanner_orEmpty_java_lang_String_;
  org_apache_any23_util_ReaderInputStream_read__ -> org_apache_any23_util_ReaderInputStream_read_byte____int__int_;
  correctVariant_TextStatistics__Charset_ -> org_apache_any23_encoding_EncodingUtils_forName_java_lang_String_;
  correctVariant_TextStatistics__Charset_ -> org_apache_any23_encoding_EncodingUtils_charset_java_lang_String_;
  org_apache_any23_Any23Test_testN3Detection2__ -> org_apache_any23_Any23Test_assertDetection_java_lang_String__java_lang_String____;
  org_apache_any23_extractor_html_SpanCloserInputStreamTest_testRealSpanReplacement__ -> org_apache_any23_extractor_html_SpanCloserInputStreamTest_processInput_java_lang_String__java_lang_String_;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testAtomByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_detectMIMETypeByContentAndName_java_lang_String__java_util_Collection_java_lang_String__;
  org_apache_any23_mime_TikaMIMETypeDetectorTest_testAtomByContentAndName__ -> org_apache_any23_mime_TikaMIMETypeDetectorTest_manifestAtom__;
  org_apache_any23_extractor_html_HCalendarExtractorTest_test18__ -> org_apache_any23_extractor_html_HCalendarExtractorTest_assertDefault_java_lang_String_;
  org_apache_any23_servlet_WebResponder_initRdfWriter_java_lang_String__boolean__boolean_ -> org_apache_any23_servlet_WebResponder_getFormatWriter_java_lang_String_;
  org_apache_any23_AbstractAny23TestBase_getDocumentSourceFromResource_java_lang_String_ -> org_apache_any23_AbstractAny23TestBase_copyResourceToTempFile_java_lang_String_;
  org_apache_any23_extractor_html_HCardExtractorTest_testHonorificAdditionalMultiple__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  org_apache_any23_extractor_html_HCalendarExtractorTest_test05__ -> org_apache_any23_extractor_html_HCalendarExtractorTest_assertDefault_java_lang_String_;
  runExtraction_DocumentSource__ExtractionParameters__String__boolean__boolean_ -> org_apache_any23_servlet_WebResponder_initRdfWriter_java_lang_String__boolean__boolean_;
  runExtraction_DocumentSource__ExtractionParameters__String__boolean__boolean_ -> org_apache_any23_servlet_WebResponder_printHeader_java_io_PrintStream_;
  org_apache_any23_extractor_html_HCardExtractorTest_testAdr__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertDefaultVCard__;
  org_apache_any23_extractor_html_HCardExtractorTest_testAdr__ -> org_apache_any23_extractor_html_HCardExtractorTest_assertJohn__;
  org_apache_any23_configuration_SettingsTest_testBadSetting__ -> org_apache_any23_configuration_SettingsTest_BadKeyCreator_badKey__;
  extractPrefixes_Node__List_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_extractPrefixSections_java_lang_String_;
  extractPrefixes_Node__List_ -> org_apache_any23_extractor_rdfa_RDFa11Parser_resolveIRI_java_lang_String_;
  org_apache_any23_extractor_microdata_MicrodataExtractorTest_testExampleSchemaOrg1__ -> org_apache_any23_extractor_microdata_MicrodataExtractorTest_extractAndVerifyAgainstNQuads_java_lang_String__java_lang_String_;
}
